//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiCondition.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorElementsShouldBe.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"

@interface OrgAssertjCoreErrorElementsShouldBe ()

- (instancetype)initWithId:(id)actual
                    withId:(id)notSatisfies
withOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorElementsShouldBe_initWithId_withId_withOrgAssertjCoreApiCondition_(OrgAssertjCoreErrorElementsShouldBe *self, id actual, id notSatisfies, OrgAssertjCoreApiCondition *condition);

__attribute__((unused)) static OrgAssertjCoreErrorElementsShouldBe *new_OrgAssertjCoreErrorElementsShouldBe_initWithId_withId_withOrgAssertjCoreApiCondition_(id actual, id notSatisfies, OrgAssertjCoreApiCondition *condition) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorElementsShouldBe *create_OrgAssertjCoreErrorElementsShouldBe_initWithId_withId_withOrgAssertjCoreApiCondition_(id actual, id notSatisfies, OrgAssertjCoreApiCondition *condition);

@implementation OrgAssertjCoreErrorElementsShouldBe

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)elementsShouldBeWithId:(id)actual
                                                              withId:(id)notSatisfies
                                      withOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition {
  return OrgAssertjCoreErrorElementsShouldBe_elementsShouldBeWithId_withId_withOrgAssertjCoreApiCondition_(actual, notSatisfies, condition);
}

- (instancetype)initWithId:(id)actual
                    withId:(id)notSatisfies
withOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition {
  OrgAssertjCoreErrorElementsShouldBe_initWithId_withId_withOrgAssertjCoreApiCondition_(self, actual, notSatisfies, condition);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(elementsShouldBeWithId:withId:withOrgAssertjCoreApiCondition:);
  methods[1].selector = @selector(initWithId:withId:withOrgAssertjCoreApiCondition:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "elementsShouldBe", "LNSObject;LNSObject;LOrgAssertjCoreApiCondition;", "(Ljava/lang/Object;Ljava/lang/Object;Lorg/assertj/core/api/Condition<*>;)Lorg/assertj/core/error/ErrorMessageFactory;", "(Ljava/lang/Object;Ljava/lang/Object;Lorg/assertj/core/api/Condition<*>;)V" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorElementsShouldBe = { "ElementsShouldBe", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorElementsShouldBe;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorElementsShouldBe_elementsShouldBeWithId_withId_withOrgAssertjCoreApiCondition_(id actual, id notSatisfies, OrgAssertjCoreApiCondition *condition) {
  OrgAssertjCoreErrorElementsShouldBe_initialize();
  return create_OrgAssertjCoreErrorElementsShouldBe_initWithId_withId_withOrgAssertjCoreApiCondition_(actual, notSatisfies, condition);
}

void OrgAssertjCoreErrorElementsShouldBe_initWithId_withId_withOrgAssertjCoreApiCondition_(OrgAssertjCoreErrorElementsShouldBe *self, id actual, id notSatisfies, OrgAssertjCoreApiCondition *condition) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting elements:\n<%s>\n of \n<%s>\n to be <%s>", [IOSObjectArray arrayWithObjects:(id[]){ notSatisfies, actual, condition } count:3 type:NSObject_class_()]);
}

OrgAssertjCoreErrorElementsShouldBe *new_OrgAssertjCoreErrorElementsShouldBe_initWithId_withId_withOrgAssertjCoreApiCondition_(id actual, id notSatisfies, OrgAssertjCoreApiCondition *condition) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorElementsShouldBe, initWithId_withId_withOrgAssertjCoreApiCondition_, actual, notSatisfies, condition)
}

OrgAssertjCoreErrorElementsShouldBe *create_OrgAssertjCoreErrorElementsShouldBe_initWithId_withId_withOrgAssertjCoreApiCondition_(id actual, id notSatisfies, OrgAssertjCoreApiCondition *condition) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorElementsShouldBe, initWithId_withId_withOrgAssertjCoreApiCondition_, actual, notSatisfies, condition)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorElementsShouldBe)
