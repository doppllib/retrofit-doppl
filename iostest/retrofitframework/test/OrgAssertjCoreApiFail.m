//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiFail.h"
#include "OrgAssertjCoreInternalFailures.h"
#include "java/lang/AssertionError.h"

@implementation OrgAssertjCoreApiFail

+ (void)setRemoveAssertJRelatedElementsFromStackTraceWithBoolean:(jboolean)removeAssertJRelatedElementsFromStackTrace {
  OrgAssertjCoreApiFail_setRemoveAssertJRelatedElementsFromStackTraceWithBoolean_(removeAssertJRelatedElementsFromStackTrace);
}

+ (void)failWithNSString:(NSString *)failureMessage {
  OrgAssertjCoreApiFail_failWithNSString_(failureMessage);
}

+ (void)failWithNSString:(NSString *)failureMessage
         withNSException:(NSException *)realCause {
  OrgAssertjCoreApiFail_failWithNSString_withNSException_(failureMessage, realCause);
}

+ (void)failBecauseExceptionWasNotThrownWithIOSClass:(IOSClass *)throwableClass {
  OrgAssertjCoreApiFail_failBecauseExceptionWasNotThrownWithIOSClass_(throwableClass);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreApiFail_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 5, 6, -1, 7, -1, -1 },
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(setRemoveAssertJRelatedElementsFromStackTraceWithBoolean:);
  methods[1].selector = @selector(failWithNSString:);
  methods[2].selector = @selector(failWithNSString:withNSException:);
  methods[3].selector = @selector(failBecauseExceptionWasNotThrownWithIOSClass:);
  methods[4].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setRemoveAssertJRelatedElementsFromStackTrace", "Z", "fail", "LNSString;", "LNSString;LNSException;", "failBecauseExceptionWasNotThrown", "LIOSClass;", "(Ljava/lang/Class<+Ljava/lang/Throwable;>;)V" };
  static const J2ObjcClassInfo _OrgAssertjCoreApiFail = { "Fail", "org.assertj.core.api", ptrTable, methods, NULL, 7, 0x11, 5, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreApiFail;
}

@end

void OrgAssertjCoreApiFail_setRemoveAssertJRelatedElementsFromStackTraceWithBoolean_(jboolean removeAssertJRelatedElementsFromStackTrace) {
  OrgAssertjCoreApiFail_initialize();
  [((OrgAssertjCoreInternalFailures *) nil_chk(OrgAssertjCoreInternalFailures_instance())) setRemoveAssertJRelatedElementsFromStackTraceWithBoolean:removeAssertJRelatedElementsFromStackTrace];
}

void OrgAssertjCoreApiFail_failWithNSString_(NSString *failureMessage) {
  OrgAssertjCoreApiFail_initialize();
  @throw [((OrgAssertjCoreInternalFailures *) nil_chk(OrgAssertjCoreInternalFailures_instance())) failureWithNSString:failureMessage];
}

void OrgAssertjCoreApiFail_failWithNSString_withNSException_(NSString *failureMessage, NSException *realCause) {
  OrgAssertjCoreApiFail_initialize();
  JavaLangAssertionError *error = [((OrgAssertjCoreInternalFailures *) nil_chk(OrgAssertjCoreInternalFailures_instance())) failureWithNSString:failureMessage];
  [((JavaLangAssertionError *) nil_chk(error)) initCauseWithNSException:realCause];
  @throw error;
}

void OrgAssertjCoreApiFail_failBecauseExceptionWasNotThrownWithIOSClass_(IOSClass *throwableClass) {
  OrgAssertjCoreApiFail_initialize();
  @throw [((OrgAssertjCoreInternalFailures *) nil_chk(OrgAssertjCoreInternalFailures_instance())) failureWithNSString:NSString_java_formatWithNSString_withNSObjectArray_(@"Expected %s to be thrown", [IOSObjectArray arrayWithObjects:(id[]){ [((IOSClass *) nil_chk(throwableClass)) getSimpleName] } count:1 type:NSObject_class_()])];
}

void OrgAssertjCoreApiFail_init(OrgAssertjCoreApiFail *self) {
  NSObject_init(self);
}

OrgAssertjCoreApiFail *new_OrgAssertjCoreApiFail_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreApiFail, init)
}

OrgAssertjCoreApiFail *create_OrgAssertjCoreApiFail_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreApiFail, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreApiFail)
