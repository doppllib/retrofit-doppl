//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldBeWithin.h"
#include "java/lang/Integer.h"
#include "java/util/Date.h"

@interface OrgAssertjCoreErrorShouldBeWithin ()

- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)actual
                        withNSString:(NSString *)fieldDescription
                             withInt:(jint)fieldValue;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldBeWithin_initWithJavaUtilDate_withNSString_withInt_(OrgAssertjCoreErrorShouldBeWithin *self, JavaUtilDate *actual, NSString *fieldDescription, jint fieldValue);

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeWithin *new_OrgAssertjCoreErrorShouldBeWithin_initWithJavaUtilDate_withNSString_withInt_(JavaUtilDate *actual, NSString *fieldDescription, jint fieldValue) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeWithin *create_OrgAssertjCoreErrorShouldBeWithin_initWithJavaUtilDate_withNSString_withInt_(JavaUtilDate *actual, NSString *fieldDescription, jint fieldValue);

@implementation OrgAssertjCoreErrorShouldBeWithin

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeWithinWithJavaUtilDate:(JavaUtilDate *)actual
                                                                withNSString:(NSString *)fieldDescription
                                                                     withInt:(jint)fieldValue {
  return OrgAssertjCoreErrorShouldBeWithin_shouldBeWithinWithJavaUtilDate_withNSString_withInt_(actual, fieldDescription, fieldValue);
}

- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)actual
                        withNSString:(NSString *)fieldDescription
                             withInt:(jint)fieldValue {
  OrgAssertjCoreErrorShouldBeWithin_initWithJavaUtilDate_withNSString_withInt_(self, actual, fieldDescription, fieldValue);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldBeWithinWithJavaUtilDate:withNSString:withInt:);
  methods[1].selector = @selector(initWithJavaUtilDate:withNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldBeWithin", "LJavaUtilDate;LNSString;I" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldBeWithin = { "ShouldBeWithin", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldBeWithin;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeWithin_shouldBeWithinWithJavaUtilDate_withNSString_withInt_(JavaUtilDate *actual, NSString *fieldDescription, jint fieldValue) {
  OrgAssertjCoreErrorShouldBeWithin_initialize();
  return create_OrgAssertjCoreErrorShouldBeWithin_initWithJavaUtilDate_withNSString_withInt_(actual, fieldDescription, fieldValue);
}

void OrgAssertjCoreErrorShouldBeWithin_initWithJavaUtilDate_withNSString_withInt_(OrgAssertjCoreErrorShouldBeWithin *self, JavaUtilDate *actual, NSString *fieldDescription, jint fieldValue) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting:\n <%s>\nto be on %s <%s>", [IOSObjectArray arrayWithObjects:(id[]){ actual, fieldDescription, JavaLangInteger_valueOfWithInt_(fieldValue) } count:3 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldBeWithin *new_OrgAssertjCoreErrorShouldBeWithin_initWithJavaUtilDate_withNSString_withInt_(JavaUtilDate *actual, NSString *fieldDescription, jint fieldValue) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldBeWithin, initWithJavaUtilDate_withNSString_withInt_, actual, fieldDescription, fieldValue)
}

OrgAssertjCoreErrorShouldBeWithin *create_OrgAssertjCoreErrorShouldBeWithin_initWithJavaUtilDate_withNSString_withInt_(JavaUtilDate *actual, NSString *fieldDescription, jint fieldValue) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldBeWithin, initWithJavaUtilDate_withNSString_withInt_, actual, fieldDescription, fieldValue)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldBeWithin)
