//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiByteAssert")
#ifdef RESTRICT_OrgAssertjCoreApiByteAssert
#define INCLUDE_ALL_OrgAssertjCoreApiByteAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiByteAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiByteAssert

#if !defined (OrgAssertjCoreApiByteAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiByteAssert || defined(INCLUDE_OrgAssertjCoreApiByteAssert))
#define OrgAssertjCoreApiByteAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractByteAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractByteAssert 1
#include "OrgAssertjCoreApiAbstractByteAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangByte;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiByteAssert : OrgAssertjCoreApiAbstractByteAssert

#pragma mark Public

- (OrgAssertjCoreApiByteAssert *)asWithNSString:(NSString *)arg0
                              withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiByteAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiByteAssert *)describedAsWithNSString:(NSString *)arg0
                                       withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiByteAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiByteAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiByteAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiByteAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiByteAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiByteAssert *)inBinary;

- (OrgAssertjCoreApiByteAssert *)inHexadecimal;

- (OrgAssertjCoreApiByteAssert *)isBetweenWithNSNumber:(JavaLangByte *)arg0
                                          withNSNumber:(JavaLangByte *)arg1;

- (OrgAssertjCoreApiByteAssert *)isEqualToWithByte:(jbyte)arg0;

- (OrgAssertjCoreApiByteAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiByteAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiByteAssert *)isGreaterThanOrEqualToWithByte:(jbyte)arg0;

- (OrgAssertjCoreApiByteAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(JavaLangByte *)arg0;

- (OrgAssertjCoreApiByteAssert *)isGreaterThanWithByte:(jbyte)arg0;

- (OrgAssertjCoreApiByteAssert *)isGreaterThanWithJavaLangComparable:(JavaLangByte *)arg0;

- (OrgAssertjCoreApiByteAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiByteAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiByteAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiByteAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiByteAssert *)isLessThanOrEqualToWithByte:(jbyte)arg0;

- (OrgAssertjCoreApiByteAssert *)isLessThanOrEqualToWithJavaLangComparable:(JavaLangByte *)arg0;

- (OrgAssertjCoreApiByteAssert *)isLessThanWithByte:(jbyte)arg0;

- (OrgAssertjCoreApiByteAssert *)isLessThanWithJavaLangComparable:(JavaLangByte *)arg0;

- (OrgAssertjCoreApiByteAssert *)isNegative;

- (OrgAssertjCoreApiByteAssert *)isNotEqualToWithByte:(jbyte)arg0;

- (OrgAssertjCoreApiByteAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiByteAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiByteAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiByteAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiByteAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiByteAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiByteAssert *)isNotNegative;

- (OrgAssertjCoreApiByteAssert *)isNotNull;

- (OrgAssertjCoreApiByteAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiByteAssert *)isNotPositive;

- (OrgAssertjCoreApiByteAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiByteAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiByteAssert *)isNotZero;

- (OrgAssertjCoreApiByteAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiByteAssert *)isPositive;

- (OrgAssertjCoreApiByteAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiByteAssert *)isStrictlyBetweenWithNSNumber:(JavaLangByte *)arg0
                                                  withNSNumber:(JavaLangByte *)arg1;

- (OrgAssertjCoreApiByteAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiByteAssert *)isZero;

- (OrgAssertjCoreApiByteAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                  withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiByteAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiByteAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaLangByte:(JavaLangByte *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiByteAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiByteAssert_initWithJavaLangByte_(OrgAssertjCoreApiByteAssert *self, JavaLangByte *actual);

FOUNDATION_EXPORT OrgAssertjCoreApiByteAssert *new_OrgAssertjCoreApiByteAssert_initWithJavaLangByte_(JavaLangByte *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiByteAssert *create_OrgAssertjCoreApiByteAssert_initWithJavaLangByte_(JavaLangByte *actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiByteAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiByteAssert")
