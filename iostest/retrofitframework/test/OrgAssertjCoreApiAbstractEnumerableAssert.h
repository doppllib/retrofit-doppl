//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractEnumerableAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractEnumerableAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractEnumerableAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractEnumerableAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractEnumerableAssert

#if !defined (OrgAssertjCoreApiAbstractEnumerableAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractEnumerableAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractEnumerableAssert))
#define OrgAssertjCoreApiAbstractEnumerableAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractAssert 1
#include "OrgAssertjCoreApiAbstractAssert.h"

#define RESTRICT_OrgAssertjCoreApiEnumerableAssert 1
#define INCLUDE_OrgAssertjCoreApiEnumerableAssert 1
#include "OrgAssertjCoreApiEnumerableAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractEnumerableAssert : OrgAssertjCoreApiAbstractAssert < OrgAssertjCoreApiEnumerableAssert >

#pragma mark Public

- (OrgAssertjCoreApiAbstractEnumerableAssert *)asWithNSString:(NSString *)arg0
                                            withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)describedAsWithNSString:(NSString *)arg0
                                                     withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)hasSameSizeAsWithId:(id)other;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)hasSameSizeAsWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)hasSizeWithInt:(jint)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)inBinary;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)inHexadecimal;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isNotEmpty;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                                withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)usingDefaultComparator;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)usingDefaultElementComparator;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)usingElementComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

#pragma mark Protected

- (instancetype)initWithId:(id)actual
              withIOSClass:(IOSClass *)selfType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractEnumerableAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractEnumerableAssert_initWithId_withIOSClass_(OrgAssertjCoreApiAbstractEnumerableAssert *self, id actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractEnumerableAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractEnumerableAssert")
