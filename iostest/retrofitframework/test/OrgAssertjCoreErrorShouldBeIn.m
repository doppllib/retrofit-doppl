//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldBeIn.h"
#include "OrgAssertjCoreInternalComparisonStrategy.h"
#include "OrgAssertjCoreInternalStandardComparisonStrategy.h"

@interface OrgAssertjCoreErrorShouldBeIn ()

- (instancetype)initWithId:(id)actual
                    withId:(id)values
withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldBeIn_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreErrorShouldBeIn *self, id actual, id values, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeIn *new_OrgAssertjCoreErrorShouldBeIn_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id values, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeIn *create_OrgAssertjCoreErrorShouldBeIn_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id values, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

@implementation OrgAssertjCoreErrorShouldBeIn

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeInWithId:(id)actual
                                                        withId:(id)values
                  withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy {
  return OrgAssertjCoreErrorShouldBeIn_shouldBeInWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(actual, values, comparisonStrategy);
}

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeInWithId:(id)actual
                                                        withId:(id)values {
  return OrgAssertjCoreErrorShouldBeIn_shouldBeInWithId_withId_(actual, values);
}

- (instancetype)initWithId:(id)actual
                    withId:(id)values
withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy {
  OrgAssertjCoreErrorShouldBeIn_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(self, actual, values, comparisonStrategy);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldBeInWithId:withId:withOrgAssertjCoreInternalComparisonStrategy:);
  methods[1].selector = @selector(shouldBeInWithId:withId:);
  methods[2].selector = @selector(initWithId:withId:withOrgAssertjCoreInternalComparisonStrategy:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldBeIn", "LNSObject;LNSObject;LOrgAssertjCoreInternalComparisonStrategy;", "LNSObject;LNSObject;" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldBeIn = { "ShouldBeIn", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldBeIn;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeIn_shouldBeInWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id values, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  OrgAssertjCoreErrorShouldBeIn_initialize();
  return create_OrgAssertjCoreErrorShouldBeIn_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(actual, values, comparisonStrategy);
}

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeIn_shouldBeInWithId_withId_(id actual, id values) {
  OrgAssertjCoreErrorShouldBeIn_initialize();
  return create_OrgAssertjCoreErrorShouldBeIn_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(actual, values, OrgAssertjCoreInternalStandardComparisonStrategy_instance());
}

void OrgAssertjCoreErrorShouldBeIn_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreErrorShouldBeIn *self, id actual, id values, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting:\n <%s>\nto be in:\n <%s>\n%s", [IOSObjectArray arrayWithObjects:(id[]){ actual, values, comparisonStrategy } count:3 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldBeIn *new_OrgAssertjCoreErrorShouldBeIn_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id values, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldBeIn, initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_, actual, values, comparisonStrategy)
}

OrgAssertjCoreErrorShouldBeIn *create_OrgAssertjCoreErrorShouldBeIn_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id values, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldBeIn, initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_, actual, values, comparisonStrategy)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldBeIn)
