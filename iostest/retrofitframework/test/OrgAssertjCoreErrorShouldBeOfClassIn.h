//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldBeOfClassIn")
#ifdef RESTRICT_OrgAssertjCoreErrorShouldBeOfClassIn
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldBeOfClassIn 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldBeOfClassIn 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorShouldBeOfClassIn

#if !defined (OrgAssertjCoreErrorShouldBeOfClassIn_) && (INCLUDE_ALL_OrgAssertjCoreErrorShouldBeOfClassIn || defined(INCLUDE_OrgAssertjCoreErrorShouldBeOfClassIn))
#define OrgAssertjCoreErrorShouldBeOfClassIn_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@protocol OrgAssertjCoreErrorErrorMessageFactory;

@interface OrgAssertjCoreErrorShouldBeOfClassIn : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeOfClassInWithId:(id)actual
                                                               withId:(id)types;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorShouldBeOfClassIn)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeOfClassIn_shouldBeOfClassInWithId_withId_(id actual, id types);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorShouldBeOfClassIn)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldBeOfClassIn")
