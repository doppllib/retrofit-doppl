//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveAnnotations")
#ifdef RESTRICT_OrgAssertjCoreErrorShouldHaveAnnotations
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveAnnotations 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveAnnotations 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorShouldHaveAnnotations

#if !defined (OrgAssertjCoreErrorShouldHaveAnnotations_) && (INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveAnnotations || defined(INCLUDE_OrgAssertjCoreErrorShouldHaveAnnotations))
#define OrgAssertjCoreErrorShouldHaveAnnotations_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@class IOSClass;
@protocol JavaUtilCollection;
@protocol OrgAssertjCoreErrorErrorMessageFactory;

@interface OrgAssertjCoreErrorShouldHaveAnnotations : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldHaveAnnotationsWithIOSClass:(IOSClass *)actual
                                                         withJavaUtilCollection:(id<JavaUtilCollection>)expected
                                                         withJavaUtilCollection:(id<JavaUtilCollection>)missing;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorShouldHaveAnnotations)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldHaveAnnotations_shouldHaveAnnotationsWithIOSClass_withJavaUtilCollection_withJavaUtilCollection_(IOSClass *actual, id<JavaUtilCollection> expected, id<JavaUtilCollection> missing);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorShouldHaveAnnotations)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveAnnotations")
