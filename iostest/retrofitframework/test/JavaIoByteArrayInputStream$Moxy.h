//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaIoByteArrayInputStream$Moxy")
#ifdef RESTRICT_JavaIoByteArrayInputStream$Moxy
#define INCLUDE_ALL_JavaIoByteArrayInputStream$Moxy 0
#else
#define INCLUDE_ALL_JavaIoByteArrayInputStream$Moxy 1
#endif
#undef RESTRICT_JavaIoByteArrayInputStream$Moxy

#if !defined (JavaIoByteArrayInputStream_Moxy_) && (INCLUDE_ALL_JavaIoByteArrayInputStream$Moxy || defined(INCLUDE_JavaIoByteArrayInputStream_Moxy))
#define JavaIoByteArrayInputStream_Moxy_

#define RESTRICT_JavaIoByteArrayInputStream 1
#define INCLUDE_JavaIoByteArrayInputStream 1
#include "java/io/ByteArrayInputStream.h"

@class IOSByteArray;
@protocol JavaLangReflectInvocationHandler;

@interface JavaIoByteArrayInputStream_Moxy : JavaIoByteArrayInputStream {
 @public
  id<JavaLangReflectInvocationHandler> $__handler_;
}

#pragma mark Public

- (jint)available;

- (void)close;

- (jboolean)isEqual:(id)arg0;

- (id<JavaLangReflectInvocationHandler>)getHandler;

- (NSUInteger)hash;

- (void)markWithInt:(jint)arg0;

- (jboolean)markSupported;

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)arg0;

- (jint)readWithByteArray:(IOSByteArray *)arg0
                  withInt:(jint)arg1
                  withInt:(jint)arg2;

- (void)reset;

- (void)setHandlerWithJavaLangReflectInvocationHandler:(id<JavaLangReflectInvocationHandler>)handler;

- (jlong)skipWithLong:(jlong)arg0;

- (jint)super$available;

- (void)super$close;

- (jboolean)super$equalsWithId:(id)arg0;

- (jint)super$hashCode;

- (void)super$markWithInt:(jint)arg0;

- (jboolean)super$markSupported;

- (jint)super$read;

- (jint)super$readWithByteArray:(IOSByteArray *)arg0;

- (jint)super$readWithByteArray:(IOSByteArray *)arg0
                        withInt:(jint)arg1
                        withInt:(jint)arg2;

- (void)super$reset;

- (jlong)super$skipWithLong:(jlong)arg0;

- (NSString *)super$toString;

- (NSString *)description;

#pragma mark Protected

- (id)java_clone;

- (id)super$clone;

#pragma mark Package-Private

- (instancetype)initWithByteArray:(IOSByteArray *)a0;

- (instancetype)initWithByteArray:(IOSByteArray *)a0
                          withInt:(jint)a1
                          withInt:(jint)a2;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaIoByteArrayInputStream_Moxy)

J2OBJC_FIELD_SETTER(JavaIoByteArrayInputStream_Moxy, $__handler_, id<JavaLangReflectInvocationHandler>)

FOUNDATION_EXPORT void JavaIoByteArrayInputStream_Moxy_initWithByteArray_(JavaIoByteArrayInputStream_Moxy *self, IOSByteArray *a0);

FOUNDATION_EXPORT JavaIoByteArrayInputStream_Moxy *new_JavaIoByteArrayInputStream_Moxy_initWithByteArray_(IOSByteArray *a0) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaIoByteArrayInputStream_Moxy *create_JavaIoByteArrayInputStream_Moxy_initWithByteArray_(IOSByteArray *a0);

FOUNDATION_EXPORT void JavaIoByteArrayInputStream_Moxy_initWithByteArray_withInt_withInt_(JavaIoByteArrayInputStream_Moxy *self, IOSByteArray *a0, jint a1, jint a2);

FOUNDATION_EXPORT JavaIoByteArrayInputStream_Moxy *new_JavaIoByteArrayInputStream_Moxy_initWithByteArray_withInt_withInt_(IOSByteArray *a0, jint a1, jint a2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaIoByteArrayInputStream_Moxy *create_JavaIoByteArrayInputStream_Moxy_initWithByteArray_withInt_withInt_(IOSByteArray *a0, jint a1, jint a2);

J2OBJC_TYPE_LITERAL_HEADER(JavaIoByteArrayInputStream_Moxy)

@compatibility_alias JavaIoByteArrayInputStream$Moxy JavaIoByteArrayInputStream_Moxy;

#endif

#pragma pop_macro("INCLUDE_ALL_JavaIoByteArrayInputStream$Moxy")
