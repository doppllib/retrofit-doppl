//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiAssertionInfo.h"
#include "OrgAssertjCoreDataOffset.h"
#include "OrgAssertjCoreInternalComparisonStrategy.h"
#include "OrgAssertjCoreInternalNumbers.h"
#include "OrgAssertjCoreInternalRealNumbers.h"
#include "java/lang/Comparable.h"

@implementation OrgAssertjCoreInternalRealNumbers

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreInternalRealNumbers_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy {
  OrgAssertjCoreInternalRealNumbers_initWithOrgAssertjCoreInternalComparisonStrategy_(self, comparisonStrategy);
  return self;
}

- (void)assertIsNaNWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                               withJavaLangComparable:(id<JavaLangComparable>)actual {
  [self assertEqualByComparisonWithOrgAssertjCoreApiAssertionInfo:info withJavaLangComparable:actual withJavaLangComparable:[self NaN]];
}

- (id<JavaLangComparable>)NaN {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)assertIsNotNaNWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                  withJavaLangComparable:(id<JavaLangComparable>)actual {
  [self assertNotEqualByComparisonWithOrgAssertjCoreApiAssertionInfo:info withJavaLangComparable:actual withJavaLangComparable:[self NaN]];
}

- (jboolean)isEqualToWithJavaLangComparable:(id<JavaLangComparable>)actual
                     withJavaLangComparable:(id<JavaLangComparable>)expected
               withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)offset {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaLangComparable;", 0x404, -1, -1, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 2, -1, 3, -1, -1 },
    { NULL, "Z", 0x404, 6, 7, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgAssertjCoreInternalComparisonStrategy:);
  methods[2].selector = @selector(assertIsNaNWithOrgAssertjCoreApiAssertionInfo:withJavaLangComparable:);
  methods[3].selector = @selector(NaN);
  methods[4].selector = @selector(assertIsNotNaNWithOrgAssertjCoreApiAssertionInfo:withJavaLangComparable:);
  methods[5].selector = @selector(isEqualToWithJavaLangComparable:withJavaLangComparable:withOrgAssertjCoreDataOffset:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgAssertjCoreInternalComparisonStrategy;", "assertIsNaN", "LOrgAssertjCoreApiAssertionInfo;LJavaLangComparable;", "(Lorg/assertj/core/api/AssertionInfo;TNUMBER;)V", "()TNUMBER;", "assertIsNotNaN", "isEqualTo", "LJavaLangComparable;LJavaLangComparable;LOrgAssertjCoreDataOffset;", "(TNUMBER;TNUMBER;Lorg/assertj/core/data/Offset<*>;)Z", "<NUMBER::Ljava/lang/Comparable<TNUMBER;>;>Lorg/assertj/core/internal/Numbers<TNUMBER;>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreInternalRealNumbers = { "RealNumbers", "org.assertj.core.internal", ptrTable, methods, NULL, 7, 0x401, 6, 0, -1, -1, -1, 9, -1 };
  return &_OrgAssertjCoreInternalRealNumbers;
}

@end

void OrgAssertjCoreInternalRealNumbers_init(OrgAssertjCoreInternalRealNumbers *self) {
  OrgAssertjCoreInternalNumbers_init(self);
}

void OrgAssertjCoreInternalRealNumbers_initWithOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreInternalRealNumbers *self, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  OrgAssertjCoreInternalNumbers_initWithOrgAssertjCoreInternalComparisonStrategy_(self, comparisonStrategy);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreInternalRealNumbers)
