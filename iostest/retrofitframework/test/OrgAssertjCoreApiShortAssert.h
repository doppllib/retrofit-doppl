//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiShortAssert")
#ifdef RESTRICT_OrgAssertjCoreApiShortAssert
#define INCLUDE_ALL_OrgAssertjCoreApiShortAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiShortAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiShortAssert

#if !defined (OrgAssertjCoreApiShortAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiShortAssert || defined(INCLUDE_OrgAssertjCoreApiShortAssert))
#define OrgAssertjCoreApiShortAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractShortAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractShortAssert 1
#include "OrgAssertjCoreApiAbstractShortAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangShort;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiShortAssert : OrgAssertjCoreApiAbstractShortAssert

#pragma mark Public

- (OrgAssertjCoreApiShortAssert *)asWithNSString:(NSString *)arg0
                               withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiShortAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiShortAssert *)describedAsWithNSString:(NSString *)arg0
                                        withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiShortAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiShortAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiShortAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiShortAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiShortAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiShortAssert *)inBinary;

- (OrgAssertjCoreApiShortAssert *)inHexadecimal;

- (OrgAssertjCoreApiShortAssert *)isBetweenWithNSNumber:(JavaLangShort *)arg0
                                           withNSNumber:(JavaLangShort *)arg1;

- (OrgAssertjCoreApiShortAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiShortAssert *)isEqualToWithShort:(jshort)arg0;

- (OrgAssertjCoreApiShortAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiShortAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(JavaLangShort *)arg0;

- (OrgAssertjCoreApiShortAssert *)isGreaterThanOrEqualToWithShort:(jshort)arg0;

- (OrgAssertjCoreApiShortAssert *)isGreaterThanWithJavaLangComparable:(JavaLangShort *)arg0;

- (OrgAssertjCoreApiShortAssert *)isGreaterThanWithShort:(jshort)arg0;

- (OrgAssertjCoreApiShortAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiShortAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiShortAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiShortAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiShortAssert *)isLessThanOrEqualToWithJavaLangComparable:(JavaLangShort *)arg0;

- (OrgAssertjCoreApiShortAssert *)isLessThanOrEqualToWithShort:(jshort)arg0;

- (OrgAssertjCoreApiShortAssert *)isLessThanWithJavaLangComparable:(JavaLangShort *)arg0;

- (OrgAssertjCoreApiShortAssert *)isLessThanWithShort:(jshort)arg0;

- (OrgAssertjCoreApiShortAssert *)isNegative;

- (OrgAssertjCoreApiShortAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiShortAssert *)isNotEqualToWithShort:(jshort)arg0;

- (OrgAssertjCoreApiShortAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiShortAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiShortAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiShortAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiShortAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiShortAssert *)isNotNegative;

- (OrgAssertjCoreApiShortAssert *)isNotNull;

- (OrgAssertjCoreApiShortAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiShortAssert *)isNotPositive;

- (OrgAssertjCoreApiShortAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiShortAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiShortAssert *)isNotZero;

- (OrgAssertjCoreApiShortAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiShortAssert *)isPositive;

- (OrgAssertjCoreApiShortAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiShortAssert *)isStrictlyBetweenWithNSNumber:(JavaLangShort *)arg0
                                                   withNSNumber:(JavaLangShort *)arg1;

- (OrgAssertjCoreApiShortAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiShortAssert *)isZero;

- (OrgAssertjCoreApiShortAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                   withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiShortAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiShortAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaLangShort:(JavaLangShort *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiShortAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiShortAssert_initWithJavaLangShort_(OrgAssertjCoreApiShortAssert *self, JavaLangShort *actual);

FOUNDATION_EXPORT OrgAssertjCoreApiShortAssert *new_OrgAssertjCoreApiShortAssert_initWithJavaLangShort_(JavaLangShort *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiShortAssert *create_OrgAssertjCoreApiShortAssert_initWithJavaLangShort_(JavaLangShort *actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiShortAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiShortAssert")
