//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiDoubleAssert")
#ifdef RESTRICT_OrgAssertjCoreApiDoubleAssert
#define INCLUDE_ALL_OrgAssertjCoreApiDoubleAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiDoubleAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiDoubleAssert

#if !defined (OrgAssertjCoreApiDoubleAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiDoubleAssert || defined(INCLUDE_OrgAssertjCoreApiDoubleAssert))
#define OrgAssertjCoreApiDoubleAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractDoubleAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractDoubleAssert 1
#include "OrgAssertjCoreApiAbstractDoubleAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangDouble;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDataOffset;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiDoubleAssert : OrgAssertjCoreApiAbstractDoubleAssert

#pragma mark Public

- (OrgAssertjCoreApiDoubleAssert *)asWithNSString:(NSString *)arg0
                                withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiDoubleAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)describedAsWithNSString:(NSString *)arg0
                                         withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiDoubleAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiDoubleAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiDoubleAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)inBinary;

- (OrgAssertjCoreApiDoubleAssert *)inHexadecimal;

- (OrgAssertjCoreApiDoubleAssert *)isBetweenWithNSNumber:(JavaLangDouble *)arg0
                                            withNSNumber:(JavaLangDouble *)arg1;

- (OrgAssertjCoreApiDoubleAssert *)isCloseToWithDouble:(jdouble)arg0
                          withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)arg1;

- (OrgAssertjCoreApiDoubleAssert *)isCloseToWithNSNumber:(JavaLangDouble *)arg0
                            withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)arg1;

- (OrgAssertjCoreApiDoubleAssert *)isEqualToWithDouble:(jdouble)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isEqualToWithDouble:(jdouble)arg0
                          withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)arg1;

- (OrgAssertjCoreApiDoubleAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isEqualToWithNSNumber:(JavaLangDouble *)arg0
                            withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)arg1;

- (OrgAssertjCoreApiDoubleAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isGreaterThanOrEqualToWithDouble:(jdouble)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(JavaLangDouble *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isGreaterThanWithDouble:(jdouble)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isGreaterThanWithJavaLangComparable:(JavaLangDouble *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isLessThanOrEqualToWithDouble:(jdouble)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isLessThanOrEqualToWithJavaLangComparable:(JavaLangDouble *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isLessThanWithDouble:(jdouble)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isLessThanWithJavaLangComparable:(JavaLangDouble *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isNaN;

- (OrgAssertjCoreApiDoubleAssert *)isNegative;

- (OrgAssertjCoreApiDoubleAssert *)isNotEqualToWithDouble:(jdouble)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isNotNaN;

- (OrgAssertjCoreApiDoubleAssert *)isNotNegative;

- (OrgAssertjCoreApiDoubleAssert *)isNotNull;

- (OrgAssertjCoreApiDoubleAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isNotPositive;

- (OrgAssertjCoreApiDoubleAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isNotZero;

- (OrgAssertjCoreApiDoubleAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isPositive;

- (OrgAssertjCoreApiDoubleAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isStrictlyBetweenWithNSNumber:(JavaLangDouble *)arg0
                                                    withNSNumber:(JavaLangDouble *)arg1;

- (OrgAssertjCoreApiDoubleAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiDoubleAssert *)isZero;

- (OrgAssertjCoreApiDoubleAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                    withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiDoubleAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiDoubleAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaLangDouble:(JavaLangDouble *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiDoubleAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiDoubleAssert_initWithJavaLangDouble_(OrgAssertjCoreApiDoubleAssert *self, JavaLangDouble *actual);

FOUNDATION_EXPORT OrgAssertjCoreApiDoubleAssert *new_OrgAssertjCoreApiDoubleAssert_initWithJavaLangDouble_(JavaLangDouble *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiDoubleAssert *create_OrgAssertjCoreApiDoubleAssert_initWithJavaLangDouble_(JavaLangDouble *actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiDoubleAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiDoubleAssert")
