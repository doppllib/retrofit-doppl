//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldBeSubsetOf.h"
#include "OrgAssertjCoreInternalComparisonStrategy.h"
#include "OrgAssertjCoreInternalStandardComparisonStrategy.h"
#include "java/lang/Iterable.h"

@interface OrgAssertjCoreErrorShouldBeSubsetOf ()

- (instancetype)initWithId:(id)actual
                    withId:(id)values
      withJavaLangIterable:(id<JavaLangIterable>)unexpected
withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldBeSubsetOf_initWithId_withId_withJavaLangIterable_withOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreErrorShouldBeSubsetOf *self, id actual, id values, id<JavaLangIterable> unexpected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeSubsetOf *new_OrgAssertjCoreErrorShouldBeSubsetOf_initWithId_withId_withJavaLangIterable_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id values, id<JavaLangIterable> unexpected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeSubsetOf *create_OrgAssertjCoreErrorShouldBeSubsetOf_initWithId_withId_withJavaLangIterable_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id values, id<JavaLangIterable> unexpected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

@implementation OrgAssertjCoreErrorShouldBeSubsetOf

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeSubsetOfWithId:(id)actual
                                                              withId:(id)values
                                                withJavaLangIterable:(id<JavaLangIterable>)unexpected
                        withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy {
  return OrgAssertjCoreErrorShouldBeSubsetOf_shouldBeSubsetOfWithId_withId_withJavaLangIterable_withOrgAssertjCoreInternalComparisonStrategy_(actual, values, unexpected, comparisonStrategy);
}

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeSubsetOfWithId:(id)actual
                                                              withId:(id)values
                                                withJavaLangIterable:(id<JavaLangIterable>)unexpected {
  return OrgAssertjCoreErrorShouldBeSubsetOf_shouldBeSubsetOfWithId_withId_withJavaLangIterable_(actual, values, unexpected);
}

- (instancetype)initWithId:(id)actual
                    withId:(id)values
      withJavaLangIterable:(id<JavaLangIterable>)unexpected
withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy {
  OrgAssertjCoreErrorShouldBeSubsetOf_initWithId_withId_withJavaLangIterable_withOrgAssertjCoreInternalComparisonStrategy_(self, actual, values, unexpected, comparisonStrategy);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldBeSubsetOfWithId:withId:withJavaLangIterable:withOrgAssertjCoreInternalComparisonStrategy:);
  methods[1].selector = @selector(shouldBeSubsetOfWithId:withId:withJavaLangIterable:);
  methods[2].selector = @selector(initWithId:withId:withJavaLangIterable:withOrgAssertjCoreInternalComparisonStrategy:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldBeSubsetOf", "LNSObject;LNSObject;LJavaLangIterable;LOrgAssertjCoreInternalComparisonStrategy;", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Iterable<*>;Lorg/assertj/core/internal/ComparisonStrategy;)Lorg/assertj/core/error/ErrorMessageFactory;", "LNSObject;LNSObject;LJavaLangIterable;", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Iterable<*>;)Lorg/assertj/core/error/ErrorMessageFactory;", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Iterable<*>;Lorg/assertj/core/internal/ComparisonStrategy;)V" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldBeSubsetOf = { "ShouldBeSubsetOf", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldBeSubsetOf;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeSubsetOf_shouldBeSubsetOfWithId_withId_withJavaLangIterable_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id values, id<JavaLangIterable> unexpected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  OrgAssertjCoreErrorShouldBeSubsetOf_initialize();
  return create_OrgAssertjCoreErrorShouldBeSubsetOf_initWithId_withId_withJavaLangIterable_withOrgAssertjCoreInternalComparisonStrategy_(actual, values, unexpected, comparisonStrategy);
}

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeSubsetOf_shouldBeSubsetOfWithId_withId_withJavaLangIterable_(id actual, id values, id<JavaLangIterable> unexpected) {
  OrgAssertjCoreErrorShouldBeSubsetOf_initialize();
  return create_OrgAssertjCoreErrorShouldBeSubsetOf_initWithId_withId_withJavaLangIterable_withOrgAssertjCoreInternalComparisonStrategy_(actual, values, unexpected, OrgAssertjCoreInternalStandardComparisonStrategy_instance());
}

void OrgAssertjCoreErrorShouldBeSubsetOf_initWithId_withId_withJavaLangIterable_withOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreErrorShouldBeSubsetOf *self, id actual, id values, id<JavaLangIterable> unexpected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting %s:\n <%s>\nto be subset of\n <%s>\nbut found those extra elements:\n <%s>", [IOSObjectArray arrayWithObjects:(id[]){ comparisonStrategy, actual, values, unexpected } count:4 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldBeSubsetOf *new_OrgAssertjCoreErrorShouldBeSubsetOf_initWithId_withId_withJavaLangIterable_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id values, id<JavaLangIterable> unexpected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldBeSubsetOf, initWithId_withId_withJavaLangIterable_withOrgAssertjCoreInternalComparisonStrategy_, actual, values, unexpected, comparisonStrategy)
}

OrgAssertjCoreErrorShouldBeSubsetOf *create_OrgAssertjCoreErrorShouldBeSubsetOf_initWithId_withId_withJavaLangIterable_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id values, id<JavaLangIterable> unexpected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldBeSubsetOf, initWithId_withId_withJavaLangIterable_withOrgAssertjCoreInternalComparisonStrategy_, actual, values, unexpected, comparisonStrategy)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldBeSubsetOf)
