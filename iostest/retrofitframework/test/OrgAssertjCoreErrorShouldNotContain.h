//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldNotContain")
#ifdef RESTRICT_OrgAssertjCoreErrorShouldNotContain
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldNotContain 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldNotContain 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorShouldNotContain

#if !defined (OrgAssertjCoreErrorShouldNotContain_) && (INCLUDE_ALL_OrgAssertjCoreErrorShouldNotContain || defined(INCLUDE_OrgAssertjCoreErrorShouldNotContain))
#define OrgAssertjCoreErrorShouldNotContain_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@protocol OrgAssertjCoreErrorErrorMessageFactory;
@protocol OrgAssertjCoreInternalComparisonStrategy;

@interface OrgAssertjCoreErrorShouldNotContain : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldNotContainWithId:(id)actual
                                                              withId:(id)expected
                                                              withId:(id)found;

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldNotContainWithId:(id)actual
                                                              withId:(id)expected
                                                              withId:(id)found
                        withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorShouldNotContain)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldNotContain_shouldNotContainWithId_withId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id expected, id found, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldNotContain_shouldNotContainWithId_withId_withId_(id actual, id expected, id found);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorShouldNotContain)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldNotContain")
