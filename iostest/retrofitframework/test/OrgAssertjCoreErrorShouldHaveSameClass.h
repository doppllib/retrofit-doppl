//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveSameClass")
#ifdef RESTRICT_OrgAssertjCoreErrorShouldHaveSameClass
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveSameClass 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveSameClass 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorShouldHaveSameClass

#if !defined (OrgAssertjCoreErrorShouldHaveSameClass_) && (INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveSameClass || defined(INCLUDE_OrgAssertjCoreErrorShouldHaveSameClass))
#define OrgAssertjCoreErrorShouldHaveSameClass_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@protocol OrgAssertjCoreErrorErrorMessageFactory;

@interface OrgAssertjCoreErrorShouldHaveSameClass : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldHaveSameClassWithId:(id)actual
                                                                 withId:(id)other;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorShouldHaveSameClass)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldHaveSameClass_shouldHaveSameClassWithId_withId_(id actual, id other);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorShouldHaveSameClass)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveSameClass")
