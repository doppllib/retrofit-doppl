//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractByteArrayAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractByteArrayAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractByteArrayAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractByteArrayAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractByteArrayAssert

#if !defined (OrgAssertjCoreApiAbstractByteArrayAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractByteArrayAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractByteArrayAssert))
#define OrgAssertjCoreApiAbstractByteArrayAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractArrayAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractArrayAssert 1
#include "OrgAssertjCoreApiAbstractArrayAssert.h"

@class IOSByteArray;
@class IOSClass;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDataIndex;
@class OrgAssertjCoreDescriptionDescription;
@class OrgAssertjCoreInternalByteArrays;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractByteArrayAssert : OrgAssertjCoreApiAbstractArrayAssert {
 @public
  OrgAssertjCoreInternalByteArrays *arrays_;
}

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)actual
                     withIOSClass:(IOSClass *)selfType;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)asWithNSString:(NSString *)arg0
                                           withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)containsWithByteArray:(IOSByteArray *)values;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)containsWithByte:(jbyte)value
                                   withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)containsExactlyWithByteArray:(IOSByteArray *)values;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)containsOnlyWithByteArray:(IOSByteArray *)values;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)containsOnlyOnceWithByteArray:(IOSByteArray *)values;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)containsSequenceWithByteArray:(IOSByteArray *)sequence;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)containsSubsequenceWithByteArray:(IOSByteArray *)subsequence;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)describedAsWithNSString:(NSString *)arg0
                                                    withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)doesNotContainWithByteArray:(IOSByteArray *)values;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)doesNotContainWithByte:(jbyte)value
                                         withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)doesNotHaveDuplicates;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)endsWithWithByteArray:(IOSByteArray *)sequence;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)hasSameSizeAsWithJavaLangIterable:(id<JavaLangIterable>)other;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)hasSameSizeAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)hasSizeWithInt:(jint)expected;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)inBinary;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)inHexadecimal;

- (void)isEmpty;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isNotEmpty;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (void)isNullOrEmpty;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isSorted;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isSortedAccordingToWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                               withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)startsWithWithByteArray:(IOSByteArray *)sequence;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)usingDefaultComparator;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)usingDefaultElementComparator;

- (OrgAssertjCoreApiAbstractByteArrayAssert *)usingElementComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)customComparator;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractByteArrayAssert)

J2OBJC_FIELD_SETTER(OrgAssertjCoreApiAbstractByteArrayAssert, arrays_, OrgAssertjCoreInternalByteArrays *)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractByteArrayAssert_initWithByteArray_withIOSClass_(OrgAssertjCoreApiAbstractByteArrayAssert *self, IOSByteArray *actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractByteArrayAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractByteArrayAssert")
