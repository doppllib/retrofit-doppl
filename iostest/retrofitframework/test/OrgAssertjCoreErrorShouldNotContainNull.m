//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldNotContainNull.h"

@interface OrgAssertjCoreErrorShouldNotContainNull ()

- (instancetype)initWithId:(id)actual;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldNotContainNull_initWithId_(OrgAssertjCoreErrorShouldNotContainNull *self, id actual);

__attribute__((unused)) static OrgAssertjCoreErrorShouldNotContainNull *new_OrgAssertjCoreErrorShouldNotContainNull_initWithId_(id actual) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldNotContainNull *create_OrgAssertjCoreErrorShouldNotContainNull_initWithId_(id actual);

@implementation OrgAssertjCoreErrorShouldNotContainNull

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldNotContainNullWithId:(id)actual {
  return OrgAssertjCoreErrorShouldNotContainNull_shouldNotContainNullWithId_(actual);
}

- (instancetype)initWithId:(id)actual {
  OrgAssertjCoreErrorShouldNotContainNull_initWithId_(self, actual);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldNotContainNullWithId:);
  methods[1].selector = @selector(initWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldNotContainNull", "LNSObject;" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldNotContainNull = { "ShouldNotContainNull", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldNotContainNull;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldNotContainNull_shouldNotContainNullWithId_(id actual) {
  OrgAssertjCoreErrorShouldNotContainNull_initialize();
  return create_OrgAssertjCoreErrorShouldNotContainNull_initWithId_(actual);
}

void OrgAssertjCoreErrorShouldNotContainNull_initWithId_(OrgAssertjCoreErrorShouldNotContainNull *self, id actual) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting:\n <%s>\nnot to contain <null> elements", [IOSObjectArray arrayWithObjects:(id[]){ actual } count:1 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldNotContainNull *new_OrgAssertjCoreErrorShouldNotContainNull_initWithId_(id actual) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldNotContainNull, initWithId_, actual)
}

OrgAssertjCoreErrorShouldNotContainNull *create_OrgAssertjCoreErrorShouldNotContainNull_initWithId_(id actual) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldNotContainNull, initWithId_, actual)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldNotContainNull)
