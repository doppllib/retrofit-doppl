//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiNumberAssert.h"

@interface OrgAssertjCoreApiNumberAssert : NSObject

@end

@implementation OrgAssertjCoreApiNumberAssert

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreApiNumberAssert;", 0x401, -1, -1, -1, 0, -1, -1 },
    { NULL, "LOrgAssertjCoreApiNumberAssert;", 0x401, -1, -1, -1, 0, -1, -1 },
    { NULL, "LOrgAssertjCoreApiNumberAssert;", 0x401, -1, -1, -1, 0, -1, -1 },
    { NULL, "LOrgAssertjCoreApiNumberAssert;", 0x401, -1, -1, -1, 0, -1, -1 },
    { NULL, "LOrgAssertjCoreApiNumberAssert;", 0x401, -1, -1, -1, 0, -1, -1 },
    { NULL, "LOrgAssertjCoreApiNumberAssert;", 0x401, -1, -1, -1, 0, -1, -1 },
    { NULL, "LOrgAssertjCoreApiNumberAssert;", 0x401, 1, 2, -1, 3, -1, -1 },
    { NULL, "LOrgAssertjCoreApiNumberAssert;", 0x401, 4, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isZero);
  methods[1].selector = @selector(isNotZero);
  methods[2].selector = @selector(isPositive);
  methods[3].selector = @selector(isNegative);
  methods[4].selector = @selector(isNotNegative);
  methods[5].selector = @selector(isNotPositive);
  methods[6].selector = @selector(isBetweenWithNSNumber:withNSNumber:);
  methods[7].selector = @selector(isStrictlyBetweenWithNSNumber:withNSNumber:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TS;", "isBetween", "LNSNumber;LNSNumber;", "(TA;TA;)TS;", "isStrictlyBetween", "<S::Lorg/assertj/core/api/NumberAssert<TS;TA;>;A:Ljava/lang/Number;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _OrgAssertjCoreApiNumberAssert = { "NumberAssert", "org.assertj.core.api", ptrTable, methods, NULL, 7, 0x609, 8, 0, -1, -1, -1, 5, -1 };
  return &_OrgAssertjCoreApiNumberAssert;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgAssertjCoreApiNumberAssert)
