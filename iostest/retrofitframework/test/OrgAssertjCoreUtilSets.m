//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreUtilSets.h"
#include "java/lang/Iterable.h"
#include "java/util/Collections.h"
#include "java/util/HashSet.h"
#include "java/util/LinkedHashSet.h"

@interface OrgAssertjCoreUtilSets ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgAssertjCoreUtilSets_init(OrgAssertjCoreUtilSets *self);

__attribute__((unused)) static OrgAssertjCoreUtilSets *new_OrgAssertjCoreUtilSets_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreUtilSets *create_OrgAssertjCoreUtilSets_init();

@implementation OrgAssertjCoreUtilSets

+ (JavaUtilHashSet *)newHashSet {
  return OrgAssertjCoreUtilSets_newHashSet();
}

+ (JavaUtilHashSet *)newHashSetWithJavaLangIterable:(id<JavaLangIterable>)elements {
  return OrgAssertjCoreUtilSets_newHashSetWithJavaLangIterable_(elements);
}

+ (JavaUtilLinkedHashSet *)newLinkedHashSet {
  return OrgAssertjCoreUtilSets_newLinkedHashSet();
}

+ (JavaUtilLinkedHashSet *)newLinkedHashSetWithNSObjectArray:(IOSObjectArray *)elements {
  return OrgAssertjCoreUtilSets_newLinkedHashSetWithNSObjectArray_(elements);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreUtilSets_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilHashSet;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilHashSet;", 0x9, 1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilLinkedHashSet;", 0x9, -1, -1, -1, 4, -1, -1 },
    { NULL, "LJavaUtilLinkedHashSet;", 0x89, 5, 6, -1, 7, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newHashSet);
  methods[1].selector = @selector(newHashSetWithJavaLangIterable:);
  methods[2].selector = @selector(newLinkedHashSet);
  methods[3].selector = @selector(newLinkedHashSetWithNSObjectArray:);
  methods[4].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "<T:Ljava/lang/Object;>()Ljava/util/HashSet<TT;>;", "newHashSet", "LJavaLangIterable;", "<T:Ljava/lang/Object;>(Ljava/lang/Iterable<+TT;>;)Ljava/util/HashSet<TT;>;", "<T:Ljava/lang/Object;>()Ljava/util/LinkedHashSet<TT;>;", "newLinkedHashSet", "[LNSObject;", "<T:Ljava/lang/Object;>([TT;)Ljava/util/LinkedHashSet<TT;>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreUtilSets = { "Sets", "org.assertj.core.util", ptrTable, methods, NULL, 7, 0x11, 5, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreUtilSets;
}

@end

JavaUtilHashSet *OrgAssertjCoreUtilSets_newHashSet() {
  OrgAssertjCoreUtilSets_initialize();
  return create_JavaUtilHashSet_init();
}

JavaUtilHashSet *OrgAssertjCoreUtilSets_newHashSetWithJavaLangIterable_(id<JavaLangIterable> elements) {
  OrgAssertjCoreUtilSets_initialize();
  if (elements == nil) {
    return nil;
  }
  JavaUtilHashSet *set = OrgAssertjCoreUtilSets_newHashSet();
  for (id __strong e in elements) {
    [((JavaUtilHashSet *) nil_chk(set)) addWithId:e];
  }
  return set;
}

JavaUtilLinkedHashSet *OrgAssertjCoreUtilSets_newLinkedHashSet() {
  OrgAssertjCoreUtilSets_initialize();
  return create_JavaUtilLinkedHashSet_init();
}

JavaUtilLinkedHashSet *OrgAssertjCoreUtilSets_newLinkedHashSetWithNSObjectArray_(IOSObjectArray *elements) {
  OrgAssertjCoreUtilSets_initialize();
  if (elements == nil) {
    return nil;
  }
  JavaUtilLinkedHashSet *set = OrgAssertjCoreUtilSets_newLinkedHashSet();
  JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(set, elements);
  return set;
}

void OrgAssertjCoreUtilSets_init(OrgAssertjCoreUtilSets *self) {
  NSObject_init(self);
}

OrgAssertjCoreUtilSets *new_OrgAssertjCoreUtilSets_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreUtilSets, init)
}

OrgAssertjCoreUtilSets *create_OrgAssertjCoreUtilSets_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreUtilSets, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreUtilSets)
