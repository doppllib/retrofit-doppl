//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorAbstractShouldHaveTextContent")
#ifdef RESTRICT_OrgAssertjCoreErrorAbstractShouldHaveTextContent
#define INCLUDE_ALL_OrgAssertjCoreErrorAbstractShouldHaveTextContent 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorAbstractShouldHaveTextContent 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorAbstractShouldHaveTextContent

#if !defined (OrgAssertjCoreErrorAbstractShouldHaveTextContent_) && (INCLUDE_ALL_OrgAssertjCoreErrorAbstractShouldHaveTextContent || defined(INCLUDE_OrgAssertjCoreErrorAbstractShouldHaveTextContent))
#define OrgAssertjCoreErrorAbstractShouldHaveTextContent_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@class IOSObjectArray;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaUtilList;
@protocol OrgAssertjCorePresentationRepresentation;

@interface OrgAssertjCoreErrorAbstractShouldHaveTextContent : OrgAssertjCoreErrorBasicErrorMessageFactory {
 @public
  NSString *diffs_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)format
               withNSObjectArray:(IOSObjectArray *)arguments;

- (NSString *)createWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)d
                withOrgAssertjCorePresentationRepresentation:(id<OrgAssertjCorePresentationRepresentation>)representation;

#pragma mark Protected

+ (NSString *)diffsAsStringWithJavaUtilList:(id<JavaUtilList>)diffsList;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorAbstractShouldHaveTextContent)

J2OBJC_FIELD_SETTER(OrgAssertjCoreErrorAbstractShouldHaveTextContent, diffs_, NSString *)

FOUNDATION_EXPORT void OrgAssertjCoreErrorAbstractShouldHaveTextContent_initWithNSString_withNSObjectArray_(OrgAssertjCoreErrorAbstractShouldHaveTextContent *self, NSString *format, IOSObjectArray *arguments);

FOUNDATION_EXPORT OrgAssertjCoreErrorAbstractShouldHaveTextContent *new_OrgAssertjCoreErrorAbstractShouldHaveTextContent_initWithNSString_withNSObjectArray_(NSString *format, IOSObjectArray *arguments) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreErrorAbstractShouldHaveTextContent *create_OrgAssertjCoreErrorAbstractShouldHaveTextContent_initWithNSString_withNSObjectArray_(NSString *format, IOSObjectArray *arguments);

FOUNDATION_EXPORT NSString *OrgAssertjCoreErrorAbstractShouldHaveTextContent_diffsAsStringWithJavaUtilList_(id<JavaUtilList> diffsList);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorAbstractShouldHaveTextContent)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorAbstractShouldHaveTextContent")
