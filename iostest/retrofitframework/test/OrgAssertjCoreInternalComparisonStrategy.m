//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "OrgAssertjCoreInternalComparisonStrategy.h"

@interface OrgAssertjCoreInternalComparisonStrategy : NSObject

@end

@implementation OrgAssertjCoreInternalComparisonStrategy

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 2, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 3, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 4, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 5, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 6, 7, -1, 8, -1, -1 },
    { NULL, "V", 0x401, 9, 7, -1, 10, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x401, 11, 12, -1, 13, -1, -1 },
    { NULL, "Z", 0x401, 14, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 15, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 17, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 18, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(areEqualWithId:withId:);
  methods[1].selector = @selector(isGreaterThanWithId:withId:);
  methods[2].selector = @selector(isGreaterThanOrEqualToWithId:withId:);
  methods[3].selector = @selector(isLessThanWithId:withId:);
  methods[4].selector = @selector(isLessThanOrEqualToWithId:withId:);
  methods[5].selector = @selector(iterableContainsWithJavaLangIterable:withId:);
  methods[6].selector = @selector(iterableRemovesWithJavaLangIterable:withId:);
  methods[7].selector = @selector(duplicatesFromWithJavaLangIterable:);
  methods[8].selector = @selector(arrayContainsWithId:withId:);
  methods[9].selector = @selector(stringContainsWithNSString:withNSString:);
  methods[10].selector = @selector(stringStartsWithWithNSString:withNSString:);
  methods[11].selector = @selector(stringEndsWithWithNSString:withNSString:);
  methods[12].selector = @selector(isStandard);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "areEqual", "LNSObject;LNSObject;", "isGreaterThan", "isGreaterThanOrEqualTo", "isLessThan", "isLessThanOrEqualTo", "iterableContains", "LJavaLangIterable;LNSObject;", "(Ljava/lang/Iterable<*>;Ljava/lang/Object;)Z", "iterableRemoves", "(Ljava/lang/Iterable<*>;Ljava/lang/Object;)V", "duplicatesFrom", "LJavaLangIterable;", "(Ljava/lang/Iterable<*>;)Ljava/lang/Iterable<*>;", "arrayContains", "stringContains", "LNSString;LNSString;", "stringStartsWith", "stringEndsWith" };
  static const J2ObjcClassInfo _OrgAssertjCoreInternalComparisonStrategy = { "ComparisonStrategy", "org.assertj.core.internal", ptrTable, methods, NULL, 7, 0x609, 13, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreInternalComparisonStrategy;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgAssertjCoreInternalComparisonStrategy)
