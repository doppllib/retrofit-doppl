//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreUtilHexadecimals.h"
#include "java/lang/Byte.h"

@interface OrgAssertjCoreUtilHexadecimals ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgAssertjCoreUtilHexadecimals_init(OrgAssertjCoreUtilHexadecimals *self);

__attribute__((unused)) static OrgAssertjCoreUtilHexadecimals *new_OrgAssertjCoreUtilHexadecimals_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreUtilHexadecimals *create_OrgAssertjCoreUtilHexadecimals_init();

J2OBJC_INITIALIZED_DEFN(OrgAssertjCoreUtilHexadecimals)

IOSCharArray *OrgAssertjCoreUtilHexadecimals_HEX_ARRAY;

@implementation OrgAssertjCoreUtilHexadecimals

+ (NSString *)byteToHexStringWithJavaLangByte:(JavaLangByte *)b {
  return OrgAssertjCoreUtilHexadecimals_byteToHexStringWithJavaLangByte_(b);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreUtilHexadecimals_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(byteToHexStringWithJavaLangByte:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "HEX_ARRAY", "[C", .constantValue.asLong = 0, 0x1c, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "byteToHexString", "LJavaLangByte;", &OrgAssertjCoreUtilHexadecimals_HEX_ARRAY };
  static const J2ObjcClassInfo _OrgAssertjCoreUtilHexadecimals = { "Hexadecimals", "org.assertj.core.util", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreUtilHexadecimals;
}

+ (void)initialize {
  if (self == [OrgAssertjCoreUtilHexadecimals class]) {
    JreStrongAssign(&OrgAssertjCoreUtilHexadecimals_HEX_ARRAY, [@"0123456789ABCDEF" java_toCharArray]);
    J2OBJC_SET_INITIALIZED(OrgAssertjCoreUtilHexadecimals)
  }
}

@end

NSString *OrgAssertjCoreUtilHexadecimals_byteToHexStringWithJavaLangByte_(JavaLangByte *b) {
  OrgAssertjCoreUtilHexadecimals_initialize();
  jint v = [((JavaLangByte *) nil_chk(b)) charValue] & (jint) 0xFF;
  return [NSString java_stringWithCharacters:[IOSCharArray arrayWithChars:(jchar[]){ IOSCharArray_Get(nil_chk(OrgAssertjCoreUtilHexadecimals_HEX_ARRAY), JreURShift32(v, 4)), IOSCharArray_Get(OrgAssertjCoreUtilHexadecimals_HEX_ARRAY, v & (jint) 0x0F) } count:2]];
}

void OrgAssertjCoreUtilHexadecimals_init(OrgAssertjCoreUtilHexadecimals *self) {
  NSObject_init(self);
}

OrgAssertjCoreUtilHexadecimals *new_OrgAssertjCoreUtilHexadecimals_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreUtilHexadecimals, init)
}

OrgAssertjCoreUtilHexadecimals *create_OrgAssertjCoreUtilHexadecimals_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreUtilHexadecimals, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreUtilHexadecimals)
