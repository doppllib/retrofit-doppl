//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiFloatingPointNumberAssert.h"

@interface OrgAssertjCoreApiFloatingPointNumberAssert : NSObject

@end

@implementation OrgAssertjCoreApiFloatingPointNumberAssert

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreApiFloatingPointNumberAssert;", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "LOrgAssertjCoreApiFloatingPointNumberAssert;", 0x401, 3, 1, -1, 2, -1, -1 },
    { NULL, "LOrgAssertjCoreApiFloatingPointNumberAssert;", 0x401, -1, -1, -1, 4, -1, -1 },
    { NULL, "LOrgAssertjCoreApiFloatingPointNumberAssert;", 0x401, -1, -1, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isEqualToWithNSNumber:withOrgAssertjCoreDataOffset:);
  methods[1].selector = @selector(isCloseToWithNSNumber:withOrgAssertjCoreDataOffset:);
  methods[2].selector = @selector(isNaN);
  methods[3].selector = @selector(isNotNaN);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "isEqualTo", "LNSNumber;LOrgAssertjCoreDataOffset;", "(TA;Lorg/assertj/core/data/Offset<TA;>;)TS;", "isCloseTo", "()TS;", "<S::Lorg/assertj/core/api/FloatingPointNumberAssert<TS;TA;>;A:Ljava/lang/Number;>Ljava/lang/Object;Lorg/assertj/core/api/NumberAssert<TS;TA;>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreApiFloatingPointNumberAssert = { "FloatingPointNumberAssert", "org.assertj.core.api", ptrTable, methods, NULL, 7, 0x609, 4, 0, -1, -1, -1, 5, -1 };
  return &_OrgAssertjCoreApiFloatingPointNumberAssert;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgAssertjCoreApiFloatingPointNumberAssert)
