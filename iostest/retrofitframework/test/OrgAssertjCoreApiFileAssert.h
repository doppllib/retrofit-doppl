//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiFileAssert")
#ifdef RESTRICT_OrgAssertjCoreApiFileAssert
#define INCLUDE_ALL_OrgAssertjCoreApiFileAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiFileAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiFileAssert

#if !defined (OrgAssertjCoreApiFileAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiFileAssert || defined(INCLUDE_OrgAssertjCoreApiFileAssert))
#define OrgAssertjCoreApiFileAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractFileAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractFileAssert 1
#include "OrgAssertjCoreApiAbstractFileAssert.h"

@class IOSByteArray;
@class IOSClass;
@class IOSObjectArray;
@class JavaIoFile;
@class JavaNioCharsetCharset;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiFileAssert : OrgAssertjCoreApiAbstractFileAssert

#pragma mark Public

- (OrgAssertjCoreApiFileAssert *)asWithNSString:(NSString *)arg0
                              withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiFileAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiFileAssert *)canRead;

- (OrgAssertjCoreApiFileAssert *)canWrite;

- (OrgAssertjCoreApiFileAssert *)describedAsWithNSString:(NSString *)arg0
                                       withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiFileAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiFileAssert *)doesNotExist;

- (OrgAssertjCoreApiFileAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiFileAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiFileAssert *)exists;

- (OrgAssertjCoreApiFileAssert *)hasBinaryContentWithByteArray:(IOSByteArray *)arg0;

- (OrgAssertjCoreApiFileAssert *)hasContentEqualToWithJavaIoFile:(JavaIoFile *)arg0;

- (OrgAssertjCoreApiFileAssert *)hasContentWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiFileAssert *)hasExtensionWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiFileAssert *)hasNameWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiFileAssert *)hasNoParent;

- (OrgAssertjCoreApiFileAssert *)hasParentWithJavaIoFile:(JavaIoFile *)arg0;

- (OrgAssertjCoreApiFileAssert *)hasParentWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiFileAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiFileAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiFileAssert *)isAbsolute;

- (OrgAssertjCoreApiFileAssert *)isDirectory;

- (OrgAssertjCoreApiFileAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiFileAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiFileAssert *)isFile;

- (OrgAssertjCoreApiFileAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiFileAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiFileAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiFileAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiFileAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiFileAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiFileAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiFileAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiFileAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiFileAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiFileAssert *)isNotNull;

- (OrgAssertjCoreApiFileAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiFileAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiFileAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiFileAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiFileAssert *)isRelative;

- (OrgAssertjCoreApiFileAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiFileAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiFileAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                  withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiFileAssert *)usingCharsetWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)arg0;

- (OrgAssertjCoreApiFileAssert *)usingCharsetWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiFileAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiFileAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaIoFile:(JavaIoFile *)actual;

- (OrgAssertjCoreApiFileAssert *)inBinary;

- (OrgAssertjCoreApiFileAssert *)inHexadecimal;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiFileAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiFileAssert_initWithJavaIoFile_(OrgAssertjCoreApiFileAssert *self, JavaIoFile *actual);

FOUNDATION_EXPORT OrgAssertjCoreApiFileAssert *new_OrgAssertjCoreApiFileAssert_initWithJavaIoFile_(JavaIoFile *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiFileAssert *create_OrgAssertjCoreApiFileAssert_initWithJavaIoFile_(JavaIoFile *actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiFileAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiFileAssert")
