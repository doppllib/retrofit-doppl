//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCorePresentationCollectionToString")
#ifdef RESTRICT_OrgAssertjCorePresentationCollectionToString
#define INCLUDE_ALL_OrgAssertjCorePresentationCollectionToString 0
#else
#define INCLUDE_ALL_OrgAssertjCorePresentationCollectionToString 1
#endif
#undef RESTRICT_OrgAssertjCorePresentationCollectionToString

#if !defined (OrgAssertjCorePresentationCollectionToString_) && (INCLUDE_ALL_OrgAssertjCorePresentationCollectionToString || defined(INCLUDE_OrgAssertjCorePresentationCollectionToString))
#define OrgAssertjCorePresentationCollectionToString_

@protocol OrgAssertjCorePresentationRepresentation;

@interface OrgAssertjCorePresentationCollectionToString : NSObject

#pragma mark Public

+ (NSString *)toStringOfWithOrgAssertjCorePresentationRepresentation:(id<OrgAssertjCorePresentationRepresentation>)representation
                                                              withId:(id)o;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCorePresentationCollectionToString)

FOUNDATION_EXPORT NSString *OrgAssertjCorePresentationCollectionToString_toStringOfWithOrgAssertjCorePresentationRepresentation_withId_(id<OrgAssertjCorePresentationRepresentation> representation, id o);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCorePresentationCollectionToString)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCorePresentationCollectionToString")
