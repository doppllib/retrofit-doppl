//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveLineCount")
#ifdef RESTRICT_OrgAssertjCoreErrorShouldHaveLineCount
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveLineCount 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveLineCount 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorShouldHaveLineCount

#if !defined (OrgAssertjCoreErrorShouldHaveLineCount_) && (INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveLineCount || defined(INCLUDE_OrgAssertjCoreErrorShouldHaveLineCount))
#define OrgAssertjCoreErrorShouldHaveLineCount_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@protocol OrgAssertjCoreErrorErrorMessageFactory;

@interface OrgAssertjCoreErrorShouldHaveLineCount : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldHaveLinesCountWithId:(id)actual
                                                                 withInt:(jint)actualSize
                                                                 withInt:(jint)expectedSize;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorShouldHaveLineCount)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldHaveLineCount_shouldHaveLinesCountWithId_withInt_withInt_(id actual, jint actualSize, jint expectedSize);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorShouldHaveLineCount)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldHaveLineCount")
