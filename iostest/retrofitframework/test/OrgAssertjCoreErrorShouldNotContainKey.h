//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldNotContainKey")
#ifdef RESTRICT_OrgAssertjCoreErrorShouldNotContainKey
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldNotContainKey 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldNotContainKey 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorShouldNotContainKey

#if !defined (OrgAssertjCoreErrorShouldNotContainKey_) && (INCLUDE_ALL_OrgAssertjCoreErrorShouldNotContainKey || defined(INCLUDE_OrgAssertjCoreErrorShouldNotContainKey))
#define OrgAssertjCoreErrorShouldNotContainKey_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@protocol OrgAssertjCoreErrorErrorMessageFactory;

@interface OrgAssertjCoreErrorShouldNotContainKey : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldNotContainKeyWithId:(id)actual
                                                                 withId:(id)key;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorShouldNotContainKey)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldNotContainKey_shouldNotContainKeyWithId_withId_(id actual, id key);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorShouldNotContainKey)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldNotContainKey")
