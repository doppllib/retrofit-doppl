//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractFloatAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractFloatAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractFloatAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractFloatAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractFloatAssert

#if !defined (OrgAssertjCoreApiAbstractFloatAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractFloatAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractFloatAssert))
#define OrgAssertjCoreApiAbstractFloatAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractComparableAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractComparableAssert 1
#include "OrgAssertjCoreApiAbstractComparableAssert.h"

#define RESTRICT_OrgAssertjCoreApiFloatingPointNumberAssert 1
#define INCLUDE_OrgAssertjCoreApiFloatingPointNumberAssert 1
#include "OrgAssertjCoreApiFloatingPointNumberAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangFloat;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDataOffset;
@class OrgAssertjCoreDescriptionDescription;
@class OrgAssertjCoreInternalFloats;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractFloatAssert : OrgAssertjCoreApiAbstractComparableAssert < OrgAssertjCoreApiFloatingPointNumberAssert > {
 @public
  OrgAssertjCoreInternalFloats *floats_;
}

#pragma mark Public

- (OrgAssertjCoreApiAbstractFloatAssert *)asWithNSString:(NSString *)arg0
                                       withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractFloatAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)describedAsWithNSString:(NSString *)arg0
                                                withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractFloatAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)inBinary;

- (OrgAssertjCoreApiAbstractFloatAssert *)inHexadecimal;

- (OrgAssertjCoreApiAbstractFloatAssert *)isBetweenWithNSNumber:(JavaLangFloat *)start
                                                   withNSNumber:(JavaLangFloat *)end;

- (OrgAssertjCoreApiAbstractFloatAssert *)isCloseToWithFloat:(jfloat)other
                                withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)offset;

- (OrgAssertjCoreApiAbstractFloatAssert *)isCloseToWithNSNumber:(JavaLangFloat *)other
                                   withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)offset;

- (OrgAssertjCoreApiAbstractFloatAssert *)isEqualToWithFloat:(jfloat)expected;

- (OrgAssertjCoreApiAbstractFloatAssert *)isEqualToWithNSNumber:(JavaLangFloat *)expected
                                   withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)offset;

- (OrgAssertjCoreApiAbstractFloatAssert *)isEqualToWithFloat:(jfloat)expected
                                withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)offset;

- (OrgAssertjCoreApiAbstractFloatAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isGreaterThanWithFloat:(jfloat)other;

- (OrgAssertjCoreApiAbstractFloatAssert *)isGreaterThanOrEqualToWithFloat:(jfloat)other;

- (OrgAssertjCoreApiAbstractFloatAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(JavaLangFloat *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isGreaterThanWithJavaLangComparable:(JavaLangFloat *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isLessThanWithFloat:(jfloat)other;

- (OrgAssertjCoreApiAbstractFloatAssert *)isLessThanOrEqualToWithFloat:(jfloat)other;

- (OrgAssertjCoreApiAbstractFloatAssert *)isLessThanOrEqualToWithJavaLangComparable:(JavaLangFloat *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isLessThanWithJavaLangComparable:(JavaLangFloat *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNaN;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNegative;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotEqualToWithFloat:(jfloat)other;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotNaN;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotNegative;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotPositive;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isNotZero;

- (OrgAssertjCoreApiAbstractFloatAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isPositive;

- (OrgAssertjCoreApiAbstractFloatAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isStrictlyBetweenWithNSNumber:(JavaLangFloat *)start
                                                           withNSNumber:(JavaLangFloat *)end;

- (OrgAssertjCoreApiAbstractFloatAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractFloatAssert *)isZero;

- (OrgAssertjCoreApiAbstractFloatAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                           withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractFloatAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)customComparator;

- (OrgAssertjCoreApiAbstractFloatAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaLangFloat:(JavaLangFloat *)actual
                         withIOSClass:(IOSClass *)selfType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractFloatAssert)

J2OBJC_FIELD_SETTER(OrgAssertjCoreApiAbstractFloatAssert, floats_, OrgAssertjCoreInternalFloats *)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractFloatAssert_initWithJavaLangFloat_withIOSClass_(OrgAssertjCoreApiAbstractFloatAssert *self, JavaLangFloat *actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractFloatAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractFloatAssert")
