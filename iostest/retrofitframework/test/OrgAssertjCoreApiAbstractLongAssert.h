//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractLongAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractLongAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractLongAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractLongAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractLongAssert

#if !defined (OrgAssertjCoreApiAbstractLongAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractLongAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractLongAssert))
#define OrgAssertjCoreApiAbstractLongAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractComparableAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractComparableAssert 1
#include "OrgAssertjCoreApiAbstractComparableAssert.h"

#define RESTRICT_OrgAssertjCoreApiNumberAssert 1
#define INCLUDE_OrgAssertjCoreApiNumberAssert 1
#include "OrgAssertjCoreApiNumberAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangLong;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@class OrgAssertjCoreInternalLongs;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractLongAssert : OrgAssertjCoreApiAbstractComparableAssert < OrgAssertjCoreApiNumberAssert > {
 @public
  OrgAssertjCoreInternalLongs *longs_;
}

#pragma mark Public

- (OrgAssertjCoreApiAbstractLongAssert *)asWithNSString:(NSString *)arg0
                                      withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractLongAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)describedAsWithNSString:(NSString *)arg0
                                               withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractLongAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)inBinary;

- (OrgAssertjCoreApiAbstractLongAssert *)inHexadecimal;

- (OrgAssertjCoreApiAbstractLongAssert *)isBetweenWithNSNumber:(JavaLangLong *)start
                                                  withNSNumber:(JavaLangLong *)end;

- (OrgAssertjCoreApiAbstractLongAssert *)isEqualToWithLong:(jlong)expected;

- (OrgAssertjCoreApiAbstractLongAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isGreaterThanWithLong:(jlong)other;

- (OrgAssertjCoreApiAbstractLongAssert *)isGreaterThanOrEqualToWithLong:(jlong)other;

- (OrgAssertjCoreApiAbstractLongAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(JavaLangLong *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isGreaterThanWithJavaLangComparable:(JavaLangLong *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isLessThanWithLong:(jlong)other;

- (OrgAssertjCoreApiAbstractLongAssert *)isLessThanOrEqualToWithLong:(jlong)other;

- (OrgAssertjCoreApiAbstractLongAssert *)isLessThanOrEqualToWithJavaLangComparable:(JavaLangLong *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isLessThanWithJavaLangComparable:(JavaLangLong *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isNegative;

- (OrgAssertjCoreApiAbstractLongAssert *)isNotEqualToWithLong:(jlong)other;

- (OrgAssertjCoreApiAbstractLongAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isNotNegative;

- (OrgAssertjCoreApiAbstractLongAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractLongAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isNotPositive;

- (OrgAssertjCoreApiAbstractLongAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isNotZero;

- (OrgAssertjCoreApiAbstractLongAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isPositive;

- (OrgAssertjCoreApiAbstractLongAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isStrictlyBetweenWithNSNumber:(JavaLangLong *)start
                                                          withNSNumber:(JavaLangLong *)end;

- (OrgAssertjCoreApiAbstractLongAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractLongAssert *)isZero;

- (OrgAssertjCoreApiAbstractLongAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                          withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractLongAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)customComparator;

- (OrgAssertjCoreApiAbstractLongAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaLangLong:(JavaLangLong *)actual
                        withIOSClass:(IOSClass *)selfType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractLongAssert)

J2OBJC_FIELD_SETTER(OrgAssertjCoreApiAbstractLongAssert, longs_, OrgAssertjCoreInternalLongs *)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractLongAssert_initWithJavaLangLong_withIOSClass_(OrgAssertjCoreApiAbstractLongAssert *self, JavaLangLong *actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractLongAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractLongAssert")
