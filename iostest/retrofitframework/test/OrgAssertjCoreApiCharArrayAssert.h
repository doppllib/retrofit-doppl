//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiCharArrayAssert")
#ifdef RESTRICT_OrgAssertjCoreApiCharArrayAssert
#define INCLUDE_ALL_OrgAssertjCoreApiCharArrayAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiCharArrayAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiCharArrayAssert

#if !defined (OrgAssertjCoreApiCharArrayAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiCharArrayAssert || defined(INCLUDE_OrgAssertjCoreApiCharArrayAssert))
#define OrgAssertjCoreApiCharArrayAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractCharArrayAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractCharArrayAssert 1
#include "OrgAssertjCoreApiAbstractCharArrayAssert.h"

@class IOSCharArray;
@class IOSClass;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDataIndex;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiCharArrayAssert : OrgAssertjCoreApiAbstractCharArrayAssert

#pragma mark Public

- (OrgAssertjCoreApiCharArrayAssert *)asWithNSString:(NSString *)arg0
                                   withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiCharArrayAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)containsExactlyWithCharArray:(IOSCharArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)containsOnlyOnceWithCharArray:(IOSCharArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)containsOnlyWithCharArray:(IOSCharArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)containsSequenceWithCharArray:(IOSCharArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)containsSubsequenceWithCharArray:(IOSCharArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)containsWithChar:(jchar)arg0
                           withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)arg1;

- (OrgAssertjCoreApiCharArrayAssert *)containsWithCharArray:(IOSCharArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)describedAsWithNSString:(NSString *)arg0
                                            withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiCharArrayAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)doesNotContainWithChar:(jchar)arg0
                                 withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)arg1;

- (OrgAssertjCoreApiCharArrayAssert *)doesNotContainWithCharArray:(IOSCharArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)doesNotHaveDuplicates;

- (OrgAssertjCoreApiCharArrayAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)endsWithWithCharArray:(IOSCharArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)hasSameSizeAsWithId:(id)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)hasSameSizeAsWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)hasSizeWithInt:(jint)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)inBinary;

- (OrgAssertjCoreApiCharArrayAssert *)inHexadecimal;

- (OrgAssertjCoreApiCharArrayAssert *)inUnicode;

- (OrgAssertjCoreApiCharArrayAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isNotEmpty;

- (OrgAssertjCoreApiCharArrayAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isNotNull;

- (OrgAssertjCoreApiCharArrayAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isSorted;

- (OrgAssertjCoreApiCharArrayAssert *)isSortedAccordingToWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                       withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiCharArrayAssert *)startsWithWithCharArray:(IOSCharArray *)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiCharArrayAssert *)usingDefaultComparator;

- (OrgAssertjCoreApiCharArrayAssert *)usingDefaultElementComparator;

- (OrgAssertjCoreApiCharArrayAssert *)usingElementComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

#pragma mark Protected

- (instancetype)initWithCharArray:(IOSCharArray *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiCharArrayAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiCharArrayAssert_initWithCharArray_(OrgAssertjCoreApiCharArrayAssert *self, IOSCharArray *actual);

FOUNDATION_EXPORT OrgAssertjCoreApiCharArrayAssert *new_OrgAssertjCoreApiCharArrayAssert_initWithCharArray_(IOSCharArray *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiCharArrayAssert *create_OrgAssertjCoreApiCharArrayAssert_initWithCharArray_(IOSCharArray *actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiCharArrayAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiCharArrayAssert")
