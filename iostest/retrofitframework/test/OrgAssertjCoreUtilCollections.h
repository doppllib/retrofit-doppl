//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreUtilCollections")
#ifdef RESTRICT_OrgAssertjCoreUtilCollections
#define INCLUDE_ALL_OrgAssertjCoreUtilCollections 0
#else
#define INCLUDE_ALL_OrgAssertjCoreUtilCollections 1
#endif
#undef RESTRICT_OrgAssertjCoreUtilCollections

#if !defined (OrgAssertjCoreUtilCollections_) && (INCLUDE_ALL_OrgAssertjCoreUtilCollections || defined(INCLUDE_OrgAssertjCoreUtilCollections))
#define OrgAssertjCoreUtilCollections_

@protocol JavaUtilCollection;
@protocol JavaUtilList;
@protocol OrgAssertjCorePresentationRepresentation;

@interface OrgAssertjCoreUtilCollections : NSObject

#pragma mark Public

+ (id<JavaUtilCollection>)duplicatesFromWithJavaUtilCollection:(id<JavaUtilCollection>)c;

+ (NSString *)formatWithJavaUtilCollection:(id<JavaUtilCollection>)c;

+ (NSString *)formatWithJavaUtilCollection:(id<JavaUtilCollection>)c
                              withNSString:(NSString *)start
                              withNSString:(NSString *)end;

+ (NSString *)formatWithOrgAssertjCorePresentationRepresentation:(id<OrgAssertjCorePresentationRepresentation>)p
                                          withJavaUtilCollection:(id<JavaUtilCollection>)c;

+ (NSString *)formatWithOrgAssertjCorePresentationRepresentation:(id<OrgAssertjCorePresentationRepresentation>)p
                                          withJavaUtilCollection:(id<JavaUtilCollection>)c
                                                    withNSString:(NSString *)start
                                                    withNSString:(NSString *)end;

+ (jboolean)isNullOrEmptyWithJavaUtilCollection:(id<JavaUtilCollection>)c;

+ (id<JavaUtilList>)nonNullElementsInWithJavaUtilCollection:(id<JavaUtilCollection>)c;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreUtilCollections)

FOUNDATION_EXPORT id<JavaUtilCollection> OrgAssertjCoreUtilCollections_duplicatesFromWithJavaUtilCollection_(id<JavaUtilCollection> c);

FOUNDATION_EXPORT jboolean OrgAssertjCoreUtilCollections_isNullOrEmptyWithJavaUtilCollection_(id<JavaUtilCollection> c);

FOUNDATION_EXPORT NSString *OrgAssertjCoreUtilCollections_formatWithJavaUtilCollection_(id<JavaUtilCollection> c);

FOUNDATION_EXPORT NSString *OrgAssertjCoreUtilCollections_formatWithOrgAssertjCorePresentationRepresentation_withJavaUtilCollection_(id<OrgAssertjCorePresentationRepresentation> p, id<JavaUtilCollection> c);

FOUNDATION_EXPORT NSString *OrgAssertjCoreUtilCollections_formatWithJavaUtilCollection_withNSString_withNSString_(id<JavaUtilCollection> c, NSString *start, NSString *end);

FOUNDATION_EXPORT NSString *OrgAssertjCoreUtilCollections_formatWithOrgAssertjCorePresentationRepresentation_withJavaUtilCollection_withNSString_withNSString_(id<OrgAssertjCorePresentationRepresentation> p, id<JavaUtilCollection> c, NSString *start, NSString *end);

FOUNDATION_EXPORT id<JavaUtilList> OrgAssertjCoreUtilCollections_nonNullElementsInWithJavaUtilCollection_(id<JavaUtilCollection> c);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreUtilCollections)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreUtilCollections")
