//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreInternalInternalStrings")
#ifdef RESTRICT_OrgAssertjCoreInternalInternalStrings
#define INCLUDE_ALL_OrgAssertjCoreInternalInternalStrings 0
#else
#define INCLUDE_ALL_OrgAssertjCoreInternalInternalStrings 1
#endif
#undef RESTRICT_OrgAssertjCoreInternalInternalStrings

#if !defined (OrgAssertjCoreInternalInternalStrings_) && (INCLUDE_ALL_OrgAssertjCoreInternalInternalStrings || defined(INCLUDE_OrgAssertjCoreInternalInternalStrings))
#define OrgAssertjCoreInternalInternalStrings_

@class IOSObjectArray;
@class JavaUtilRegexPattern;
@class OrgAssertjCoreInternalFailures;
@protocol JavaLangCharSequence;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;
@protocol OrgAssertjCoreApiAssertionInfo;
@protocol OrgAssertjCoreInternalComparisonStrategy;

@interface OrgAssertjCoreInternalInternalStrings : NSObject {
 @public
  OrgAssertjCoreInternalFailures *failures_;
}

#pragma mark Public

- (instancetype)initWithOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

- (void)assertContainsWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                           withJavaLangCharSequenceArray:(IOSObjectArray *)values;

- (void)assertContainsIgnoringCaseWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                            withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                            withJavaLangCharSequence:(id<JavaLangCharSequence>)sequence;

- (void)assertContainsOnlyOnceWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                        withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                        withJavaLangCharSequence:(id<JavaLangCharSequence>)sequence;

- (void)assertContainsSequenceWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                        withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                   withJavaLangCharSequenceArray:(IOSObjectArray *)values;

- (void)assertDoesNotContainWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                      withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                      withJavaLangCharSequence:(id<JavaLangCharSequence>)sequence;

- (void)assertDoesNotMatchWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                    withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                    withJavaLangCharSequence:(id<JavaLangCharSequence>)regex;

- (void)assertDoesNotMatchWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                    withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                    withJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern;

- (void)assertEmptyWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                             withJavaLangCharSequence:(id<JavaLangCharSequence>)actual;

- (void)assertEndsWithWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                withJavaLangCharSequence:(id<JavaLangCharSequence>)suffix;

- (void)assertEqualsIgnoringCaseWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                          withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                          withJavaLangCharSequence:(id<JavaLangCharSequence>)expected;

- (void)assertHasLineCountWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                    withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                                     withInt:(jint)expectedLineCount;

- (void)assertHasSameSizeAsWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                     withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                     withJavaLangCharSequence:(id<JavaLangCharSequence>)other;

- (void)assertHasSameSizeAsWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                     withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                         withJavaLangIterable:(id<JavaLangIterable>)other;

- (void)assertHasSameSizeAsWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                     withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                                       withId:(id)array;

- (void)assertHasSizeWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                               withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                                withInt:(jint)expectedSize;

- (void)assertMatchesWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                               withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                               withJavaLangCharSequence:(id<JavaLangCharSequence>)regex;

- (void)assertMatchesWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                               withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                               withJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern;

- (void)assertNotEmptyWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                withJavaLangCharSequence:(id<JavaLangCharSequence>)actual;

- (void)assertNullOrEmptyWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                   withJavaLangCharSequence:(id<JavaLangCharSequence>)actual;

- (void)assertStartsWithWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)prefix;

- (void)assertXmlEqualsToWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                   withJavaLangCharSequence:(id<JavaLangCharSequence>)actualXml
                                   withJavaLangCharSequence:(id<JavaLangCharSequence>)expectedXml;

- (id<JavaUtilComparator>)getComparator;

+ (OrgAssertjCoreInternalInternalStrings *)instance;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgAssertjCoreInternalInternalStrings)

J2OBJC_FIELD_SETTER(OrgAssertjCoreInternalInternalStrings, failures_, OrgAssertjCoreInternalFailures *)

FOUNDATION_EXPORT OrgAssertjCoreInternalInternalStrings *OrgAssertjCoreInternalInternalStrings_instance();

FOUNDATION_EXPORT void OrgAssertjCoreInternalInternalStrings_init(OrgAssertjCoreInternalInternalStrings *self);

FOUNDATION_EXPORT OrgAssertjCoreInternalInternalStrings *new_OrgAssertjCoreInternalInternalStrings_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreInternalInternalStrings *create_OrgAssertjCoreInternalInternalStrings_init();

FOUNDATION_EXPORT void OrgAssertjCoreInternalInternalStrings_initWithOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreInternalInternalStrings *self, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

FOUNDATION_EXPORT OrgAssertjCoreInternalInternalStrings *new_OrgAssertjCoreInternalInternalStrings_initWithOrgAssertjCoreInternalComparisonStrategy_(id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreInternalInternalStrings *create_OrgAssertjCoreInternalInternalStrings_initWithOrgAssertjCoreInternalComparisonStrategy_(id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreInternalInternalStrings)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreInternalInternalStrings")
