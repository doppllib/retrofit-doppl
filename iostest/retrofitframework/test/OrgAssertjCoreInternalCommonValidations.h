//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreInternalCommonValidations")
#ifdef RESTRICT_OrgAssertjCoreInternalCommonValidations
#define INCLUDE_ALL_OrgAssertjCoreInternalCommonValidations 0
#else
#define INCLUDE_ALL_OrgAssertjCoreInternalCommonValidations 1
#endif
#undef RESTRICT_OrgAssertjCoreInternalCommonValidations

#if !defined (OrgAssertjCoreInternalCommonValidations_) && (INCLUDE_ALL_OrgAssertjCoreInternalCommonValidations || defined(INCLUDE_OrgAssertjCoreInternalCommonValidations))
#define OrgAssertjCoreInternalCommonValidations_

@class IOSClass;
@class IOSObjectArray;
@class OrgAssertjCoreDataIndex;
@class OrgAssertjCoreDataOffset;
@protocol JavaLangIterable;
@protocol JavaUtilMap;
@protocol OrgAssertjCoreApiAssertionInfo;

@interface OrgAssertjCoreInternalCommonValidations : NSObject

#pragma mark Public

+ (void)checkLineCountsWithId:(id)actual
                      withInt:(jint)lineCountOfActual
                      withInt:(jint)lineCountOfOther
withOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info;

+ (void)checkSizesWithId:(id)actual
                 withInt:(jint)sizeOfActual
                 withInt:(jint)sizeOfOther
withOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info;

+ (void)checkTypeIsNotNullWithIOSClass:(IOSClass *)expectedType;

+ (void)hasSameSizeAsCheckWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                      withId:(id)actual
                                        withJavaLangIterable:(id<JavaLangIterable>)other
                                                     withInt:(jint)sizeOfActual;

+ (void)hasSameSizeAsCheckWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                      withId:(id)actual
                                             withJavaUtilMap:(id<JavaUtilMap>)other
                                                     withInt:(jint)sizeOfActual;

+ (void)hasSameSizeAsCheckWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                      withId:(id)actual
                                                      withId:(id)other
                                                     withInt:(jint)sizeOfActual;

#pragma mark Package-Private

+ (void)checkIndexValueIsValidWithOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index
                                                  withInt:(jint)maximum;

+ (void)checkIsNotEmptyWithJavaLangIterable:(id<JavaLangIterable>)iterable;

+ (void)checkIsNotEmptyWithNSObjectArray:(IOSObjectArray *)values;

+ (void)checkIsNotNullWithJavaLangIterable:(id<JavaLangIterable>)iterable;

+ (void)checkIsNotNullWithNSObjectArray:(IOSObjectArray *)values;

+ (void)checkIsNotNullAndNotEmptyWithJavaLangIterable:(id<JavaLangIterable>)iterable;

+ (void)checkIsNotNullAndNotEmptyWithNSObjectArray:(IOSObjectArray *)values;

+ (void)checkNumberIsNotNullWithNSNumber:(NSNumber *)number;

+ (void)checkOffsetIsNotNullWithOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)offset;

+ (void)checkOtherIsNotNullWithId:(id)other
                     withNSString:(NSString *)otherType;

+ (void)checkSameSizesWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                  withId:(id)actual
                                                 withInt:(jint)sizeOfActual
                                                 withInt:(jint)sizeOfOther;

+ (void)failIfEmptySinceActualIsNotEmptyWithNSObjectArray:(IOSObjectArray *)values;

@end

J2OBJC_STATIC_INIT(OrgAssertjCoreInternalCommonValidations)

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_checkIndexValueIsValidWithOrgAssertjCoreDataIndex_withInt_(OrgAssertjCoreDataIndex *index, jint maximum);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_checkOffsetIsNotNullWithOrgAssertjCoreDataOffset_(OrgAssertjCoreDataOffset *offset);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_checkNumberIsNotNullWithNSNumber_(NSNumber *number);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_checkIsNotEmptyWithNSObjectArray_(IOSObjectArray *values);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_checkIsNotEmptyWithJavaLangIterable_(id<JavaLangIterable> iterable);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_checkIsNotNullWithNSObjectArray_(IOSObjectArray *values);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_checkIsNotNullWithJavaLangIterable_(id<JavaLangIterable> iterable);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_checkIsNotNullAndNotEmptyWithNSObjectArray_(IOSObjectArray *values);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_checkIsNotNullAndNotEmptyWithJavaLangIterable_(id<JavaLangIterable> iterable);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_failIfEmptySinceActualIsNotEmptyWithNSObjectArray_(IOSObjectArray *values);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_hasSameSizeAsCheckWithOrgAssertjCoreApiAssertionInfo_withId_withId_withInt_(id<OrgAssertjCoreApiAssertionInfo> info, id actual, id other, jint sizeOfActual);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_hasSameSizeAsCheckWithOrgAssertjCoreApiAssertionInfo_withId_withJavaLangIterable_withInt_(id<OrgAssertjCoreApiAssertionInfo> info, id actual, id<JavaLangIterable> other, jint sizeOfActual);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_hasSameSizeAsCheckWithOrgAssertjCoreApiAssertionInfo_withId_withJavaUtilMap_withInt_(id<OrgAssertjCoreApiAssertionInfo> info, id actual, id<JavaUtilMap> other, jint sizeOfActual);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_checkOtherIsNotNullWithId_withNSString_(id other, NSString *otherType);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_checkSameSizesWithOrgAssertjCoreApiAssertionInfo_withId_withInt_withInt_(id<OrgAssertjCoreApiAssertionInfo> info, id actual, jint sizeOfActual, jint sizeOfOther);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_checkSizesWithId_withInt_withInt_withOrgAssertjCoreApiAssertionInfo_(id actual, jint sizeOfActual, jint sizeOfOther, id<OrgAssertjCoreApiAssertionInfo> info);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_checkLineCountsWithId_withInt_withInt_withOrgAssertjCoreApiAssertionInfo_(id actual, jint lineCountOfActual, jint lineCountOfOther, id<OrgAssertjCoreApiAssertionInfo> info);

FOUNDATION_EXPORT void OrgAssertjCoreInternalCommonValidations_checkTypeIsNotNullWithIOSClass_(IOSClass *expectedType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreInternalCommonValidations)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreInternalCommonValidations")
