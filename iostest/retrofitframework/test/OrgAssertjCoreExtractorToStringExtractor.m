//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "OrgAssertjCoreExtractorToStringExtractor.h"

@implementation OrgAssertjCoreExtractorToStringExtractor

- (NSString *)extractWithId:(id)input {
  return [nil_chk(input) description];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreExtractorToStringExtractor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(extractWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "extract", "LNSObject;", "Ljava/lang/Object;Lorg/assertj/core/api/iterable/Extractor<Ljava/lang/Object;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreExtractorToStringExtractor = { "ToStringExtractor", "org.assertj.core.extractor", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, 2, -1 };
  return &_OrgAssertjCoreExtractorToStringExtractor;
}

@end

void OrgAssertjCoreExtractorToStringExtractor_init(OrgAssertjCoreExtractorToStringExtractor *self) {
  NSObject_init(self);
}

OrgAssertjCoreExtractorToStringExtractor *new_OrgAssertjCoreExtractorToStringExtractor_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreExtractorToStringExtractor, init)
}

OrgAssertjCoreExtractorToStringExtractor *create_OrgAssertjCoreExtractorToStringExtractor_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreExtractorToStringExtractor, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreExtractorToStringExtractor)
