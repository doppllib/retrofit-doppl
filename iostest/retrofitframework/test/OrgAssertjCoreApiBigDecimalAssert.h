//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiBigDecimalAssert")
#ifdef RESTRICT_OrgAssertjCoreApiBigDecimalAssert
#define INCLUDE_ALL_OrgAssertjCoreApiBigDecimalAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiBigDecimalAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiBigDecimalAssert

#if !defined (OrgAssertjCoreApiBigDecimalAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiBigDecimalAssert || defined(INCLUDE_OrgAssertjCoreApiBigDecimalAssert))
#define OrgAssertjCoreApiBigDecimalAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractBigDecimalAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractBigDecimalAssert 1
#include "OrgAssertjCoreApiAbstractBigDecimalAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaMathBigDecimal;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDataOffset;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiBigDecimalAssert : OrgAssertjCoreApiAbstractBigDecimalAssert

#pragma mark Public

- (OrgAssertjCoreApiBigDecimalAssert *)asWithNSString:(NSString *)arg0
                                    withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiBigDecimalAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)describedAsWithNSString:(NSString *)arg0
                                             withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiBigDecimalAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)inBinary;

- (OrgAssertjCoreApiBigDecimalAssert *)inHexadecimal;

- (OrgAssertjCoreApiBigDecimalAssert *)isBetweenWithNSNumber:(JavaMathBigDecimal *)arg0
                                                withNSNumber:(JavaMathBigDecimal *)arg1;

- (OrgAssertjCoreApiBigDecimalAssert *)isCloseToWithJavaMathBigDecimal:(JavaMathBigDecimal *)arg0
                                          withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)arg1;

- (OrgAssertjCoreApiBigDecimalAssert *)isEqualByComparingToWithJavaLangComparable:(JavaMathBigDecimal *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isEqualByComparingToWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isEqualToWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(JavaMathBigDecimal *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isGreaterThanWithJavaLangComparable:(JavaMathBigDecimal *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isLessThanOrEqualToWithJavaLangComparable:(JavaMathBigDecimal *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isLessThanWithJavaLangComparable:(JavaMathBigDecimal *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isNegative;

- (OrgAssertjCoreApiBigDecimalAssert *)isNotEqualByComparingToWithJavaLangComparable:(JavaMathBigDecimal *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isNotNegative;

- (OrgAssertjCoreApiBigDecimalAssert *)isNotNull;

- (OrgAssertjCoreApiBigDecimalAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isNotPositive;

- (OrgAssertjCoreApiBigDecimalAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isNotZero;

- (OrgAssertjCoreApiBigDecimalAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isPositive;

- (OrgAssertjCoreApiBigDecimalAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isStrictlyBetweenWithNSNumber:(JavaMathBigDecimal *)arg0
                                                        withNSNumber:(JavaMathBigDecimal *)arg1;

- (OrgAssertjCoreApiBigDecimalAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)isZero;

- (OrgAssertjCoreApiBigDecimalAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                        withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiBigDecimalAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiBigDecimalAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaMathBigDecimal:(JavaMathBigDecimal *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiBigDecimalAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiBigDecimalAssert_initWithJavaMathBigDecimal_(OrgAssertjCoreApiBigDecimalAssert *self, JavaMathBigDecimal *actual);

FOUNDATION_EXPORT OrgAssertjCoreApiBigDecimalAssert *new_OrgAssertjCoreApiBigDecimalAssert_initWithJavaMathBigDecimal_(JavaMathBigDecimal *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiBigDecimalAssert *create_OrgAssertjCoreApiBigDecimalAssert_initWithJavaMathBigDecimal_(JavaMathBigDecimal *actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiBigDecimalAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiBigDecimalAssert")
