//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiLongAssert")
#ifdef RESTRICT_OrgAssertjCoreApiLongAssert
#define INCLUDE_ALL_OrgAssertjCoreApiLongAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiLongAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiLongAssert

#if !defined (OrgAssertjCoreApiLongAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiLongAssert || defined(INCLUDE_OrgAssertjCoreApiLongAssert))
#define OrgAssertjCoreApiLongAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractLongAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractLongAssert 1
#include "OrgAssertjCoreApiAbstractLongAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangLong;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiLongAssert : OrgAssertjCoreApiAbstractLongAssert

#pragma mark Public

- (OrgAssertjCoreApiLongAssert *)asWithNSString:(NSString *)arg0
                              withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiLongAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiLongAssert *)describedAsWithNSString:(NSString *)arg0
                                       withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiLongAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiLongAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiLongAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiLongAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiLongAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiLongAssert *)inBinary;

- (OrgAssertjCoreApiLongAssert *)inHexadecimal;

- (OrgAssertjCoreApiLongAssert *)isBetweenWithNSNumber:(JavaLangLong *)arg0
                                          withNSNumber:(JavaLangLong *)arg1;

- (OrgAssertjCoreApiLongAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiLongAssert *)isEqualToWithLong:(jlong)arg0;

- (OrgAssertjCoreApiLongAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiLongAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(JavaLangLong *)arg0;

- (OrgAssertjCoreApiLongAssert *)isGreaterThanOrEqualToWithLong:(jlong)arg0;

- (OrgAssertjCoreApiLongAssert *)isGreaterThanWithJavaLangComparable:(JavaLangLong *)arg0;

- (OrgAssertjCoreApiLongAssert *)isGreaterThanWithLong:(jlong)arg0;

- (OrgAssertjCoreApiLongAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiLongAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiLongAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiLongAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiLongAssert *)isLessThanOrEqualToWithJavaLangComparable:(JavaLangLong *)arg0;

- (OrgAssertjCoreApiLongAssert *)isLessThanOrEqualToWithLong:(jlong)arg0;

- (OrgAssertjCoreApiLongAssert *)isLessThanWithJavaLangComparable:(JavaLangLong *)arg0;

- (OrgAssertjCoreApiLongAssert *)isLessThanWithLong:(jlong)arg0;

- (OrgAssertjCoreApiLongAssert *)isNegative;

- (OrgAssertjCoreApiLongAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiLongAssert *)isNotEqualToWithLong:(jlong)arg0;

- (OrgAssertjCoreApiLongAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiLongAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiLongAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiLongAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiLongAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiLongAssert *)isNotNegative;

- (OrgAssertjCoreApiLongAssert *)isNotNull;

- (OrgAssertjCoreApiLongAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiLongAssert *)isNotPositive;

- (OrgAssertjCoreApiLongAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiLongAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiLongAssert *)isNotZero;

- (OrgAssertjCoreApiLongAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiLongAssert *)isPositive;

- (OrgAssertjCoreApiLongAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiLongAssert *)isStrictlyBetweenWithNSNumber:(JavaLangLong *)arg0
                                                  withNSNumber:(JavaLangLong *)arg1;

- (OrgAssertjCoreApiLongAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiLongAssert *)isZero;

- (OrgAssertjCoreApiLongAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                  withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiLongAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiLongAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaLangLong:(JavaLangLong *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiLongAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiLongAssert_initWithJavaLangLong_(OrgAssertjCoreApiLongAssert *self, JavaLangLong *actual);

FOUNDATION_EXPORT OrgAssertjCoreApiLongAssert *new_OrgAssertjCoreApiLongAssert_initWithJavaLangLong_(JavaLangLong *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiLongAssert *create_OrgAssertjCoreApiLongAssert_initWithJavaLangLong_(JavaLangLong *actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiLongAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiLongAssert")
