//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldNotBeEmpty")
#ifdef RESTRICT_OrgAssertjCoreErrorShouldNotBeEmpty
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldNotBeEmpty 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldNotBeEmpty 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorShouldNotBeEmpty

#if !defined (OrgAssertjCoreErrorShouldNotBeEmpty_) && (INCLUDE_ALL_OrgAssertjCoreErrorShouldNotBeEmpty || defined(INCLUDE_OrgAssertjCoreErrorShouldNotBeEmpty))
#define OrgAssertjCoreErrorShouldNotBeEmpty_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@protocol OrgAssertjCoreErrorErrorMessageFactory;

@interface OrgAssertjCoreErrorShouldNotBeEmpty : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldNotBeEmpty;

@end

J2OBJC_STATIC_INIT(OrgAssertjCoreErrorShouldNotBeEmpty)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldNotBeEmpty_shouldNotBeEmpty();

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorShouldNotBeEmpty)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldNotBeEmpty")
