//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreUtilFlushables.h"
#include "java/io/Flushable.h"
#include "java/lang/Exception.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"

@interface OrgAssertjCoreUtilFlushables ()

+ (void)flushFlushableWithJavaIoFlushable:(id<JavaIoFlushable>)f;

- (instancetype)init;

@end

inline JavaUtilLoggingLogger *OrgAssertjCoreUtilFlushables_get_logger();
inline JavaUtilLoggingLogger *OrgAssertjCoreUtilFlushables_set_logger(JavaUtilLoggingLogger *value);
static JavaUtilLoggingLogger *OrgAssertjCoreUtilFlushables_logger;
J2OBJC_STATIC_FIELD_OBJ(OrgAssertjCoreUtilFlushables, logger, JavaUtilLoggingLogger *)

__attribute__((unused)) static void OrgAssertjCoreUtilFlushables_flushFlushableWithJavaIoFlushable_(id<JavaIoFlushable> f);

__attribute__((unused)) static void OrgAssertjCoreUtilFlushables_init(OrgAssertjCoreUtilFlushables *self);

__attribute__((unused)) static OrgAssertjCoreUtilFlushables *new_OrgAssertjCoreUtilFlushables_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreUtilFlushables *create_OrgAssertjCoreUtilFlushables_init();

J2OBJC_INITIALIZED_DEFN(OrgAssertjCoreUtilFlushables)

@implementation OrgAssertjCoreUtilFlushables

+ (void)flushWithJavaIoFlushableArray:(IOSObjectArray *)flushables {
  OrgAssertjCoreUtilFlushables_flushWithJavaIoFlushableArray_(flushables);
}

+ (void)flushFlushableWithJavaIoFlushable:(id<JavaIoFlushable>)f {
  OrgAssertjCoreUtilFlushables_flushFlushableWithJavaIoFlushable_(f);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreUtilFlushables_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x89, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(flushWithJavaIoFlushableArray:);
  methods[1].selector = @selector(flushFlushableWithJavaIoFlushable:);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0xa, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "flush", "[LJavaIoFlushable;", "flushFlushable", "LJavaIoFlushable;", &OrgAssertjCoreUtilFlushables_logger };
  static const J2ObjcClassInfo _OrgAssertjCoreUtilFlushables = { "Flushables", "org.assertj.core.util", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreUtilFlushables;
}

+ (void)initialize {
  if (self == [OrgAssertjCoreUtilFlushables class]) {
    JreStrongAssign(&OrgAssertjCoreUtilFlushables_logger, JavaUtilLoggingLogger_getLoggerWithNSString_([OrgAssertjCoreUtilFlushables_class_() getCanonicalName]));
    J2OBJC_SET_INITIALIZED(OrgAssertjCoreUtilFlushables)
  }
}

@end

void OrgAssertjCoreUtilFlushables_flushWithJavaIoFlushableArray_(IOSObjectArray *flushables) {
  OrgAssertjCoreUtilFlushables_initialize();
  {
    IOSObjectArray *a__ = flushables;
    id<JavaIoFlushable> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaIoFlushable> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaIoFlushable> f = *b__++;
      OrgAssertjCoreUtilFlushables_flushFlushableWithJavaIoFlushable_(f);
    }
  }
}

void OrgAssertjCoreUtilFlushables_flushFlushableWithJavaIoFlushable_(id<JavaIoFlushable> f) {
  OrgAssertjCoreUtilFlushables_initialize();
  if (f == nil) {
    return;
  }
  @try {
    [f flush];
  }
  @catch (JavaLangException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(OrgAssertjCoreUtilFlushables_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$@", @"Error occurred while flushing ", f) withNSException:e];
  }
}

void OrgAssertjCoreUtilFlushables_init(OrgAssertjCoreUtilFlushables *self) {
  NSObject_init(self);
}

OrgAssertjCoreUtilFlushables *new_OrgAssertjCoreUtilFlushables_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreUtilFlushables, init)
}

OrgAssertjCoreUtilFlushables *create_OrgAssertjCoreUtilFlushables_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreUtilFlushables, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreUtilFlushables)
