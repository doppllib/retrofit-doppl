//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiAbstractShortArrayAssert.h"
#include "OrgAssertjCoreApiShortArrayAssert.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation OrgAssertjCoreApiShortArrayAssert

- (instancetype)initWithShortArray:(IOSShortArray *)actual {
  OrgAssertjCoreApiShortArrayAssert_initWithShortArray_(self, actual);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithShortArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "[S", "Lorg/assertj/core/api/AbstractShortArrayAssert<Lorg/assertj/core/api/ShortArrayAssert;>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreApiShortArrayAssert = { "ShortArrayAssert", "org.assertj.core.api", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, 1, -1 };
  return &_OrgAssertjCoreApiShortArrayAssert;
}

@end

void OrgAssertjCoreApiShortArrayAssert_initWithShortArray_(OrgAssertjCoreApiShortArrayAssert *self, IOSShortArray *actual) {
  OrgAssertjCoreApiAbstractShortArrayAssert_initWithShortArray_withIOSClass_(self, actual, OrgAssertjCoreApiShortArrayAssert_class_());
}

OrgAssertjCoreApiShortArrayAssert *new_OrgAssertjCoreApiShortArrayAssert_initWithShortArray_(IOSShortArray *actual) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreApiShortArrayAssert, initWithShortArray_, actual)
}

OrgAssertjCoreApiShortArrayAssert *create_OrgAssertjCoreApiShortArrayAssert_initWithShortArray_(IOSShortArray *actual) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreApiShortArrayAssert, initWithShortArray_, actual)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreApiShortArrayAssert)
