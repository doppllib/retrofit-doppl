//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiIterableExtractor.h"
#include "OrgAssertjCoreGroupsFieldsOrPropertiesExtractor.h"
#include "OrgAssertjCoreUtilIterables.h"
#include "OrgAssertjCoreUtilLists.h"
#include "java/lang/Iterable.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@implementation OrgAssertjCoreGroupsFieldsOrPropertiesExtractor

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreGroupsFieldsOrPropertiesExtractor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (IOSObjectArray *)extractWithNSObjectArray:(IOSObjectArray *)objects
      withOrgAssertjCoreApiIterableExtractor:(id<OrgAssertjCoreApiIterableExtractor>)extractor {
  return OrgAssertjCoreGroupsFieldsOrPropertiesExtractor_extractWithNSObjectArray_withOrgAssertjCoreApiIterableExtractor_(objects, extractor);
}

+ (id<JavaUtilList>)extractWithJavaLangIterable:(id<JavaLangIterable>)objects
         withOrgAssertjCoreApiIterableExtractor:(id<OrgAssertjCoreApiIterableExtractor>)extractor {
  return OrgAssertjCoreGroupsFieldsOrPropertiesExtractor_extractWithJavaLangIterable_withOrgAssertjCoreApiIterableExtractor_(objects, extractor);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 0, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(extractWithNSObjectArray:withOrgAssertjCoreApiIterableExtractor:);
  methods[2].selector = @selector(extractWithJavaLangIterable:withOrgAssertjCoreApiIterableExtractor:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "extract", "[LNSObject;LOrgAssertjCoreApiIterableExtractor;", "<F:Ljava/lang/Object;T:Ljava/lang/Object;>([TF;Lorg/assertj/core/api/iterable/Extractor<-TF;TT;>;)[TT;", "LJavaLangIterable;LOrgAssertjCoreApiIterableExtractor;", "<F:Ljava/lang/Object;T:Ljava/lang/Object;>(Ljava/lang/Iterable<TF;>;Lorg/assertj/core/api/iterable/Extractor<-TF;TT;>;)Ljava/util/List<TT;>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreGroupsFieldsOrPropertiesExtractor = { "FieldsOrPropertiesExtractor", "org.assertj.core.groups", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreGroupsFieldsOrPropertiesExtractor;
}

@end

void OrgAssertjCoreGroupsFieldsOrPropertiesExtractor_init(OrgAssertjCoreGroupsFieldsOrPropertiesExtractor *self) {
  NSObject_init(self);
}

OrgAssertjCoreGroupsFieldsOrPropertiesExtractor *new_OrgAssertjCoreGroupsFieldsOrPropertiesExtractor_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreGroupsFieldsOrPropertiesExtractor, init)
}

OrgAssertjCoreGroupsFieldsOrPropertiesExtractor *create_OrgAssertjCoreGroupsFieldsOrPropertiesExtractor_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreGroupsFieldsOrPropertiesExtractor, init)
}

IOSObjectArray *OrgAssertjCoreGroupsFieldsOrPropertiesExtractor_extractWithNSObjectArray_withOrgAssertjCoreApiIterableExtractor_(IOSObjectArray *objects, id<OrgAssertjCoreApiIterableExtractor> extractor) {
  OrgAssertjCoreGroupsFieldsOrPropertiesExtractor_initialize();
  id<JavaUtilList> result = OrgAssertjCoreGroupsFieldsOrPropertiesExtractor_extractWithJavaLangIterable_withOrgAssertjCoreApiIterableExtractor_(OrgAssertjCoreUtilLists_newArrayListWithNSObjectArray_(objects), extractor);
  return OrgAssertjCoreUtilIterables_toArrayWithJavaLangIterable_(result);
}

id<JavaUtilList> OrgAssertjCoreGroupsFieldsOrPropertiesExtractor_extractWithJavaLangIterable_withOrgAssertjCoreApiIterableExtractor_(id<JavaLangIterable> objects, id<OrgAssertjCoreApiIterableExtractor> extractor) {
  OrgAssertjCoreGroupsFieldsOrPropertiesExtractor_initialize();
  id<JavaUtilList> result = OrgAssertjCoreUtilLists_newArrayList();
  for (id __strong object in nil_chk(objects)) {
    id newValue = [((id<OrgAssertjCoreApiIterableExtractor>) nil_chk(extractor)) extractWithId:object];
    [((id<JavaUtilList>) nil_chk(result)) addWithId:newValue];
  }
  return result;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreGroupsFieldsOrPropertiesExtractor)
