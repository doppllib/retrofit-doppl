//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiClassAssert")
#ifdef RESTRICT_OrgAssertjCoreApiClassAssert
#define INCLUDE_ALL_OrgAssertjCoreApiClassAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiClassAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiClassAssert

#if !defined (OrgAssertjCoreApiClassAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiClassAssert || defined(INCLUDE_OrgAssertjCoreApiClassAssert))
#define OrgAssertjCoreApiClassAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractClassAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractClassAssert 1
#include "OrgAssertjCoreApiAbstractClassAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiClassAssert : OrgAssertjCoreApiAbstractClassAssert

#pragma mark Public

- (OrgAssertjCoreApiClassAssert *)asWithNSString:(NSString *)arg0
                               withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiClassAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiClassAssert *)describedAsWithNSString:(NSString *)arg0
                                        withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiClassAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiClassAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiClassAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiClassAssert *)hasAnnotationsWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiClassAssert *)hasAnnotationWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiClassAssert *)hasDeclaredFieldsWithNSStringArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiClassAssert *)hasFieldsWithNSStringArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiClassAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiClassAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiClassAssert *)isAnnotation;

- (OrgAssertjCoreApiClassAssert *)isAssignableFromWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiClassAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiClassAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiClassAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiClassAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiClassAssert *)isInterface;

- (OrgAssertjCoreApiClassAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiClassAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiClassAssert *)isNotAnnotation;

- (OrgAssertjCoreApiClassAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiClassAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiClassAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiClassAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiClassAssert *)isNotInterface;

- (OrgAssertjCoreApiClassAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiClassAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiClassAssert *)isNotNull;

- (OrgAssertjCoreApiClassAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiClassAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiClassAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiClassAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiClassAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiClassAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiClassAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                   withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiClassAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiClassAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithIOSClass:(IOSClass *)actual;

- (OrgAssertjCoreApiClassAssert *)inBinary;

- (OrgAssertjCoreApiClassAssert *)inHexadecimal;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiClassAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiClassAssert_initWithIOSClass_(OrgAssertjCoreApiClassAssert *self, IOSClass *actual);

FOUNDATION_EXPORT OrgAssertjCoreApiClassAssert *new_OrgAssertjCoreApiClassAssert_initWithIOSClass_(IOSClass *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiClassAssert *create_OrgAssertjCoreApiClassAssert_initWithIOSClass_(IOSClass *actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiClassAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiClassAssert")
