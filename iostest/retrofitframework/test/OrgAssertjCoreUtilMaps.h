//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreUtilMaps")
#ifdef RESTRICT_OrgAssertjCoreUtilMaps
#define INCLUDE_ALL_OrgAssertjCoreUtilMaps 0
#else
#define INCLUDE_ALL_OrgAssertjCoreUtilMaps 1
#endif
#undef RESTRICT_OrgAssertjCoreUtilMaps

#if !defined (OrgAssertjCoreUtilMaps_) && (INCLUDE_ALL_OrgAssertjCoreUtilMaps || defined(INCLUDE_OrgAssertjCoreUtilMaps))
#define OrgAssertjCoreUtilMaps_

@class JavaUtilWeakHashMap;
@protocol JavaUtilConcurrentConcurrentMap;
@protocol JavaUtilMap;
@protocol OrgAssertjCorePresentationRepresentation;

@interface OrgAssertjCoreUtilMaps : NSObject

#pragma mark Public

+ (NSString *)formatWithJavaUtilMap:(id<JavaUtilMap>)map;

+ (NSString *)formatWithOrgAssertjCorePresentationRepresentation:(id<OrgAssertjCorePresentationRepresentation>)p
                                                 withJavaUtilMap:(id<JavaUtilMap>)map;

+ (jboolean)isNullOrEmptyWithJavaUtilMap:(id<JavaUtilMap>)map;

+ (id<JavaUtilConcurrentConcurrentMap>)newConcurrentHashMap OBJC_METHOD_FAMILY_NONE;

+ (id<JavaUtilMap>)newHashMap OBJC_METHOD_FAMILY_NONE;

+ (JavaUtilWeakHashMap *)newWeakHashMap OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreUtilMaps)

FOUNDATION_EXPORT id<JavaUtilMap> OrgAssertjCoreUtilMaps_newHashMap();

FOUNDATION_EXPORT id<JavaUtilConcurrentConcurrentMap> OrgAssertjCoreUtilMaps_newConcurrentHashMap();

FOUNDATION_EXPORT JavaUtilWeakHashMap *OrgAssertjCoreUtilMaps_newWeakHashMap();

FOUNDATION_EXPORT jboolean OrgAssertjCoreUtilMaps_isNullOrEmptyWithJavaUtilMap_(id<JavaUtilMap> map);

FOUNDATION_EXPORT NSString *OrgAssertjCoreUtilMaps_formatWithJavaUtilMap_(id<JavaUtilMap> map);

FOUNDATION_EXPORT NSString *OrgAssertjCoreUtilMaps_formatWithOrgAssertjCorePresentationRepresentation_withJavaUtilMap_(id<OrgAssertjCorePresentationRepresentation> p, id<JavaUtilMap> map);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreUtilMaps)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreUtilMaps")
