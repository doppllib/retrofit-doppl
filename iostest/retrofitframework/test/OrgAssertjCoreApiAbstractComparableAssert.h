//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractComparableAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractComparableAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractComparableAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractComparableAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractComparableAssert

#if !defined (OrgAssertjCoreApiAbstractComparableAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractComparableAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractComparableAssert))
#define OrgAssertjCoreApiAbstractComparableAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractAssert 1
#include "OrgAssertjCoreApiAbstractAssert.h"

#define RESTRICT_OrgAssertjCoreApiComparableAssert 1
#define INCLUDE_OrgAssertjCoreApiComparableAssert 1
#include "OrgAssertjCoreApiComparableAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@class OrgAssertjCoreInternalComparables;
@protocol JavaLangComparable;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractComparableAssert : OrgAssertjCoreApiAbstractAssert < OrgAssertjCoreApiComparableAssert > {
 @public
  OrgAssertjCoreInternalComparables *comparables_;
}

#pragma mark Public

- (OrgAssertjCoreApiAbstractComparableAssert *)asWithNSString:(NSString *)arg0
                                            withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractComparableAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)describedAsWithNSString:(NSString *)arg0
                                                     withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractComparableAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)inBinary;

- (OrgAssertjCoreApiAbstractComparableAssert *)inHexadecimal;

- (OrgAssertjCoreApiAbstractComparableAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isGreaterThanWithJavaLangComparable:(id<JavaLangComparable>)other;

- (OrgAssertjCoreApiAbstractComparableAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(id<JavaLangComparable>)other;

- (OrgAssertjCoreApiAbstractComparableAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isLessThanWithJavaLangComparable:(id<JavaLangComparable>)other;

- (OrgAssertjCoreApiAbstractComparableAssert *)isLessThanOrEqualToWithJavaLangComparable:(id<JavaLangComparable>)other;

- (OrgAssertjCoreApiAbstractComparableAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractComparableAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractComparableAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                                withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractComparableAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)customComparator;

- (OrgAssertjCoreApiAbstractComparableAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaLangComparable:(id<JavaLangComparable>)actual
                              withIOSClass:(IOSClass *)selfType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractComparableAssert)

J2OBJC_FIELD_SETTER(OrgAssertjCoreApiAbstractComparableAssert, comparables_, OrgAssertjCoreInternalComparables *)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractComparableAssert_initWithJavaLangComparable_withIOSClass_(OrgAssertjCoreApiAbstractComparableAssert *self, id<JavaLangComparable> actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractComparableAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractComparableAssert")
