//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiDescriptionValidations.h"
#include "OrgAssertjCoreApiWritableAssertionInfo.h"
#include "OrgAssertjCoreDescriptionDescription.h"
#include "OrgAssertjCorePresentationBinaryRepresentation.h"
#include "OrgAssertjCorePresentationHexadecimalRepresentation.h"
#include "OrgAssertjCorePresentationRepresentation.h"
#include "OrgAssertjCorePresentationStandardRepresentation.h"
#include "OrgAssertjCorePresentationUnicodeRepresentation.h"
#include "OrgAssertjCoreUtilStrings.h"

@interface OrgAssertjCoreApiWritableAssertionInfo () {
 @public
  NSString *overridingErrorMessage_;
  OrgAssertjCoreDescriptionDescription *description__;
  id<OrgAssertjCorePresentationRepresentation> representation_;
}

@end

J2OBJC_FIELD_SETTER(OrgAssertjCoreApiWritableAssertionInfo, overridingErrorMessage_, NSString *)
J2OBJC_FIELD_SETTER(OrgAssertjCoreApiWritableAssertionInfo, description__, OrgAssertjCoreDescriptionDescription *)
J2OBJC_FIELD_SETTER(OrgAssertjCoreApiWritableAssertionInfo, representation_, id<OrgAssertjCorePresentationRepresentation>)

@implementation OrgAssertjCoreApiWritableAssertionInfo

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreApiWritableAssertionInfo_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)overridingErrorMessage {
  return overridingErrorMessage_;
}

- (void)overridingErrorMessageWithNSString:(NSString *)newErrorMessage {
  JreStrongAssign(&overridingErrorMessage_, newErrorMessage);
}

- (OrgAssertjCoreDescriptionDescription *)description__ {
  return description__;
}

- (NSString *)descriptionText {
  return description__ != nil ? [description__ value] : nil;
}

- (void)description__WithNSString:(NSString *)newDescription
                withNSObjectArray:(IOSObjectArray *)args {
  JreStrongAssign(&description__, OrgAssertjCoreApiDescriptionValidations_checkIsNotNullWithNSString_withNSObjectArray_(newDescription, args));
}

- (void)description__WithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)newDescription {
  JreStrongAssign(&description__, OrgAssertjCoreApiDescriptionValidations_checkIsNotNullWithOrgAssertjCoreDescriptionDescription_(newDescription));
}

- (id<OrgAssertjCorePresentationRepresentation>)representation {
  if (representation_ == nil) {
    JreStrongAssignAndConsume(&representation_, new_OrgAssertjCorePresentationStandardRepresentation_init());
  }
  return representation_;
}

- (void)useHexadecimalRepresentation {
  JreStrongAssignAndConsume(&representation_, new_OrgAssertjCorePresentationHexadecimalRepresentation_init());
}

- (void)useUnicodeRepresentation {
  JreStrongAssignAndConsume(&representation_, new_OrgAssertjCorePresentationUnicodeRepresentation_init());
}

- (void)useBinaryRepresentation {
  JreStrongAssignAndConsume(&representation_, new_OrgAssertjCorePresentationBinaryRepresentation_init());
}

- (void)useRepresentationWithOrgAssertjCorePresentationRepresentation:(id<OrgAssertjCorePresentationRepresentation>)newRepresentation {
  JreStrongAssign(&representation_, newRepresentation);
}

- (NSString *)description {
  NSString *format = @"%s[overridingErrorMessage=%s, description=%s]";
  return NSString_java_formatWithNSString_withNSObjectArray_(format, [IOSObjectArray arrayWithObjects:(id[]){ [[self java_getClass] getSimpleName], OrgAssertjCoreUtilStrings_quoteWithNSString_([self overridingErrorMessage]), OrgAssertjCoreUtilStrings_quoteWithNSString_([self descriptionText]) } count:3 type:NSObject_class_()]);
}

- (void)dealloc {
  RELEASE_(overridingErrorMessage_);
  RELEASE_(description__);
  RELEASE_(representation_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgAssertjCoreDescriptionDescription;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x81, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 4, -1, -1, -1, -1 },
    { NULL, "LOrgAssertjCorePresentationRepresentation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(overridingErrorMessage);
  methods[2].selector = @selector(overridingErrorMessageWithNSString:);
  methods[3].selector = @selector(description__);
  methods[4].selector = @selector(descriptionText);
  methods[5].selector = @selector(description__WithNSString:withNSObjectArray:);
  methods[6].selector = @selector(description__WithOrgAssertjCoreDescriptionDescription:);
  methods[7].selector = @selector(representation);
  methods[8].selector = @selector(useHexadecimalRepresentation);
  methods[9].selector = @selector(useUnicodeRepresentation);
  methods[10].selector = @selector(useBinaryRepresentation);
  methods[11].selector = @selector(useRepresentationWithOrgAssertjCorePresentationRepresentation:);
  methods[12].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "overridingErrorMessage_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "description__", "LOrgAssertjCoreDescriptionDescription;", .constantValue.asLong = 0, 0x2, 2, -1, -1, -1 },
    { "representation_", "LOrgAssertjCorePresentationRepresentation;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "overridingErrorMessage", "LNSString;", "description", "LNSString;[LNSObject;", "LOrgAssertjCoreDescriptionDescription;", "useRepresentation", "LOrgAssertjCorePresentationRepresentation;", "toString" };
  static const J2ObjcClassInfo _OrgAssertjCoreApiWritableAssertionInfo = { "WritableAssertionInfo", "org.assertj.core.api", ptrTable, methods, fields, 7, 0x1, 13, 3, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreApiWritableAssertionInfo;
}

@end

void OrgAssertjCoreApiWritableAssertionInfo_init(OrgAssertjCoreApiWritableAssertionInfo *self) {
  NSObject_init(self);
}

OrgAssertjCoreApiWritableAssertionInfo *new_OrgAssertjCoreApiWritableAssertionInfo_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreApiWritableAssertionInfo, init)
}

OrgAssertjCoreApiWritableAssertionInfo *create_OrgAssertjCoreApiWritableAssertionInfo_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreApiWritableAssertionInfo, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreApiWritableAssertionInfo)
