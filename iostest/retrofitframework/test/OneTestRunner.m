//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "CoTouchlabDopplTestingDopplJunitTestHelper.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OneTestRunner.h"
#include "RetrofitCallbackRunnableTest.h"
#include "RetrofitCheckMockTest.h"
#include "RetrofitClientUrlConnectionClientTest.h"
#include "RetrofitEndpointsTest.h"
#include "RetrofitErrorHandlerTest.h"
#include "RetrofitMimeFormUrlEncodingTypedOutputTest.h"
#include "RetrofitMimeMimeUtilTest.h"
#include "RetrofitMimeMultipartTypedOutputTest.h"
#include "RetrofitMimeTypedByteArrayTest.h"
#include "RetrofitMimeTypedFileTest.h"
#include "RetrofitRequestBuilderTest.h"
#include "RetrofitRestAdapterTest.h"
#include "RetrofitRestMethodInfoTest.h"
#include "RetrofitRxSupportTest.h"
#include "org/junit/runner/notification/RunListener.h"

@interface OneTestRunner_1 : NSObject < CoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener >

- (instancetype)init;

- (void)startRunWithNSString:(NSString *)s;

- (void)endRunWithNSString:(NSString *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(OneTestRunner_1)

__attribute__((unused)) static void OneTestRunner_1_init(OneTestRunner_1 *self);

__attribute__((unused)) static OneTestRunner_1 *new_OneTestRunner_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OneTestRunner_1 *create_OneTestRunner_1_init();

J2OBJC_INITIALIZED_DEFN(OneTestRunner)

IOSObjectArray *OneTestRunner_classes;

@implementation OneTestRunner

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OneTestRunner_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)runTests {
  return OneTestRunner_runTests();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(runTests);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "classes", "[LIOSClass;", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &OneTestRunner_classes };
  static const J2ObjcClassInfo _OneTestRunner = { "OneTestRunner", NULL, ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OneTestRunner;
}

+ (void)initialize {
  if (self == [OneTestRunner class]) {
    JreStrongAssignAndConsume(&OneTestRunner_classes, [IOSObjectArray newArrayWithObjects:(id[]){ RetrofitCallbackRunnableTest_class_(), RetrofitCheckMockTest_class_(), RetrofitEndpointsTest_class_(), RetrofitErrorHandlerTest_class_(), RetrofitRequestBuilderTest_class_(), RetrofitRestAdapterTest_class_(), RetrofitRestMethodInfoTest_class_(), RetrofitRxSupportTest_class_(), RetrofitCheckMockTest_class_(), RetrofitEndpointsTest_class_(), RetrofitErrorHandlerTest_class_(), RetrofitRequestBuilderTest_class_(), RetrofitRestAdapterTest_class_(), RetrofitRestMethodInfoTest_class_(), RetrofitRxSupportTest_class_(), RetrofitClientUrlConnectionClientTest_class_(), RetrofitMimeFormUrlEncodingTypedOutputTest_class_(), RetrofitMimeMimeUtilTest_class_(), RetrofitMimeMultipartTypedOutputTest_class_(), RetrofitMimeTypedByteArrayTest_class_(), RetrofitMimeTypedFileTest_class_() } count:21 type:IOSClass_class_()]);
    J2OBJC_SET_INITIALIZED(OneTestRunner)
  }
}

@end

void OneTestRunner_init(OneTestRunner *self) {
  NSObject_init(self);
}

OneTestRunner *new_OneTestRunner_init() {
  J2OBJC_NEW_IMPL(OneTestRunner, init)
}

OneTestRunner *create_OneTestRunner_init() {
  J2OBJC_CREATE_IMPL(OneTestRunner, init)
}

jint OneTestRunner_runTests() {
  OneTestRunner_initialize();
  return CoTouchlabDopplTestingDopplJunitTestHelper_runWithIOSClassArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDopplTestingDopplJunitTestHelper_DopplJunitListener_(OneTestRunner_classes, create_OrgJunitRunnerNotificationRunListener_init(), create_OneTestRunner_1_init());
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OneTestRunner)

@implementation OneTestRunner_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OneTestRunner_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)startRunWithNSString:(NSString *)s {
}

- (void)endRunWithNSString:(NSString *)s {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(startRunWithNSString:);
  methods[2].selector = @selector(endRunWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "startRun", "LNSString;", "endRun", "LOneTestRunner;", "runTests" };
  static const J2ObjcClassInfo _OneTestRunner_1 = { "", NULL, ptrTable, methods, NULL, 7, 0x8018, 3, 0, 3, -1, 4, -1, -1 };
  return &_OneTestRunner_1;
}

@end

void OneTestRunner_1_init(OneTestRunner_1 *self) {
  NSObject_init(self);
}

OneTestRunner_1 *new_OneTestRunner_1_init() {
  J2OBJC_NEW_IMPL(OneTestRunner_1, init)
}

OneTestRunner_1 *create_OneTestRunner_1_init() {
  J2OBJC_CREATE_IMPL(OneTestRunner_1, init)
}
