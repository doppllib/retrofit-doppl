//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractDoubleAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractDoubleAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractDoubleAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractDoubleAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractDoubleAssert

#if !defined (OrgAssertjCoreApiAbstractDoubleAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractDoubleAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractDoubleAssert))
#define OrgAssertjCoreApiAbstractDoubleAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractComparableAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractComparableAssert 1
#include "OrgAssertjCoreApiAbstractComparableAssert.h"

#define RESTRICT_OrgAssertjCoreApiFloatingPointNumberAssert 1
#define INCLUDE_OrgAssertjCoreApiFloatingPointNumberAssert 1
#include "OrgAssertjCoreApiFloatingPointNumberAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangDouble;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDataOffset;
@class OrgAssertjCoreDescriptionDescription;
@class OrgAssertjCoreInternalDoubles;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractDoubleAssert : OrgAssertjCoreApiAbstractComparableAssert < OrgAssertjCoreApiFloatingPointNumberAssert > {
 @public
  OrgAssertjCoreInternalDoubles *doubles_;
}

#pragma mark Public

- (OrgAssertjCoreApiAbstractDoubleAssert *)asWithNSString:(NSString *)arg0
                                        withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractDoubleAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)describedAsWithNSString:(NSString *)arg0
                                                 withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractDoubleAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)inBinary;

- (OrgAssertjCoreApiAbstractDoubleAssert *)inHexadecimal;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isBetweenWithNSNumber:(JavaLangDouble *)start
                                                    withNSNumber:(JavaLangDouble *)end;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isCloseToWithDouble:(jdouble)other
                                  withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)offset;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isCloseToWithNSNumber:(JavaLangDouble *)other
                                    withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)offset;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isEqualToWithDouble:(jdouble)expected;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isEqualToWithNSNumber:(JavaLangDouble *)expected
                                    withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)offset;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isEqualToWithDouble:(jdouble)expected
                                  withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)offset;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isGreaterThanWithDouble:(jdouble)other;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isGreaterThanOrEqualToWithDouble:(jdouble)other;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(JavaLangDouble *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isGreaterThanWithJavaLangComparable:(JavaLangDouble *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isLessThanWithDouble:(jdouble)other;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isLessThanOrEqualToWithDouble:(jdouble)other;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isLessThanOrEqualToWithJavaLangComparable:(JavaLangDouble *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isLessThanWithJavaLangComparable:(JavaLangDouble *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNaN;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNegative;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotEqualToWithDouble:(jdouble)other;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotNaN;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotNegative;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotPositive;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isNotZero;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isPositive;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isStrictlyBetweenWithNSNumber:(JavaLangDouble *)start
                                                            withNSNumber:(JavaLangDouble *)end;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractDoubleAssert *)isZero;

- (OrgAssertjCoreApiAbstractDoubleAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                            withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractDoubleAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)customComparator;

- (OrgAssertjCoreApiAbstractDoubleAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaLangDouble:(JavaLangDouble *)actual
                          withIOSClass:(IOSClass *)selfType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractDoubleAssert)

J2OBJC_FIELD_SETTER(OrgAssertjCoreApiAbstractDoubleAssert, doubles_, OrgAssertjCoreInternalDoubles *)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractDoubleAssert_initWithJavaLangDouble_withIOSClass_(OrgAssertjCoreApiAbstractDoubleAssert *self, JavaLangDouble *actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractDoubleAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractDoubleAssert")
