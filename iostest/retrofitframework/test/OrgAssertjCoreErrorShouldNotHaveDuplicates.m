//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldNotHaveDuplicates.h"
#include "OrgAssertjCoreInternalComparisonStrategy.h"
#include "OrgAssertjCoreInternalStandardComparisonStrategy.h"

@interface OrgAssertjCoreErrorShouldNotHaveDuplicates ()

- (instancetype)initWithId:(id)actual
                    withId:(id)duplicates
withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldNotHaveDuplicates_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreErrorShouldNotHaveDuplicates *self, id actual, id duplicates, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

__attribute__((unused)) static OrgAssertjCoreErrorShouldNotHaveDuplicates *new_OrgAssertjCoreErrorShouldNotHaveDuplicates_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id duplicates, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldNotHaveDuplicates *create_OrgAssertjCoreErrorShouldNotHaveDuplicates_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id duplicates, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

@implementation OrgAssertjCoreErrorShouldNotHaveDuplicates

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldNotHaveDuplicatesWithId:(id)actual
                                                                     withId:(id)duplicates
                               withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy {
  return OrgAssertjCoreErrorShouldNotHaveDuplicates_shouldNotHaveDuplicatesWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(actual, duplicates, comparisonStrategy);
}

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldNotHaveDuplicatesWithId:(id)actual
                                                                     withId:(id)duplicates {
  return OrgAssertjCoreErrorShouldNotHaveDuplicates_shouldNotHaveDuplicatesWithId_withId_(actual, duplicates);
}

- (instancetype)initWithId:(id)actual
                    withId:(id)duplicates
withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy {
  OrgAssertjCoreErrorShouldNotHaveDuplicates_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(self, actual, duplicates, comparisonStrategy);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldNotHaveDuplicatesWithId:withId:withOrgAssertjCoreInternalComparisonStrategy:);
  methods[1].selector = @selector(shouldNotHaveDuplicatesWithId:withId:);
  methods[2].selector = @selector(initWithId:withId:withOrgAssertjCoreInternalComparisonStrategy:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldNotHaveDuplicates", "LNSObject;LNSObject;LOrgAssertjCoreInternalComparisonStrategy;", "LNSObject;LNSObject;" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldNotHaveDuplicates = { "ShouldNotHaveDuplicates", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldNotHaveDuplicates;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldNotHaveDuplicates_shouldNotHaveDuplicatesWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id duplicates, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  OrgAssertjCoreErrorShouldNotHaveDuplicates_initialize();
  return create_OrgAssertjCoreErrorShouldNotHaveDuplicates_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(actual, duplicates, comparisonStrategy);
}

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldNotHaveDuplicates_shouldNotHaveDuplicatesWithId_withId_(id actual, id duplicates) {
  OrgAssertjCoreErrorShouldNotHaveDuplicates_initialize();
  return create_OrgAssertjCoreErrorShouldNotHaveDuplicates_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(actual, duplicates, OrgAssertjCoreInternalStandardComparisonStrategy_instance());
}

void OrgAssertjCoreErrorShouldNotHaveDuplicates_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreErrorShouldNotHaveDuplicates *self, id actual, id duplicates, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nFound duplicate(s):\n <%s>\nin:\n <%s>\n%s", [IOSObjectArray arrayWithObjects:(id[]){ duplicates, actual, comparisonStrategy } count:3 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldNotHaveDuplicates *new_OrgAssertjCoreErrorShouldNotHaveDuplicates_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id duplicates, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldNotHaveDuplicates, initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_, actual, duplicates, comparisonStrategy)
}

OrgAssertjCoreErrorShouldNotHaveDuplicates *create_OrgAssertjCoreErrorShouldNotHaveDuplicates_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id duplicates, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldNotHaveDuplicates, initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_, actual, duplicates, comparisonStrategy)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldNotHaveDuplicates)
