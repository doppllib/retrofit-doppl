//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreUtilHexadecimals")
#ifdef RESTRICT_OrgAssertjCoreUtilHexadecimals
#define INCLUDE_ALL_OrgAssertjCoreUtilHexadecimals 0
#else
#define INCLUDE_ALL_OrgAssertjCoreUtilHexadecimals 1
#endif
#undef RESTRICT_OrgAssertjCoreUtilHexadecimals

#if !defined (OrgAssertjCoreUtilHexadecimals_) && (INCLUDE_ALL_OrgAssertjCoreUtilHexadecimals || defined(INCLUDE_OrgAssertjCoreUtilHexadecimals))
#define OrgAssertjCoreUtilHexadecimals_

@class IOSCharArray;
@class JavaLangByte;

@interface OrgAssertjCoreUtilHexadecimals : NSObject

#pragma mark Public

+ (NSString *)byteToHexStringWithJavaLangByte:(JavaLangByte *)b;

@end

J2OBJC_STATIC_INIT(OrgAssertjCoreUtilHexadecimals)

inline IOSCharArray *OrgAssertjCoreUtilHexadecimals_get_HEX_ARRAY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSCharArray *OrgAssertjCoreUtilHexadecimals_HEX_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgAssertjCoreUtilHexadecimals, HEX_ARRAY, IOSCharArray *)

FOUNDATION_EXPORT NSString *OrgAssertjCoreUtilHexadecimals_byteToHexStringWithJavaLangByte_(JavaLangByte *b);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreUtilHexadecimals)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreUtilHexadecimals")
