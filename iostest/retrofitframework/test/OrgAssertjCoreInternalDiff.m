//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreInternalDiff.h"
#include "OrgAssertjCoreUtilCloseables.h"
#include "OrgAssertjCoreUtilObjects.h"
#include "java/io/BufferedReader.h"
#include "java/io/Closeable.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/StringReader.h"
#include "java/lang/Integer.h"
#include "java/nio/charset/Charset.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"

@interface OrgAssertjCoreInternalDiff ()

- (JavaIoBufferedReader *)readerForWithJavaIoInputStream:(JavaIoInputStream *)stream;

- (JavaIoBufferedReader *)readerForWithJavaIoInputStream:(JavaIoInputStream *)stream
                               withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (JavaIoBufferedReader *)readerForWithJavaIoFile:(JavaIoFile *)file;

- (JavaIoBufferedReader *)readerForWithJavaIoFile:(JavaIoFile *)file
                        withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (JavaIoBufferedReader *)readerForWithNSString:(NSString *)string;

- (id<JavaUtilList>)diffWithJavaIoBufferedReader:(JavaIoBufferedReader *)actual
                        withJavaIoBufferedReader:(JavaIoBufferedReader *)expected;

- (NSString *)outputWithInt:(jint)lineNumber
               withNSString:(NSString *)actual
               withNSString:(NSString *)expected;

@end

inline NSString *OrgAssertjCoreInternalDiff_get_EOF();
static NSString *OrgAssertjCoreInternalDiff_EOF = @"EOF";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgAssertjCoreInternalDiff, EOF, NSString *)

__attribute__((unused)) static JavaIoBufferedReader *OrgAssertjCoreInternalDiff_readerForWithJavaIoInputStream_(OrgAssertjCoreInternalDiff *self, JavaIoInputStream *stream);

__attribute__((unused)) static JavaIoBufferedReader *OrgAssertjCoreInternalDiff_readerForWithJavaIoInputStream_withJavaNioCharsetCharset_(OrgAssertjCoreInternalDiff *self, JavaIoInputStream *stream, JavaNioCharsetCharset *charset);

__attribute__((unused)) static JavaIoBufferedReader *OrgAssertjCoreInternalDiff_readerForWithJavaIoFile_(OrgAssertjCoreInternalDiff *self, JavaIoFile *file);

__attribute__((unused)) static JavaIoBufferedReader *OrgAssertjCoreInternalDiff_readerForWithJavaIoFile_withJavaNioCharsetCharset_(OrgAssertjCoreInternalDiff *self, JavaIoFile *file, JavaNioCharsetCharset *charset);

__attribute__((unused)) static JavaIoBufferedReader *OrgAssertjCoreInternalDiff_readerForWithNSString_(OrgAssertjCoreInternalDiff *self, NSString *string);

__attribute__((unused)) static id<JavaUtilList> OrgAssertjCoreInternalDiff_diffWithJavaIoBufferedReader_withJavaIoBufferedReader_(OrgAssertjCoreInternalDiff *self, JavaIoBufferedReader *actual, JavaIoBufferedReader *expected);

__attribute__((unused)) static NSString *OrgAssertjCoreInternalDiff_outputWithInt_withNSString_withNSString_(OrgAssertjCoreInternalDiff *self, jint lineNumber, NSString *actual, NSString *expected);

@implementation OrgAssertjCoreInternalDiff

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreInternalDiff_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilList>)diffWithJavaIoInputStream:(JavaIoInputStream *)actual
                        withJavaIoInputStream:(JavaIoInputStream *)expected {
  JavaIoBufferedReader *reader1 = nil;
  JavaIoBufferedReader *reader2 = nil;
  @try {
    reader1 = OrgAssertjCoreInternalDiff_readerForWithJavaIoInputStream_(self, actual);
    reader2 = OrgAssertjCoreInternalDiff_readerForWithJavaIoInputStream_(self, expected);
    return JavaUtilCollections_unmodifiableListWithJavaUtilList_(OrgAssertjCoreInternalDiff_diffWithJavaIoBufferedReader_withJavaIoBufferedReader_(self, reader1, reader2));
  }
  @finally {
    OrgAssertjCoreUtilCloseables_closeQuietlyWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader1 } count:1 type:JavaIoCloseable_class_()]);
    OrgAssertjCoreUtilCloseables_closeQuietlyWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader2 } count:1 type:JavaIoCloseable_class_()]);
  }
}

- (id<JavaUtilList>)diffWithJavaIoFile:(JavaIoFile *)actual
                        withJavaIoFile:(JavaIoFile *)expected {
  JavaIoBufferedReader *reader1 = nil;
  JavaIoBufferedReader *reader2 = nil;
  @try {
    reader1 = OrgAssertjCoreInternalDiff_readerForWithJavaIoFile_(self, actual);
    reader2 = OrgAssertjCoreInternalDiff_readerForWithJavaIoFile_(self, expected);
    return JavaUtilCollections_unmodifiableListWithJavaUtilList_(OrgAssertjCoreInternalDiff_diffWithJavaIoBufferedReader_withJavaIoBufferedReader_(self, reader1, reader2));
  }
  @finally {
    OrgAssertjCoreUtilCloseables_closeQuietlyWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader1 } count:1 type:JavaIoCloseable_class_()]);
    OrgAssertjCoreUtilCloseables_closeQuietlyWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader2 } count:1 type:JavaIoCloseable_class_()]);
  }
}

- (id<JavaUtilList>)diffWithJavaIoFile:(JavaIoFile *)actual
                          withNSString:(NSString *)expected
             withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  JavaIoBufferedReader *reader1 = nil;
  @try {
    reader1 = OrgAssertjCoreInternalDiff_readerForWithJavaIoFile_withJavaNioCharsetCharset_(self, actual, charset);
    JavaIoBufferedReader *reader2 = OrgAssertjCoreInternalDiff_readerForWithNSString_(self, expected);
    return JavaUtilCollections_unmodifiableListWithJavaUtilList_(OrgAssertjCoreInternalDiff_diffWithJavaIoBufferedReader_withJavaIoBufferedReader_(self, reader1, reader2));
  }
  @finally {
    OrgAssertjCoreUtilCloseables_closeQuietlyWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader1 } count:1 type:JavaIoCloseable_class_()]);
  }
}

- (JavaIoBufferedReader *)readerForWithJavaIoInputStream:(JavaIoInputStream *)stream {
  return OrgAssertjCoreInternalDiff_readerForWithJavaIoInputStream_(self, stream);
}

- (JavaIoBufferedReader *)readerForWithJavaIoInputStream:(JavaIoInputStream *)stream
                               withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return OrgAssertjCoreInternalDiff_readerForWithJavaIoInputStream_withJavaNioCharsetCharset_(self, stream, charset);
}

- (JavaIoBufferedReader *)readerForWithJavaIoFile:(JavaIoFile *)file {
  return OrgAssertjCoreInternalDiff_readerForWithJavaIoFile_(self, file);
}

- (JavaIoBufferedReader *)readerForWithJavaIoFile:(JavaIoFile *)file
                        withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return OrgAssertjCoreInternalDiff_readerForWithJavaIoFile_withJavaNioCharsetCharset_(self, file, charset);
}

- (JavaIoBufferedReader *)readerForWithNSString:(NSString *)string {
  return OrgAssertjCoreInternalDiff_readerForWithNSString_(self, string);
}

- (id<JavaUtilList>)diffWithJavaIoBufferedReader:(JavaIoBufferedReader *)actual
                        withJavaIoBufferedReader:(JavaIoBufferedReader *)expected {
  return OrgAssertjCoreInternalDiff_diffWithJavaIoBufferedReader_withJavaIoBufferedReader_(self, actual, expected);
}

- (NSString *)outputWithInt:(jint)lineNumber
               withNSString:(NSString *)actual
               withNSString:(NSString *)expected {
  return OrgAssertjCoreInternalDiff_outputWithInt_withNSString_withNSString_(self, lineNumber, actual, expected);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 0, 1, 2, 3, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 0, 4, 2, 5, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 0, 6, 2, 7, -1, -1 },
    { NULL, "LJavaIoBufferedReader;", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "LJavaIoBufferedReader;", 0x2, 8, 10, -1, -1, -1, -1 },
    { NULL, "LJavaIoBufferedReader;", 0x2, 8, 11, 2, -1, -1, -1 },
    { NULL, "LJavaIoBufferedReader;", 0x2, 8, 12, 2, -1, -1, -1 },
    { NULL, "LJavaIoBufferedReader;", 0x2, 8, 13, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 0, 14, 2, 15, -1, -1 },
    { NULL, "LNSString;", 0x2, 16, 17, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(diffWithJavaIoInputStream:withJavaIoInputStream:);
  methods[2].selector = @selector(diffWithJavaIoFile:withJavaIoFile:);
  methods[3].selector = @selector(diffWithJavaIoFile:withNSString:withJavaNioCharsetCharset:);
  methods[4].selector = @selector(readerForWithJavaIoInputStream:);
  methods[5].selector = @selector(readerForWithJavaIoInputStream:withJavaNioCharsetCharset:);
  methods[6].selector = @selector(readerForWithJavaIoFile:);
  methods[7].selector = @selector(readerForWithJavaIoFile:withJavaNioCharsetCharset:);
  methods[8].selector = @selector(readerForWithNSString:);
  methods[9].selector = @selector(diffWithJavaIoBufferedReader:withJavaIoBufferedReader:);
  methods[10].selector = @selector(outputWithInt:withNSString:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EOF", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
  };
  static const void *ptrTable[] = { "diff", "LJavaIoInputStream;LJavaIoInputStream;", "LJavaIoIOException;", "(Ljava/io/InputStream;Ljava/io/InputStream;)Ljava/util/List<Ljava/lang/String;>;", "LJavaIoFile;LJavaIoFile;", "(Ljava/io/File;Ljava/io/File;)Ljava/util/List<Ljava/lang/String;>;", "LJavaIoFile;LNSString;LJavaNioCharsetCharset;", "(Ljava/io/File;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/util/List<Ljava/lang/String;>;", "readerFor", "LJavaIoInputStream;", "LJavaIoInputStream;LJavaNioCharsetCharset;", "LJavaIoFile;", "LJavaIoFile;LJavaNioCharsetCharset;", "LNSString;", "LJavaIoBufferedReader;LJavaIoBufferedReader;", "(Ljava/io/BufferedReader;Ljava/io/BufferedReader;)Ljava/util/List<Ljava/lang/String;>;", "output", "ILNSString;LNSString;", &OrgAssertjCoreInternalDiff_EOF };
  static const J2ObjcClassInfo _OrgAssertjCoreInternalDiff = { "Diff", "org.assertj.core.internal", ptrTable, methods, fields, 7, 0x1, 11, 1, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreInternalDiff;
}

@end

void OrgAssertjCoreInternalDiff_init(OrgAssertjCoreInternalDiff *self) {
  NSObject_init(self);
}

OrgAssertjCoreInternalDiff *new_OrgAssertjCoreInternalDiff_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreInternalDiff, init)
}

OrgAssertjCoreInternalDiff *create_OrgAssertjCoreInternalDiff_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreInternalDiff, init)
}

JavaIoBufferedReader *OrgAssertjCoreInternalDiff_readerForWithJavaIoInputStream_(OrgAssertjCoreInternalDiff *self, JavaIoInputStream *stream) {
  return create_JavaIoBufferedReader_initWithJavaIoReader_(create_JavaIoInputStreamReader_initWithJavaIoInputStream_(stream));
}

JavaIoBufferedReader *OrgAssertjCoreInternalDiff_readerForWithJavaIoInputStream_withJavaNioCharsetCharset_(OrgAssertjCoreInternalDiff *self, JavaIoInputStream *stream, JavaNioCharsetCharset *charset) {
  return create_JavaIoBufferedReader_initWithJavaIoReader_(create_JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharset_(stream, charset));
}

JavaIoBufferedReader *OrgAssertjCoreInternalDiff_readerForWithJavaIoFile_(OrgAssertjCoreInternalDiff *self, JavaIoFile *file) {
  return OrgAssertjCoreInternalDiff_readerForWithJavaIoInputStream_(self, create_JavaIoFileInputStream_initWithJavaIoFile_(file));
}

JavaIoBufferedReader *OrgAssertjCoreInternalDiff_readerForWithJavaIoFile_withJavaNioCharsetCharset_(OrgAssertjCoreInternalDiff *self, JavaIoFile *file, JavaNioCharsetCharset *charset) {
  return OrgAssertjCoreInternalDiff_readerForWithJavaIoInputStream_withJavaNioCharsetCharset_(self, create_JavaIoFileInputStream_initWithJavaIoFile_(file), charset);
}

JavaIoBufferedReader *OrgAssertjCoreInternalDiff_readerForWithNSString_(OrgAssertjCoreInternalDiff *self, NSString *string) {
  return create_JavaIoBufferedReader_initWithJavaIoReader_(create_JavaIoStringReader_initWithNSString_(string));
}

id<JavaUtilList> OrgAssertjCoreInternalDiff_diffWithJavaIoBufferedReader_withJavaIoBufferedReader_(OrgAssertjCoreInternalDiff *self, JavaIoBufferedReader *actual, JavaIoBufferedReader *expected) {
  id<JavaUtilList> diffs = create_JavaUtilArrayList_init();
  jint lineNumber = 1;
  while (true) {
    NSString *actualLine = [((JavaIoBufferedReader *) nil_chk(actual)) readLine];
    NSString *expectedLine = [((JavaIoBufferedReader *) nil_chk(expected)) readLine];
    if (actualLine == nil || expectedLine == nil) {
      if (expectedLine != nil) [diffs addWithId:OrgAssertjCoreInternalDiff_outputWithInt_withNSString_withNSString_(self, lineNumber, OrgAssertjCoreInternalDiff_EOF, expectedLine)];
      if (actualLine != nil) [diffs addWithId:OrgAssertjCoreInternalDiff_outputWithInt_withNSString_withNSString_(self, lineNumber, actualLine, OrgAssertjCoreInternalDiff_EOF)];
      return diffs;
    }
    else if (!OrgAssertjCoreUtilObjects_areEqualWithId_withId_(actualLine, expectedLine)) {
      [diffs addWithId:OrgAssertjCoreInternalDiff_outputWithInt_withNSString_withNSString_(self, lineNumber, actualLine, expectedLine)];
    }
    lineNumber += 1;
  }
}

NSString *OrgAssertjCoreInternalDiff_outputWithInt_withNSString_withNSString_(OrgAssertjCoreInternalDiff *self, jint lineNumber, NSString *actual, NSString *expected) {
  return NSString_java_formatWithNSString_withNSObjectArray_(@"line:<%d>, expected:<%s> but was:<%s>", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(lineNumber), expected, actual } count:3 type:NSObject_class_()]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreInternalDiff)
