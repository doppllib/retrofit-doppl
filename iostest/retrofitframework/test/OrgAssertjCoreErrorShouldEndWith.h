//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldEndWith")
#ifdef RESTRICT_OrgAssertjCoreErrorShouldEndWith
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldEndWith 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldEndWith 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorShouldEndWith

#if !defined (OrgAssertjCoreErrorShouldEndWith_) && (INCLUDE_ALL_OrgAssertjCoreErrorShouldEndWith || defined(INCLUDE_OrgAssertjCoreErrorShouldEndWith))
#define OrgAssertjCoreErrorShouldEndWith_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@protocol OrgAssertjCoreErrorErrorMessageFactory;
@protocol OrgAssertjCoreInternalComparisonStrategy;

@interface OrgAssertjCoreErrorShouldEndWith : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldEndWithWithId:(id)actual
                                                           withId:(id)expected;

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldEndWithWithId:(id)actual
                                                           withId:(id)expected
                     withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorShouldEndWith)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldEndWith_shouldEndWithWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id expected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldEndWith_shouldEndWithWithId_withId_(id actual, id expected);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorShouldEndWith)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldEndWith")
