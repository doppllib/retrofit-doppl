//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiAbstractCharSequenceAssert.h"
#include "OrgAssertjCoreApiStringAssert.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation OrgAssertjCoreApiStringAssert

- (instancetype)initWithNSString:(NSString *)actual {
  OrgAssertjCoreApiStringAssert_initWithNSString_(self, actual);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "Lorg/assertj/core/api/AbstractCharSequenceAssert<Lorg/assertj/core/api/StringAssert;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreApiStringAssert = { "StringAssert", "org.assertj.core.api", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, 1, -1 };
  return &_OrgAssertjCoreApiStringAssert;
}

@end

void OrgAssertjCoreApiStringAssert_initWithNSString_(OrgAssertjCoreApiStringAssert *self, NSString *actual) {
  OrgAssertjCoreApiAbstractCharSequenceAssert_initWithJavaLangCharSequence_withIOSClass_(self, actual, OrgAssertjCoreApiStringAssert_class_());
}

OrgAssertjCoreApiStringAssert *new_OrgAssertjCoreApiStringAssert_initWithNSString_(NSString *actual) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreApiStringAssert, initWithNSString_, actual)
}

OrgAssertjCoreApiStringAssert *create_OrgAssertjCoreApiStringAssert_initWithNSString_(NSString *actual) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreApiStringAssert, initWithNSString_, actual)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreApiStringAssert)
