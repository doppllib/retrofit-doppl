//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractIntArrayAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractIntArrayAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractIntArrayAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractIntArrayAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractIntArrayAssert

#if !defined (OrgAssertjCoreApiAbstractIntArrayAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractIntArrayAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractIntArrayAssert))
#define OrgAssertjCoreApiAbstractIntArrayAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractArrayAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractArrayAssert 1
#include "OrgAssertjCoreApiAbstractArrayAssert.h"

@class IOSClass;
@class IOSIntArray;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDataIndex;
@class OrgAssertjCoreDescriptionDescription;
@class OrgAssertjCoreInternalIntArrays;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractIntArrayAssert : OrgAssertjCoreApiAbstractArrayAssert {
 @public
  OrgAssertjCoreInternalIntArrays *arrays_;
}

#pragma mark Public

- (instancetype)initWithIntArray:(IOSIntArray *)actual
                    withIOSClass:(IOSClass *)selfType;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)asWithNSString:(NSString *)arg0
                                          withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)containsWithIntArray:(IOSIntArray *)values;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)containsWithInt:(jint)value
                                 withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)containsExactlyWithIntArray:(IOSIntArray *)values;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)containsOnlyWithIntArray:(IOSIntArray *)values;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)containsOnlyOnceWithIntArray:(IOSIntArray *)values;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)containsSequenceWithIntArray:(IOSIntArray *)sequence;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)containsSubsequenceWithIntArray:(IOSIntArray *)subsequence;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)describedAsWithNSString:(NSString *)arg0
                                                   withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)doesNotContainWithIntArray:(IOSIntArray *)values;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)doesNotContainWithInt:(jint)value
                                       withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)doesNotHaveDuplicates;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)endsWithWithIntArray:(IOSIntArray *)sequence;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)hasSameSizeAsWithJavaLangIterable:(id<JavaLangIterable>)other;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)hasSameSizeAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)hasSizeWithInt:(jint)expected;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)inBinary;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)inHexadecimal;

- (void)isEmpty;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isNotEmpty;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (void)isNullOrEmpty;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isSorted;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isSortedAccordingToWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                              withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)startsWithWithIntArray:(IOSIntArray *)sequence;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)usingDefaultComparator;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)usingDefaultElementComparator;

- (OrgAssertjCoreApiAbstractIntArrayAssert *)usingElementComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)customComparator;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractIntArrayAssert)

J2OBJC_FIELD_SETTER(OrgAssertjCoreApiAbstractIntArrayAssert, arrays_, OrgAssertjCoreInternalIntArrays *)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractIntArrayAssert_initWithIntArray_withIOSClass_(OrgAssertjCoreApiAbstractIntArrayAssert *self, IOSIntArray *actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractIntArrayAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractIntArrayAssert")
