//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldContain")
#ifdef RESTRICT_OrgAssertjCoreErrorShouldContain
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldContain 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldContain 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorShouldContain

#if !defined (OrgAssertjCoreErrorShouldContain_) && (INCLUDE_ALL_OrgAssertjCoreErrorShouldContain || defined(INCLUDE_OrgAssertjCoreErrorShouldContain))
#define OrgAssertjCoreErrorShouldContain_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@protocol OrgAssertjCoreErrorErrorMessageFactory;
@protocol OrgAssertjCoreInternalComparisonStrategy;

@interface OrgAssertjCoreErrorShouldContain : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldContainWithId:(id)actual
                                                           withId:(id)expected
                                                           withId:(id)notFound;

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldContainWithId:(id)actual
                                                           withId:(id)expected
                                                           withId:(id)notFound
                     withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorShouldContain)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldContain_shouldContainWithId_withId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id expected, id notFound, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldContain_shouldContainWithId_withId_withId_(id actual, id expected, id notFound);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorShouldContain)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldContain")
