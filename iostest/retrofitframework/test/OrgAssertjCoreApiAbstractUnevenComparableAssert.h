//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractUnevenComparableAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractUnevenComparableAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractUnevenComparableAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractUnevenComparableAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractUnevenComparableAssert

#if !defined (OrgAssertjCoreApiAbstractUnevenComparableAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractUnevenComparableAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractUnevenComparableAssert))
#define OrgAssertjCoreApiAbstractUnevenComparableAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractComparableAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractComparableAssert 1
#include "OrgAssertjCoreApiAbstractComparableAssert.h"

#define RESTRICT_OrgAssertjCoreApiUnevenComparableAssert 1
#define INCLUDE_OrgAssertjCoreApiUnevenComparableAssert 1
#include "OrgAssertjCoreApiUnevenComparableAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangComparable;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractUnevenComparableAssert : OrgAssertjCoreApiAbstractComparableAssert < OrgAssertjCoreApiUnevenComparableAssert >

#pragma mark Public

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)asWithNSString:(NSString *)arg0
                                                  withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)describedAsWithNSString:(NSString *)arg0
                                                           withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)inBinary;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)inHexadecimal;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isEqualByComparingToWithJavaLangComparable:(id<JavaLangComparable>)expected;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(id<JavaLangComparable>)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isGreaterThanWithJavaLangComparable:(id<JavaLangComparable>)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isLessThanOrEqualToWithJavaLangComparable:(id<JavaLangComparable>)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isLessThanWithJavaLangComparable:(id<JavaLangComparable>)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isNotEqualByComparingToWithJavaLangComparable:(id<JavaLangComparable>)other;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                                      withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiAbstractUnevenComparableAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaLangComparable:(id<JavaLangComparable>)actual
                              withIOSClass:(IOSClass *)selfType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractUnevenComparableAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractUnevenComparableAssert_initWithJavaLangComparable_withIOSClass_(OrgAssertjCoreApiAbstractUnevenComparableAssert *self, id<JavaLangComparable> actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractUnevenComparableAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractUnevenComparableAssert")
