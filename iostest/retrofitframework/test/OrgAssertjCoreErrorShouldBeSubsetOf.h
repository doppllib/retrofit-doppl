//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldBeSubsetOf")
#ifdef RESTRICT_OrgAssertjCoreErrorShouldBeSubsetOf
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldBeSubsetOf 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldBeSubsetOf 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorShouldBeSubsetOf

#if !defined (OrgAssertjCoreErrorShouldBeSubsetOf_) && (INCLUDE_ALL_OrgAssertjCoreErrorShouldBeSubsetOf || defined(INCLUDE_OrgAssertjCoreErrorShouldBeSubsetOf))
#define OrgAssertjCoreErrorShouldBeSubsetOf_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@protocol JavaLangIterable;
@protocol OrgAssertjCoreErrorErrorMessageFactory;
@protocol OrgAssertjCoreInternalComparisonStrategy;

@interface OrgAssertjCoreErrorShouldBeSubsetOf : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeSubsetOfWithId:(id)actual
                                                              withId:(id)values
                                                withJavaLangIterable:(id<JavaLangIterable>)unexpected;

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeSubsetOfWithId:(id)actual
                                                              withId:(id)values
                                                withJavaLangIterable:(id<JavaLangIterable>)unexpected
                        withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorShouldBeSubsetOf)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeSubsetOf_shouldBeSubsetOfWithId_withId_withJavaLangIterable_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id values, id<JavaLangIterable> unexpected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeSubsetOf_shouldBeSubsetOfWithId_withId_withJavaLangIterable_(id actual, id values, id<JavaLangIterable> unexpected);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorShouldBeSubsetOf)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldBeSubsetOf")
