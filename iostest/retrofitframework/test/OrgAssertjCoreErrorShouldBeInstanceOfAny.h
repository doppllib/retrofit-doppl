//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldBeInstanceOfAny")
#ifdef RESTRICT_OrgAssertjCoreErrorShouldBeInstanceOfAny
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldBeInstanceOfAny 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldBeInstanceOfAny 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorShouldBeInstanceOfAny

#if !defined (OrgAssertjCoreErrorShouldBeInstanceOfAny_) && (INCLUDE_ALL_OrgAssertjCoreErrorShouldBeInstanceOfAny || defined(INCLUDE_OrgAssertjCoreErrorShouldBeInstanceOfAny))
#define OrgAssertjCoreErrorShouldBeInstanceOfAny_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@class IOSObjectArray;
@protocol OrgAssertjCoreErrorErrorMessageFactory;

@interface OrgAssertjCoreErrorShouldBeInstanceOfAny : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeInstanceOfAnyWithId:(id)actual
                                                        withIOSClassArray:(IOSObjectArray *)types;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorShouldBeInstanceOfAny)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeInstanceOfAny_shouldBeInstanceOfAnyWithId_withIOSClassArray_(id actual, IOSObjectArray *types);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorShouldBeInstanceOfAny)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldBeInstanceOfAny")
