//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractCharacterAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractCharacterAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractCharacterAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractCharacterAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractCharacterAssert

#if !defined (OrgAssertjCoreApiAbstractCharacterAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractCharacterAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractCharacterAssert))
#define OrgAssertjCoreApiAbstractCharacterAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractComparableAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractComparableAssert 1
#include "OrgAssertjCoreApiAbstractComparableAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangCharacter;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@class OrgAssertjCoreInternalCharacters;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractCharacterAssert : OrgAssertjCoreApiAbstractComparableAssert {
 @public
  OrgAssertjCoreInternalCharacters *characters_;
}

#pragma mark Public

- (OrgAssertjCoreApiAbstractCharacterAssert *)asWithNSString:(NSString *)arg0
                                           withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractCharacterAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)describedAsWithNSString:(NSString *)arg0
                                                    withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractCharacterAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)inBinary;

- (OrgAssertjCoreApiAbstractCharacterAssert *)inHexadecimal;

- (OrgAssertjCoreApiAbstractCharacterAssert *)inUnicode;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isEqualToWithChar:(jchar)expected;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isGreaterThanWithChar:(jchar)other;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isGreaterThanOrEqualToWithChar:(jchar)other;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(JavaLangCharacter *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isGreaterThanWithJavaLangComparable:(JavaLangCharacter *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isLessThanWithChar:(jchar)other;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isLessThanOrEqualToWithChar:(jchar)other;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isLessThanOrEqualToWithJavaLangComparable:(JavaLangCharacter *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isLessThanWithJavaLangComparable:(JavaLangCharacter *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isLowerCase;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isNotEqualToWithChar:(jchar)other;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isUpperCase;

- (OrgAssertjCoreApiAbstractCharacterAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractCharacterAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                               withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractCharacterAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)customComparator;

- (OrgAssertjCoreApiAbstractCharacterAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaLangCharacter:(JavaLangCharacter *)actual
                             withIOSClass:(IOSClass *)selfType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractCharacterAssert)

J2OBJC_FIELD_SETTER(OrgAssertjCoreApiAbstractCharacterAssert, characters_, OrgAssertjCoreInternalCharacters *)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractCharacterAssert_initWithJavaLangCharacter_withIOSClass_(OrgAssertjCoreApiAbstractCharacterAssert *self, JavaLangCharacter *actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractCharacterAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractCharacterAssert")
