//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiByteArrayAssert")
#ifdef RESTRICT_OrgAssertjCoreApiByteArrayAssert
#define INCLUDE_ALL_OrgAssertjCoreApiByteArrayAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiByteArrayAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiByteArrayAssert

#if !defined (OrgAssertjCoreApiByteArrayAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiByteArrayAssert || defined(INCLUDE_OrgAssertjCoreApiByteArrayAssert))
#define OrgAssertjCoreApiByteArrayAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractByteArrayAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractByteArrayAssert 1
#include "OrgAssertjCoreApiAbstractByteArrayAssert.h"

@class IOSByteArray;
@class IOSClass;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDataIndex;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiByteArrayAssert : OrgAssertjCoreApiAbstractByteArrayAssert

#pragma mark Public

- (OrgAssertjCoreApiByteArrayAssert *)asWithNSString:(NSString *)arg0
                                   withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiByteArrayAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)containsExactlyWithByteArray:(IOSByteArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)containsOnlyOnceWithByteArray:(IOSByteArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)containsOnlyWithByteArray:(IOSByteArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)containsSequenceWithByteArray:(IOSByteArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)containsSubsequenceWithByteArray:(IOSByteArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)containsWithByte:(jbyte)arg0
                           withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)arg1;

- (OrgAssertjCoreApiByteArrayAssert *)containsWithByteArray:(IOSByteArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)describedAsWithNSString:(NSString *)arg0
                                            withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiByteArrayAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)doesNotContainWithByte:(jbyte)arg0
                                 withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)arg1;

- (OrgAssertjCoreApiByteArrayAssert *)doesNotContainWithByteArray:(IOSByteArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)doesNotHaveDuplicates;

- (OrgAssertjCoreApiByteArrayAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)endsWithWithByteArray:(IOSByteArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)hasSameSizeAsWithId:(id)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)hasSameSizeAsWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)hasSizeWithInt:(jint)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)inBinary;

- (OrgAssertjCoreApiByteArrayAssert *)inHexadecimal;

- (OrgAssertjCoreApiByteArrayAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isNotEmpty;

- (OrgAssertjCoreApiByteArrayAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isNotNull;

- (OrgAssertjCoreApiByteArrayAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isSorted;

- (OrgAssertjCoreApiByteArrayAssert *)isSortedAccordingToWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                       withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiByteArrayAssert *)startsWithWithByteArray:(IOSByteArray *)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiByteArrayAssert *)usingDefaultComparator;

- (OrgAssertjCoreApiByteArrayAssert *)usingDefaultElementComparator;

- (OrgAssertjCoreApiByteArrayAssert *)usingElementComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

#pragma mark Protected

- (instancetype)initWithByteArray:(IOSByteArray *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiByteArrayAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiByteArrayAssert_initWithByteArray_(OrgAssertjCoreApiByteArrayAssert *self, IOSByteArray *actual);

FOUNDATION_EXPORT OrgAssertjCoreApiByteArrayAssert *new_OrgAssertjCoreApiByteArrayAssert_initWithByteArray_(IOSByteArray *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiByteArrayAssert *create_OrgAssertjCoreApiByteArrayAssert_initWithByteArray_(IOSByteArray *actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiByteArrayAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiByteArrayAssert")
