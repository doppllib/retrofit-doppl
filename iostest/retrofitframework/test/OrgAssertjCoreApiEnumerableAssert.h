//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiEnumerableAssert")
#ifdef RESTRICT_OrgAssertjCoreApiEnumerableAssert
#define INCLUDE_ALL_OrgAssertjCoreApiEnumerableAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiEnumerableAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiEnumerableAssert

#if !defined (OrgAssertjCoreApiEnumerableAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiEnumerableAssert || defined(INCLUDE_OrgAssertjCoreApiEnumerableAssert))
#define OrgAssertjCoreApiEnumerableAssert_

@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@protocol OrgAssertjCoreApiEnumerableAssert < JavaObject >

- (void)isNullOrEmpty;

- (void)isEmpty;

- (id<OrgAssertjCoreApiEnumerableAssert>)isNotEmpty;

- (id<OrgAssertjCoreApiEnumerableAssert>)hasSizeWithInt:(jint)expected;

- (id<OrgAssertjCoreApiEnumerableAssert>)hasSameSizeAsWithJavaLangIterable:(id<JavaLangIterable>)other;

- (id<OrgAssertjCoreApiEnumerableAssert>)hasSameSizeAsWithId:(id)array;

- (id<OrgAssertjCoreApiEnumerableAssert>)usingElementComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)customComparator;

- (id<OrgAssertjCoreApiEnumerableAssert>)usingDefaultElementComparator;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiEnumerableAssert)

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiEnumerableAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiEnumerableAssert")
