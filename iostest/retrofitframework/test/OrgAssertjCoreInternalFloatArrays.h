//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreInternalFloatArrays")
#ifdef RESTRICT_OrgAssertjCoreInternalFloatArrays
#define INCLUDE_ALL_OrgAssertjCoreInternalFloatArrays 0
#else
#define INCLUDE_ALL_OrgAssertjCoreInternalFloatArrays 1
#endif
#undef RESTRICT_OrgAssertjCoreInternalFloatArrays

#if !defined (OrgAssertjCoreInternalFloatArrays_) && (INCLUDE_ALL_OrgAssertjCoreInternalFloatArrays || defined(INCLUDE_OrgAssertjCoreInternalFloatArrays))
#define OrgAssertjCoreInternalFloatArrays_

@class IOSFloatArray;
@class IOSObjectArray;
@class OrgAssertjCoreDataIndex;
@class OrgAssertjCoreInternalFailures;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;
@protocol OrgAssertjCoreApiAssertionInfo;
@protocol OrgAssertjCoreInternalComparisonStrategy;

@interface OrgAssertjCoreInternalFloatArrays : NSObject {
 @public
  OrgAssertjCoreInternalFailures *failures_;
}

#pragma mark Public

- (instancetype)initWithOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

- (void)assertContainsWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                          withFloatArray:(IOSFloatArray *)actual
                                               withFloat:(jfloat)value
                             withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index;

- (void)assertContainsWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                          withFloatArray:(IOSFloatArray *)actual
                                          withFloatArray:(IOSFloatArray *)values;

- (void)assertContainsOnlyWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                              withFloatArray:(IOSFloatArray *)actual
                                              withFloatArray:(IOSFloatArray *)values;

- (void)assertContainsOnlyOnceWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                  withFloatArray:(IOSFloatArray *)actual
                                                  withFloatArray:(IOSFloatArray *)values;

- (void)assertContainsSequenceWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                  withFloatArray:(IOSFloatArray *)actual
                                                  withFloatArray:(IOSFloatArray *)sequence;

- (void)assertContainsSubsequenceWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                     withFloatArray:(IOSFloatArray *)actual
                                                     withFloatArray:(IOSFloatArray *)subsequence;

- (void)assertDoesNotContainWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                withFloatArray:(IOSFloatArray *)actual
                                                     withFloat:(jfloat)value
                                   withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index;

- (void)assertDoesNotContainWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                withFloatArray:(IOSFloatArray *)actual
                                                withFloatArray:(IOSFloatArray *)values;

- (void)assertDoesNotHaveDuplicatesWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                       withFloatArray:(IOSFloatArray *)actual;

- (void)assertEmptyWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                       withFloatArray:(IOSFloatArray *)actual;

- (void)assertEndsWithWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                          withFloatArray:(IOSFloatArray *)actual
                                          withFloatArray:(IOSFloatArray *)sequence;

- (void)assertHasSameSizeAsWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                               withFloatArray:(IOSFloatArray *)actual
                                         withJavaLangIterable:(id<JavaLangIterable>)other;

- (void)assertHasSameSizeAsWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                               withFloatArray:(IOSFloatArray *)actual
                                            withNSObjectArray:(IOSObjectArray *)other;

- (void)assertHasSizeWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                         withFloatArray:(IOSFloatArray *)actual
                                                withInt:(jint)expectedSize;

- (void)assertIsSortedWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                          withFloatArray:(IOSFloatArray *)actual;

- (void)assertIsSortedAccordingToComparatorWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                               withFloatArray:(IOSFloatArray *)actual
                                                       withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (void)assertNotEmptyWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                          withFloatArray:(IOSFloatArray *)actual;

- (void)assertNullOrEmptyWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                             withFloatArray:(IOSFloatArray *)actual;

- (void)assertStartsWithWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                            withFloatArray:(IOSFloatArray *)actual
                                            withFloatArray:(IOSFloatArray *)sequence;

- (id<JavaUtilComparator>)getComparator;

+ (OrgAssertjCoreInternalFloatArrays *)instance;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgAssertjCoreInternalFloatArrays)

J2OBJC_FIELD_SETTER(OrgAssertjCoreInternalFloatArrays, failures_, OrgAssertjCoreInternalFailures *)

FOUNDATION_EXPORT OrgAssertjCoreInternalFloatArrays *OrgAssertjCoreInternalFloatArrays_instance();

FOUNDATION_EXPORT void OrgAssertjCoreInternalFloatArrays_init(OrgAssertjCoreInternalFloatArrays *self);

FOUNDATION_EXPORT OrgAssertjCoreInternalFloatArrays *new_OrgAssertjCoreInternalFloatArrays_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreInternalFloatArrays *create_OrgAssertjCoreInternalFloatArrays_init();

FOUNDATION_EXPORT void OrgAssertjCoreInternalFloatArrays_initWithOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreInternalFloatArrays *self, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

FOUNDATION_EXPORT OrgAssertjCoreInternalFloatArrays *new_OrgAssertjCoreInternalFloatArrays_initWithOrgAssertjCoreInternalComparisonStrategy_(id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreInternalFloatArrays *create_OrgAssertjCoreInternalFloatArrays_initWithOrgAssertjCoreInternalComparisonStrategy_(id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreInternalFloatArrays)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreInternalFloatArrays")
