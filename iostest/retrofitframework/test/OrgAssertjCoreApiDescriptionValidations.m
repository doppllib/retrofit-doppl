//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiDescriptionValidations.h"
#include "OrgAssertjCoreDescriptionDescription.h"
#include "OrgAssertjCoreDescriptionTextDescription.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"

@interface OrgAssertjCoreApiDescriptionValidations ()

+ (JavaLangRuntimeException *)bomb;

- (instancetype)init;

@end

__attribute__((unused)) static JavaLangRuntimeException *OrgAssertjCoreApiDescriptionValidations_bomb();

__attribute__((unused)) static void OrgAssertjCoreApiDescriptionValidations_init(OrgAssertjCoreApiDescriptionValidations *self);

__attribute__((unused)) static OrgAssertjCoreApiDescriptionValidations *new_OrgAssertjCoreApiDescriptionValidations_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreApiDescriptionValidations *create_OrgAssertjCoreApiDescriptionValidations_init();

@implementation OrgAssertjCoreApiDescriptionValidations

+ (OrgAssertjCoreDescriptionDescription *)checkIsNotNullWithNSString:(NSString *)d
                                                   withNSObjectArray:(IOSObjectArray *)args {
  return OrgAssertjCoreApiDescriptionValidations_checkIsNotNullWithNSString_withNSObjectArray_(d, args);
}

+ (OrgAssertjCoreDescriptionDescription *)checkIsNotNullWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)d {
  return OrgAssertjCoreApiDescriptionValidations_checkIsNotNullWithOrgAssertjCoreDescriptionDescription_(d);
}

+ (JavaLangRuntimeException *)bomb {
  return OrgAssertjCoreApiDescriptionValidations_bomb();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreApiDescriptionValidations_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreDescriptionDescription;", 0x88, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgAssertjCoreDescriptionDescription;", 0x8, 0, 2, -1, -1, -1, -1 },
    { NULL, "LJavaLangRuntimeException;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(checkIsNotNullWithNSString:withNSObjectArray:);
  methods[1].selector = @selector(checkIsNotNullWithOrgAssertjCoreDescriptionDescription:);
  methods[2].selector = @selector(bomb);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkIsNotNull", "LNSString;[LNSObject;", "LOrgAssertjCoreDescriptionDescription;" };
  static const J2ObjcClassInfo _OrgAssertjCoreApiDescriptionValidations = { "DescriptionValidations", "org.assertj.core.api", ptrTable, methods, NULL, 7, 0x10, 4, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreApiDescriptionValidations;
}

@end

OrgAssertjCoreDescriptionDescription *OrgAssertjCoreApiDescriptionValidations_checkIsNotNullWithNSString_withNSObjectArray_(NSString *d, IOSObjectArray *args) {
  OrgAssertjCoreApiDescriptionValidations_initialize();
  if (d == nil) @throw OrgAssertjCoreApiDescriptionValidations_bomb();
  return create_OrgAssertjCoreDescriptionTextDescription_initWithNSString_withNSObjectArray_(d, args);
}

OrgAssertjCoreDescriptionDescription *OrgAssertjCoreApiDescriptionValidations_checkIsNotNullWithOrgAssertjCoreDescriptionDescription_(OrgAssertjCoreDescriptionDescription *d) {
  OrgAssertjCoreApiDescriptionValidations_initialize();
  if (d == nil) @throw OrgAssertjCoreApiDescriptionValidations_bomb();
  return d;
}

JavaLangRuntimeException *OrgAssertjCoreApiDescriptionValidations_bomb() {
  OrgAssertjCoreApiDescriptionValidations_initialize();
  return create_JavaLangNullPointerException_initWithNSString_(@"The description to set should not be null");
}

void OrgAssertjCoreApiDescriptionValidations_init(OrgAssertjCoreApiDescriptionValidations *self) {
  NSObject_init(self);
}

OrgAssertjCoreApiDescriptionValidations *new_OrgAssertjCoreApiDescriptionValidations_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreApiDescriptionValidations, init)
}

OrgAssertjCoreApiDescriptionValidations *create_OrgAssertjCoreApiDescriptionValidations_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreApiDescriptionValidations, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreApiDescriptionValidations)
