//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldNotBe")
#ifdef RESTRICT_OrgAssertjCoreErrorElementsShouldNotBe
#define INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldNotBe 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldNotBe 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorElementsShouldNotBe

#if !defined (OrgAssertjCoreErrorElementsShouldNotBe_) && (INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldNotBe || defined(INCLUDE_OrgAssertjCoreErrorElementsShouldNotBe))
#define OrgAssertjCoreErrorElementsShouldNotBe_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@class OrgAssertjCoreApiCondition;
@protocol OrgAssertjCoreErrorErrorMessageFactory;

@interface OrgAssertjCoreErrorElementsShouldNotBe : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)elementsShouldNotBeWithId:(id)actual
                                                                 withId:(id)satisfies
                                         withOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorElementsShouldNotBe)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorElementsShouldNotBe_elementsShouldNotBeWithId_withId_withOrgAssertjCoreApiCondition_(id actual, id satisfies, OrgAssertjCoreApiCondition *condition);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorElementsShouldNotBe)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldNotBe")
