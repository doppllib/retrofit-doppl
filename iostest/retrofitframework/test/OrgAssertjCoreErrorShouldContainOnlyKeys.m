//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldContainOnlyKeys.h"
#include "OrgAssertjCoreInternalComparisonStrategy.h"
#include "OrgAssertjCoreInternalStandardComparisonStrategy.h"

@interface OrgAssertjCoreErrorShouldContainOnlyKeys ()

- (instancetype)initWithId:(id)actual
                    withId:(id)expected
                    withId:(id)notFound
                    withId:(id)notExpected
withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldContainOnlyKeys_initWithId_withId_withId_withId_withOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreErrorShouldContainOnlyKeys *self, id actual, id expected, id notFound, id notExpected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

__attribute__((unused)) static OrgAssertjCoreErrorShouldContainOnlyKeys *new_OrgAssertjCoreErrorShouldContainOnlyKeys_initWithId_withId_withId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id expected, id notFound, id notExpected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldContainOnlyKeys *create_OrgAssertjCoreErrorShouldContainOnlyKeys_initWithId_withId_withId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id expected, id notFound, id notExpected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

@implementation OrgAssertjCoreErrorShouldContainOnlyKeys

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldContainOnlyKeysWithId:(id)actual
                                                                   withId:(id)expected
                                                                   withId:(id)notFound
                                                                   withId:(id)notExpected {
  return OrgAssertjCoreErrorShouldContainOnlyKeys_shouldContainOnlyKeysWithId_withId_withId_withId_(actual, expected, notFound, notExpected);
}

- (instancetype)initWithId:(id)actual
                    withId:(id)expected
                    withId:(id)notFound
                    withId:(id)notExpected
withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy {
  OrgAssertjCoreErrorShouldContainOnlyKeys_initWithId_withId_withId_withId_withOrgAssertjCoreInternalComparisonStrategy_(self, actual, expected, notFound, notExpected, comparisonStrategy);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldContainOnlyKeysWithId:withId:withId:withId:);
  methods[1].selector = @selector(initWithId:withId:withId:withId:withOrgAssertjCoreInternalComparisonStrategy:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldContainOnlyKeys", "LNSObject;LNSObject;LNSObject;LNSObject;", "LNSObject;LNSObject;LNSObject;LNSObject;LOrgAssertjCoreInternalComparisonStrategy;" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldContainOnlyKeys = { "ShouldContainOnlyKeys", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldContainOnlyKeys;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldContainOnlyKeys_shouldContainOnlyKeysWithId_withId_withId_withId_(id actual, id expected, id notFound, id notExpected) {
  OrgAssertjCoreErrorShouldContainOnlyKeys_initialize();
  return create_OrgAssertjCoreErrorShouldContainOnlyKeys_initWithId_withId_withId_withId_withOrgAssertjCoreInternalComparisonStrategy_(actual, expected, notFound, notExpected, OrgAssertjCoreInternalStandardComparisonStrategy_instance());
}

void OrgAssertjCoreErrorShouldContainOnlyKeys_initWithId_withId_withId_withId_withOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreErrorShouldContainOnlyKeys *self, id actual, id expected, id notFound, id notExpected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting:\n  <%s>\nto contain only following keys:\n  <%s>\nkeys not found:\n  <%s>\nand keys not expected:\n  <%s>\n%s", [IOSObjectArray arrayWithObjects:(id[]){ actual, expected, notFound, notExpected, comparisonStrategy } count:5 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldContainOnlyKeys *new_OrgAssertjCoreErrorShouldContainOnlyKeys_initWithId_withId_withId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id expected, id notFound, id notExpected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldContainOnlyKeys, initWithId_withId_withId_withId_withOrgAssertjCoreInternalComparisonStrategy_, actual, expected, notFound, notExpected, comparisonStrategy)
}

OrgAssertjCoreErrorShouldContainOnlyKeys *create_OrgAssertjCoreErrorShouldContainOnlyKeys_initWithId_withId_withId_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id expected, id notFound, id notExpected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldContainOnlyKeys, initWithId_withId_withId_withId_withOrgAssertjCoreInternalComparisonStrategy_, actual, expected, notFound, notExpected, comparisonStrategy)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldContainOnlyKeys)
