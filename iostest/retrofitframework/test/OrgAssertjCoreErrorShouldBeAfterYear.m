//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldBeAfterYear.h"
#include "OrgAssertjCoreInternalComparisonStrategy.h"
#include "OrgAssertjCoreInternalStandardComparisonStrategy.h"
#include "java/lang/Integer.h"
#include "java/util/Date.h"

@interface OrgAssertjCoreErrorShouldBeAfterYear ()

- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)actual
                             withInt:(jint)year
withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldBeAfterYear_initWithJavaUtilDate_withInt_withOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreErrorShouldBeAfterYear *self, JavaUtilDate *actual, jint year, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeAfterYear *new_OrgAssertjCoreErrorShouldBeAfterYear_initWithJavaUtilDate_withInt_withOrgAssertjCoreInternalComparisonStrategy_(JavaUtilDate *actual, jint year, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeAfterYear *create_OrgAssertjCoreErrorShouldBeAfterYear_initWithJavaUtilDate_withInt_withOrgAssertjCoreInternalComparisonStrategy_(JavaUtilDate *actual, jint year, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

@implementation OrgAssertjCoreErrorShouldBeAfterYear

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeAfterYearWithJavaUtilDate:(JavaUtilDate *)actual
                                                                        withInt:(jint)year
                                   withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy {
  return OrgAssertjCoreErrorShouldBeAfterYear_shouldBeAfterYearWithJavaUtilDate_withInt_withOrgAssertjCoreInternalComparisonStrategy_(actual, year, comparisonStrategy);
}

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeAfterYearWithJavaUtilDate:(JavaUtilDate *)actual
                                                                        withInt:(jint)year {
  return OrgAssertjCoreErrorShouldBeAfterYear_shouldBeAfterYearWithJavaUtilDate_withInt_(actual, year);
}

- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)actual
                             withInt:(jint)year
withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy {
  OrgAssertjCoreErrorShouldBeAfterYear_initWithJavaUtilDate_withInt_withOrgAssertjCoreInternalComparisonStrategy_(self, actual, year, comparisonStrategy);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldBeAfterYearWithJavaUtilDate:withInt:withOrgAssertjCoreInternalComparisonStrategy:);
  methods[1].selector = @selector(shouldBeAfterYearWithJavaUtilDate:withInt:);
  methods[2].selector = @selector(initWithJavaUtilDate:withInt:withOrgAssertjCoreInternalComparisonStrategy:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldBeAfterYear", "LJavaUtilDate;ILOrgAssertjCoreInternalComparisonStrategy;", "LJavaUtilDate;I" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldBeAfterYear = { "ShouldBeAfterYear", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldBeAfterYear;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeAfterYear_shouldBeAfterYearWithJavaUtilDate_withInt_withOrgAssertjCoreInternalComparisonStrategy_(JavaUtilDate *actual, jint year, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  OrgAssertjCoreErrorShouldBeAfterYear_initialize();
  return create_OrgAssertjCoreErrorShouldBeAfterYear_initWithJavaUtilDate_withInt_withOrgAssertjCoreInternalComparisonStrategy_(actual, year, comparisonStrategy);
}

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeAfterYear_shouldBeAfterYearWithJavaUtilDate_withInt_(JavaUtilDate *actual, jint year) {
  OrgAssertjCoreErrorShouldBeAfterYear_initialize();
  return create_OrgAssertjCoreErrorShouldBeAfterYear_initWithJavaUtilDate_withInt_withOrgAssertjCoreInternalComparisonStrategy_(actual, year, OrgAssertjCoreInternalStandardComparisonStrategy_instance());
}

void OrgAssertjCoreErrorShouldBeAfterYear_initWithJavaUtilDate_withInt_withOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreErrorShouldBeAfterYear *self, JavaUtilDate *actual, jint year, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting year of:\n <%s>\nto be strictly after year:\n <%s>%s", [IOSObjectArray arrayWithObjects:(id[]){ actual, JavaLangInteger_valueOfWithInt_(year), comparisonStrategy } count:3 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldBeAfterYear *new_OrgAssertjCoreErrorShouldBeAfterYear_initWithJavaUtilDate_withInt_withOrgAssertjCoreInternalComparisonStrategy_(JavaUtilDate *actual, jint year, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldBeAfterYear, initWithJavaUtilDate_withInt_withOrgAssertjCoreInternalComparisonStrategy_, actual, year, comparisonStrategy)
}

OrgAssertjCoreErrorShouldBeAfterYear *create_OrgAssertjCoreErrorShouldBeAfterYear_initWithJavaUtilDate_withInt_withOrgAssertjCoreInternalComparisonStrategy_(JavaUtilDate *actual, jint year, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldBeAfterYear, initWithJavaUtilDate_withInt_withOrgAssertjCoreInternalComparisonStrategy_, actual, year, comparisonStrategy)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldBeAfterYear)
