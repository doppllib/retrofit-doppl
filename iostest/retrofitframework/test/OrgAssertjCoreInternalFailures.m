//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiAssertionInfo.h"
#include "OrgAssertjCoreDescriptionDescription.h"
#include "OrgAssertjCoreErrorAssertionErrorFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorMessageFormatter.h"
#include "OrgAssertjCoreInternalFailures.h"
#include "OrgAssertjCorePresentationRepresentation.h"
#include "OrgAssertjCoreUtilStrings.h"
#include "OrgAssertjCoreUtilThrowables.h"
#include "java/lang/AssertionError.h"

@interface OrgAssertjCoreInternalFailures () {
 @public
  jboolean removeAssertJRelatedElementsFromStackTrace_;
}

- (JavaLangAssertionError *)failureIfErrorMessageIsOverridenWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info;

@end

inline OrgAssertjCoreInternalFailures *OrgAssertjCoreInternalFailures_get_INSTANCE();
static OrgAssertjCoreInternalFailures *OrgAssertjCoreInternalFailures_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgAssertjCoreInternalFailures, INSTANCE, OrgAssertjCoreInternalFailures *)

__attribute__((unused)) static JavaLangAssertionError *OrgAssertjCoreInternalFailures_failureIfErrorMessageIsOverridenWithOrgAssertjCoreApiAssertionInfo_(OrgAssertjCoreInternalFailures *self, id<OrgAssertjCoreApiAssertionInfo> info);

J2OBJC_INITIALIZED_DEFN(OrgAssertjCoreInternalFailures)

@implementation OrgAssertjCoreInternalFailures

+ (OrgAssertjCoreInternalFailures *)instance {
  return OrgAssertjCoreInternalFailures_instance();
}

- (void)setRemoveAssertJRelatedElementsFromStackTraceWithBoolean:(jboolean)removeAssertJRelatedElementsFromStackTrace {
  self->removeAssertJRelatedElementsFromStackTrace_ = removeAssertJRelatedElementsFromStackTrace;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreInternalFailures_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangAssertionError *)failureWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                         withOrgAssertjCoreErrorAssertionErrorFactory:(id<OrgAssertjCoreErrorAssertionErrorFactory>)factory {
  JavaLangAssertionError *error = OrgAssertjCoreInternalFailures_failureIfErrorMessageIsOverridenWithOrgAssertjCoreApiAssertionInfo_(self, info);
  if (error != nil) return error;
  return [((id<OrgAssertjCoreErrorAssertionErrorFactory>) nil_chk(factory)) newAssertionErrorWithOrgAssertjCoreDescriptionDescription:[((id<OrgAssertjCoreApiAssertionInfo>) nil_chk(info)) description__] withOrgAssertjCorePresentationRepresentation:[info representation]];
}

- (JavaLangAssertionError *)failureWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                           withOrgAssertjCoreErrorErrorMessageFactory:(id<OrgAssertjCoreErrorErrorMessageFactory>)message {
  JavaLangAssertionError *error = OrgAssertjCoreInternalFailures_failureIfErrorMessageIsOverridenWithOrgAssertjCoreApiAssertionInfo_(self, info);
  if (error != nil) return error;
  JavaLangAssertionError *assertionError = create_JavaLangAssertionError_initWithId_([((id<OrgAssertjCoreErrorErrorMessageFactory>) nil_chk(message)) createWithOrgAssertjCoreDescriptionDescription:[((id<OrgAssertjCoreApiAssertionInfo>) nil_chk(info)) description__] withOrgAssertjCorePresentationRepresentation:[info representation]]);
  [self removeAssertJRelatedElementsFromStackTraceIfNeededWithJavaLangAssertionError:assertionError];
  return assertionError;
}

- (JavaLangAssertionError *)failureIfErrorMessageIsOverridenWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info {
  return OrgAssertjCoreInternalFailures_failureIfErrorMessageIsOverridenWithOrgAssertjCoreApiAssertionInfo_(self, info);
}

- (JavaLangAssertionError *)failureWithNSString:(NSString *)message {
  JavaLangAssertionError *assertionError = create_JavaLangAssertionError_initWithId_(message);
  [self removeAssertJRelatedElementsFromStackTraceIfNeededWithJavaLangAssertionError:assertionError];
  return assertionError;
}

- (void)removeAssertJRelatedElementsFromStackTraceIfNeededWithJavaLangAssertionError:(JavaLangAssertionError *)assertionError {
  if (removeAssertJRelatedElementsFromStackTrace_) {
    OrgAssertjCoreUtilThrowables_removeAssertJRelatedElementsFromStackTraceWithNSException_(assertionError);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreInternalFailures;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangAssertionError;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaLangAssertionError;", 0x1, 2, 4, -1, -1, -1, -1 },
    { NULL, "LJavaLangAssertionError;", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "LJavaLangAssertionError;", 0x1, 2, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(instance);
  methods[1].selector = @selector(setRemoveAssertJRelatedElementsFromStackTraceWithBoolean:);
  methods[2].selector = @selector(init);
  methods[3].selector = @selector(failureWithOrgAssertjCoreApiAssertionInfo:withOrgAssertjCoreErrorAssertionErrorFactory:);
  methods[4].selector = @selector(failureWithOrgAssertjCoreApiAssertionInfo:withOrgAssertjCoreErrorErrorMessageFactory:);
  methods[5].selector = @selector(failureIfErrorMessageIsOverridenWithOrgAssertjCoreApiAssertionInfo:);
  methods[6].selector = @selector(failureWithNSString:);
  methods[7].selector = @selector(removeAssertJRelatedElementsFromStackTraceIfNeededWithJavaLangAssertionError:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgAssertjCoreInternalFailures;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "removeAssertJRelatedElementsFromStackTrace_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setRemoveAssertJRelatedElementsFromStackTrace", "Z", "failure", "LOrgAssertjCoreApiAssertionInfo;LOrgAssertjCoreErrorAssertionErrorFactory;", "LOrgAssertjCoreApiAssertionInfo;LOrgAssertjCoreErrorErrorMessageFactory;", "failureIfErrorMessageIsOverriden", "LOrgAssertjCoreApiAssertionInfo;", "LNSString;", "removeAssertJRelatedElementsFromStackTraceIfNeeded", "LJavaLangAssertionError;", &OrgAssertjCoreInternalFailures_INSTANCE };
  static const J2ObjcClassInfo _OrgAssertjCoreInternalFailures = { "Failures", "org.assertj.core.internal", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreInternalFailures;
}

+ (void)initialize {
  if (self == [OrgAssertjCoreInternalFailures class]) {
    JreStrongAssignAndConsume(&OrgAssertjCoreInternalFailures_INSTANCE, new_OrgAssertjCoreInternalFailures_init());
    J2OBJC_SET_INITIALIZED(OrgAssertjCoreInternalFailures)
  }
}

@end

OrgAssertjCoreInternalFailures *OrgAssertjCoreInternalFailures_instance() {
  OrgAssertjCoreInternalFailures_initialize();
  return OrgAssertjCoreInternalFailures_INSTANCE;
}

void OrgAssertjCoreInternalFailures_init(OrgAssertjCoreInternalFailures *self) {
  NSObject_init(self);
  self->removeAssertJRelatedElementsFromStackTrace_ = true;
}

OrgAssertjCoreInternalFailures *new_OrgAssertjCoreInternalFailures_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreInternalFailures, init)
}

OrgAssertjCoreInternalFailures *create_OrgAssertjCoreInternalFailures_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreInternalFailures, init)
}

JavaLangAssertionError *OrgAssertjCoreInternalFailures_failureIfErrorMessageIsOverridenWithOrgAssertjCoreApiAssertionInfo_(OrgAssertjCoreInternalFailures *self, id<OrgAssertjCoreApiAssertionInfo> info) {
  NSString *overridingErrorMessage = [((id<OrgAssertjCoreApiAssertionInfo>) nil_chk(info)) overridingErrorMessage];
  return OrgAssertjCoreUtilStrings_isNullOrEmptyWithNSString_(overridingErrorMessage) ? nil : [self failureWithNSString:[((OrgAssertjCoreErrorMessageFormatter *) nil_chk(OrgAssertjCoreErrorMessageFormatter_instance())) formatWithOrgAssertjCoreDescriptionDescription:[info description__] withOrgAssertjCorePresentationRepresentation:[info representation] withNSString:overridingErrorMessage withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreInternalFailures)
