//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractByteAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractByteAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractByteAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractByteAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractByteAssert

#if !defined (OrgAssertjCoreApiAbstractByteAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractByteAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractByteAssert))
#define OrgAssertjCoreApiAbstractByteAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractComparableAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractComparableAssert 1
#include "OrgAssertjCoreApiAbstractComparableAssert.h"

#define RESTRICT_OrgAssertjCoreApiNumberAssert 1
#define INCLUDE_OrgAssertjCoreApiNumberAssert 1
#include "OrgAssertjCoreApiNumberAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangByte;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@class OrgAssertjCoreInternalBytes;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractByteAssert : OrgAssertjCoreApiAbstractComparableAssert < OrgAssertjCoreApiNumberAssert > {
 @public
  OrgAssertjCoreInternalBytes *bytes_;
}

#pragma mark Public

- (OrgAssertjCoreApiAbstractByteAssert *)asWithNSString:(NSString *)arg0
                                      withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractByteAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)describedAsWithNSString:(NSString *)arg0
                                               withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractByteAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)inBinary;

- (OrgAssertjCoreApiAbstractByteAssert *)inHexadecimal;

- (OrgAssertjCoreApiAbstractByteAssert *)isBetweenWithNSNumber:(JavaLangByte *)start
                                                  withNSNumber:(JavaLangByte *)end;

- (OrgAssertjCoreApiAbstractByteAssert *)isEqualToWithByte:(jbyte)expected;

- (OrgAssertjCoreApiAbstractByteAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isGreaterThanWithByte:(jbyte)other;

- (OrgAssertjCoreApiAbstractByteAssert *)isGreaterThanOrEqualToWithByte:(jbyte)other;

- (OrgAssertjCoreApiAbstractByteAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(JavaLangByte *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isGreaterThanWithJavaLangComparable:(JavaLangByte *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isLessThanWithByte:(jbyte)other;

- (OrgAssertjCoreApiAbstractByteAssert *)isLessThanOrEqualToWithByte:(jbyte)other;

- (OrgAssertjCoreApiAbstractByteAssert *)isLessThanOrEqualToWithJavaLangComparable:(JavaLangByte *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isLessThanWithJavaLangComparable:(JavaLangByte *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isNegative;

- (OrgAssertjCoreApiAbstractByteAssert *)isNotEqualToWithByte:(jbyte)other;

- (OrgAssertjCoreApiAbstractByteAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isNotNegative;

- (OrgAssertjCoreApiAbstractByteAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractByteAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isNotPositive;

- (OrgAssertjCoreApiAbstractByteAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isNotZero;

- (OrgAssertjCoreApiAbstractByteAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isPositive;

- (OrgAssertjCoreApiAbstractByteAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isStrictlyBetweenWithNSNumber:(JavaLangByte *)start
                                                          withNSNumber:(JavaLangByte *)end;

- (OrgAssertjCoreApiAbstractByteAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractByteAssert *)isZero;

- (OrgAssertjCoreApiAbstractByteAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                          withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractByteAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)customComparator;

- (OrgAssertjCoreApiAbstractByteAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaLangByte:(JavaLangByte *)actual
                        withIOSClass:(IOSClass *)selfType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractByteAssert)

J2OBJC_FIELD_SETTER(OrgAssertjCoreApiAbstractByteAssert, bytes_, OrgAssertjCoreInternalBytes *)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractByteAssert_initWithJavaLangByte_withIOSClass_(OrgAssertjCoreApiAbstractByteAssert *self, JavaLangByte *actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractByteAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractByteAssert")
