//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiAbstractLongAssert.h"
#include "OrgAssertjCoreApiLongAssert.h"
#include "java/lang/Long.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation OrgAssertjCoreApiLongAssert

- (instancetype)initWithJavaLangLong:(JavaLangLong *)actual {
  OrgAssertjCoreApiLongAssert_initWithJavaLangLong_(self, actual);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangLong:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaLangLong;", "Lorg/assertj/core/api/AbstractLongAssert<Lorg/assertj/core/api/LongAssert;>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreApiLongAssert = { "LongAssert", "org.assertj.core.api", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, 1, -1 };
  return &_OrgAssertjCoreApiLongAssert;
}

@end

void OrgAssertjCoreApiLongAssert_initWithJavaLangLong_(OrgAssertjCoreApiLongAssert *self, JavaLangLong *actual) {
  OrgAssertjCoreApiAbstractLongAssert_initWithJavaLangLong_withIOSClass_(self, actual, OrgAssertjCoreApiLongAssert_class_());
}

OrgAssertjCoreApiLongAssert *new_OrgAssertjCoreApiLongAssert_initWithJavaLangLong_(JavaLangLong *actual) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreApiLongAssert, initWithJavaLangLong_, actual)
}

OrgAssertjCoreApiLongAssert *create_OrgAssertjCoreApiLongAssert_initWithJavaLangLong_(JavaLangLong *actual) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreApiLongAssert, initWithJavaLangLong_, actual)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreApiLongAssert)
