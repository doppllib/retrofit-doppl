//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiCondition.h"
#include "OrgAssertjCoreDataIndex.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldBeAtIndex.h"
#include "java/lang/Integer.h"
#include "java/util/List.h"

@interface OrgAssertjCoreErrorShouldBeAtIndex ()

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)actual
      withOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition
         withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index
                              withId:(id)found;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldBeAtIndex_initWithJavaUtilList_withOrgAssertjCoreApiCondition_withOrgAssertjCoreDataIndex_withId_(OrgAssertjCoreErrorShouldBeAtIndex *self, id<JavaUtilList> actual, OrgAssertjCoreApiCondition *condition, OrgAssertjCoreDataIndex *index, id found);

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeAtIndex *new_OrgAssertjCoreErrorShouldBeAtIndex_initWithJavaUtilList_withOrgAssertjCoreApiCondition_withOrgAssertjCoreDataIndex_withId_(id<JavaUtilList> actual, OrgAssertjCoreApiCondition *condition, OrgAssertjCoreDataIndex *index, id found) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeAtIndex *create_OrgAssertjCoreErrorShouldBeAtIndex_initWithJavaUtilList_withOrgAssertjCoreApiCondition_withOrgAssertjCoreDataIndex_withId_(id<JavaUtilList> actual, OrgAssertjCoreApiCondition *condition, OrgAssertjCoreDataIndex *index, id found);

@implementation OrgAssertjCoreErrorShouldBeAtIndex

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeAtIndexWithJavaUtilList:(id<JavaUtilList>)actual
                                               withOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition
                                                  withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index
                                                                       withId:(id)found {
  return OrgAssertjCoreErrorShouldBeAtIndex_shouldBeAtIndexWithJavaUtilList_withOrgAssertjCoreApiCondition_withOrgAssertjCoreDataIndex_withId_(actual, condition, index, found);
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)actual
      withOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition
         withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index
                              withId:(id)found {
  OrgAssertjCoreErrorShouldBeAtIndex_initWithJavaUtilList_withOrgAssertjCoreApiCondition_withOrgAssertjCoreDataIndex_withId_(self, actual, condition, index, found);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldBeAtIndexWithJavaUtilList:withOrgAssertjCoreApiCondition:withOrgAssertjCoreDataIndex:withId:);
  methods[1].selector = @selector(initWithJavaUtilList:withOrgAssertjCoreApiCondition:withOrgAssertjCoreDataIndex:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldBeAtIndex", "LJavaUtilList;LOrgAssertjCoreApiCondition;LOrgAssertjCoreDataIndex;LNSObject;", "<T:Ljava/lang/Object;>(Ljava/util/List<TT;>;Lorg/assertj/core/api/Condition<-TT;>;Lorg/assertj/core/data/Index;TT;)Lorg/assertj/core/error/ErrorMessageFactory;", "<T:Ljava/lang/Object;>(Ljava/util/List<TT;>;Lorg/assertj/core/api/Condition<-TT;>;Lorg/assertj/core/data/Index;TT;)V" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldBeAtIndex = { "ShouldBeAtIndex", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldBeAtIndex;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeAtIndex_shouldBeAtIndexWithJavaUtilList_withOrgAssertjCoreApiCondition_withOrgAssertjCoreDataIndex_withId_(id<JavaUtilList> actual, OrgAssertjCoreApiCondition *condition, OrgAssertjCoreDataIndex *index, id found) {
  OrgAssertjCoreErrorShouldBeAtIndex_initialize();
  return create_OrgAssertjCoreErrorShouldBeAtIndex_initWithJavaUtilList_withOrgAssertjCoreApiCondition_withOrgAssertjCoreDataIndex_withId_(actual, condition, index, found);
}

void OrgAssertjCoreErrorShouldBeAtIndex_initWithJavaUtilList_withOrgAssertjCoreApiCondition_withOrgAssertjCoreDataIndex_withId_(OrgAssertjCoreErrorShouldBeAtIndex *self, id<JavaUtilList> actual, OrgAssertjCoreApiCondition *condition, OrgAssertjCoreDataIndex *index, id found) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting:\n <%s>\nat index <%s> to be:\n <%s>\nin:\n <%s>\n", [IOSObjectArray arrayWithObjects:(id[]){ found, JavaLangInteger_valueOfWithInt_(((OrgAssertjCoreDataIndex *) nil_chk(index))->value_), condition, actual } count:4 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldBeAtIndex *new_OrgAssertjCoreErrorShouldBeAtIndex_initWithJavaUtilList_withOrgAssertjCoreApiCondition_withOrgAssertjCoreDataIndex_withId_(id<JavaUtilList> actual, OrgAssertjCoreApiCondition *condition, OrgAssertjCoreDataIndex *index, id found) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldBeAtIndex, initWithJavaUtilList_withOrgAssertjCoreApiCondition_withOrgAssertjCoreDataIndex_withId_, actual, condition, index, found)
}

OrgAssertjCoreErrorShouldBeAtIndex *create_OrgAssertjCoreErrorShouldBeAtIndex_initWithJavaUtilList_withOrgAssertjCoreApiCondition_withOrgAssertjCoreDataIndex_withId_(id<JavaUtilList> actual, OrgAssertjCoreApiCondition *condition, OrgAssertjCoreDataIndex *index, id found) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldBeAtIndex, initWithJavaUtilList_withOrgAssertjCoreApiCondition_withOrgAssertjCoreDataIndex_withId_, actual, condition, index, found)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldBeAtIndex)
