//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractShortArrayAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractShortArrayAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractShortArrayAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractShortArrayAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractShortArrayAssert

#if !defined (OrgAssertjCoreApiAbstractShortArrayAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractShortArrayAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractShortArrayAssert))
#define OrgAssertjCoreApiAbstractShortArrayAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractArrayAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractArrayAssert 1
#include "OrgAssertjCoreApiAbstractArrayAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class IOSShortArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDataIndex;
@class OrgAssertjCoreDescriptionDescription;
@class OrgAssertjCoreInternalShortArrays;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractShortArrayAssert : OrgAssertjCoreApiAbstractArrayAssert {
 @public
  OrgAssertjCoreInternalShortArrays *arrays_;
}

#pragma mark Public

- (instancetype)initWithShortArray:(IOSShortArray *)actual
                      withIOSClass:(IOSClass *)selfType;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)asWithNSString:(NSString *)arg0
                                            withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)containsWithShortArray:(IOSShortArray *)values;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)containsWithShort:(jshort)value
                                     withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)containsExactlyWithShortArray:(IOSShortArray *)values;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)containsOnlyWithShortArray:(IOSShortArray *)values;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)containsOnlyOnceWithShortArray:(IOSShortArray *)values;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)containsSequenceWithShortArray:(IOSShortArray *)sequence;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)containsSubsequenceWithShortArray:(IOSShortArray *)subsequence;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)describedAsWithNSString:(NSString *)arg0
                                                     withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)doesNotContainWithShortArray:(IOSShortArray *)values;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)doesNotContainWithShort:(jshort)value
                                           withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)doesNotHaveDuplicates;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)endsWithWithShortArray:(IOSShortArray *)sequence;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)hasSameSizeAsWithJavaLangIterable:(id<JavaLangIterable>)other;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)hasSameSizeAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)hasSizeWithInt:(jint)expected;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)inBinary;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)inHexadecimal;

- (void)isEmpty;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isNotEmpty;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (void)isNullOrEmpty;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isSorted;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isSortedAccordingToWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                                withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)startsWithWithShortArray:(IOSShortArray *)sequence;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)usingDefaultComparator;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)usingDefaultElementComparator;

- (OrgAssertjCoreApiAbstractShortArrayAssert *)usingElementComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)customComparator;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractShortArrayAssert)

J2OBJC_FIELD_SETTER(OrgAssertjCoreApiAbstractShortArrayAssert, arrays_, OrgAssertjCoreInternalShortArrays *)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractShortArrayAssert_initWithShortArray_withIOSClass_(OrgAssertjCoreApiAbstractShortArrayAssert *self, IOSShortArray *actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractShortArrayAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractShortArrayAssert")
