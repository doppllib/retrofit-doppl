//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreUtilObjects")
#ifdef RESTRICT_OrgAssertjCoreUtilObjects
#define INCLUDE_ALL_OrgAssertjCoreUtilObjects 0
#else
#define INCLUDE_ALL_OrgAssertjCoreUtilObjects 1
#endif
#undef RESTRICT_OrgAssertjCoreUtilObjects

#if !defined (OrgAssertjCoreUtilObjects_) && (INCLUDE_ALL_OrgAssertjCoreUtilObjects || defined(INCLUDE_OrgAssertjCoreUtilObjects))
#define OrgAssertjCoreUtilObjects_

@class IOSClass;
@class IOSObjectArray;

@interface OrgAssertjCoreUtilObjects : NSObject

#pragma mark Public

+ (jboolean)areEqualWithId:(id)o1
                    withId:(id)o2;

+ (jboolean)areEqualArraysWithId:(id)o1
                          withId:(id)o2;

+ (id)castIfBelongsToTypeWithId:(id)o
                   withIOSClass:(IOSClass *)type;

+ (jint)hashCodeForWithId:(id)o;

+ (IOSObjectArray *)namesOfWithIOSClassArray:(IOSObjectArray *)types;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreUtilObjects)

inline jint OrgAssertjCoreUtilObjects_get_HASH_CODE_PRIME();
#define OrgAssertjCoreUtilObjects_HASH_CODE_PRIME 31
J2OBJC_STATIC_FIELD_CONSTANT(OrgAssertjCoreUtilObjects, HASH_CODE_PRIME, jint)

FOUNDATION_EXPORT jboolean OrgAssertjCoreUtilObjects_areEqualWithId_withId_(id o1, id o2);

FOUNDATION_EXPORT jboolean OrgAssertjCoreUtilObjects_areEqualArraysWithId_withId_(id o1, id o2);

FOUNDATION_EXPORT IOSObjectArray *OrgAssertjCoreUtilObjects_namesOfWithIOSClassArray_(IOSObjectArray *types);

FOUNDATION_EXPORT jint OrgAssertjCoreUtilObjects_hashCodeForWithId_(id o);

FOUNDATION_EXPORT id OrgAssertjCoreUtilObjects_castIfBelongsToTypeWithId_withIOSClass_(id o, IOSClass *type);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreUtilObjects)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreUtilObjects")
