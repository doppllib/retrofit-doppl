//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldContainKeys.h"
#include "java/util/Iterator.h"
#include "java/util/Set.h"

@interface OrgAssertjCoreErrorShouldContainKeys ()

- (instancetype)initWithId:(id)actual
           withJavaUtilSet:(id<JavaUtilSet>)key;

- (instancetype)initWithId:(id)actual
                    withId:(id)key;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldContainKeys_initWithId_withJavaUtilSet_(OrgAssertjCoreErrorShouldContainKeys *self, id actual, id<JavaUtilSet> key);

__attribute__((unused)) static OrgAssertjCoreErrorShouldContainKeys *new_OrgAssertjCoreErrorShouldContainKeys_initWithId_withJavaUtilSet_(id actual, id<JavaUtilSet> key) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldContainKeys *create_OrgAssertjCoreErrorShouldContainKeys_initWithId_withJavaUtilSet_(id actual, id<JavaUtilSet> key);

__attribute__((unused)) static void OrgAssertjCoreErrorShouldContainKeys_initWithId_withId_(OrgAssertjCoreErrorShouldContainKeys *self, id actual, id key);

__attribute__((unused)) static OrgAssertjCoreErrorShouldContainKeys *new_OrgAssertjCoreErrorShouldContainKeys_initWithId_withId_(id actual, id key) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldContainKeys *create_OrgAssertjCoreErrorShouldContainKeys_initWithId_withId_(id actual, id key);

@implementation OrgAssertjCoreErrorShouldContainKeys

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldContainKeysWithId:(id)actual
                                                      withJavaUtilSet:(id<JavaUtilSet>)keys {
  return OrgAssertjCoreErrorShouldContainKeys_shouldContainKeysWithId_withJavaUtilSet_(actual, keys);
}

- (instancetype)initWithId:(id)actual
           withJavaUtilSet:(id<JavaUtilSet>)key {
  OrgAssertjCoreErrorShouldContainKeys_initWithId_withJavaUtilSet_(self, actual, key);
  return self;
}

- (instancetype)initWithId:(id)actual
                    withId:(id)key {
  OrgAssertjCoreErrorShouldContainKeys_initWithId_withId_(self, actual, key);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, 3, -1, -1 },
    { NULL, NULL, 0x2, -1, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldContainKeysWithId:withJavaUtilSet:);
  methods[1].selector = @selector(initWithId:withJavaUtilSet:);
  methods[2].selector = @selector(initWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldContainKeys", "LNSObject;LJavaUtilSet;", "<K:Ljava/lang/Object;>(Ljava/lang/Object;Ljava/util/Set<TK;>;)Lorg/assertj/core/error/ErrorMessageFactory;", "<K:Ljava/lang/Object;>(Ljava/lang/Object;Ljava/util/Set<TK;>;)V", "LNSObject;LNSObject;", "<K:Ljava/lang/Object;>(Ljava/lang/Object;TK;)V" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldContainKeys = { "ShouldContainKeys", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldContainKeys;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldContainKeys_shouldContainKeysWithId_withJavaUtilSet_(id actual, id<JavaUtilSet> keys) {
  OrgAssertjCoreErrorShouldContainKeys_initialize();
  if ([((id<JavaUtilSet>) nil_chk(keys)) size] == 1) return create_OrgAssertjCoreErrorShouldContainKeys_initWithId_withId_(actual, [((id<JavaUtilIterator>) nil_chk([keys iterator])) next]);
  return create_OrgAssertjCoreErrorShouldContainKeys_initWithId_withJavaUtilSet_(actual, keys);
}

void OrgAssertjCoreErrorShouldContainKeys_initWithId_withJavaUtilSet_(OrgAssertjCoreErrorShouldContainKeys *self, id actual, id<JavaUtilSet> key) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting:\n <%s>\nto contain keys:\n <%s>", [IOSObjectArray arrayWithObjects:(id[]){ actual, key } count:2 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldContainKeys *new_OrgAssertjCoreErrorShouldContainKeys_initWithId_withJavaUtilSet_(id actual, id<JavaUtilSet> key) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldContainKeys, initWithId_withJavaUtilSet_, actual, key)
}

OrgAssertjCoreErrorShouldContainKeys *create_OrgAssertjCoreErrorShouldContainKeys_initWithId_withJavaUtilSet_(id actual, id<JavaUtilSet> key) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldContainKeys, initWithId_withJavaUtilSet_, actual, key)
}

void OrgAssertjCoreErrorShouldContainKeys_initWithId_withId_(OrgAssertjCoreErrorShouldContainKeys *self, id actual, id key) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting:\n <%s>\nto contain key:\n <%s>", [IOSObjectArray arrayWithObjects:(id[]){ actual, key } count:2 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldContainKeys *new_OrgAssertjCoreErrorShouldContainKeys_initWithId_withId_(id actual, id key) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldContainKeys, initWithId_withId_, actual, key)
}

OrgAssertjCoreErrorShouldContainKeys *create_OrgAssertjCoreErrorShouldContainKeys_initWithId_withId_(id actual, id key) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldContainKeys, initWithId_withId_, actual, key)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldContainKeys)
