//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiAbstractThrowableAssert.h"
#include "OrgAssertjCoreApiThrowableAssert.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation OrgAssertjCoreApiThrowableAssert

- (instancetype)initWithNSException:(NSException *)actual {
  OrgAssertjCoreApiThrowableAssert_initWithNSException_(self, actual);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSException:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSException;", "Lorg/assertj/core/api/AbstractThrowableAssert<Lorg/assertj/core/api/ThrowableAssert;Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreApiThrowableAssert = { "ThrowableAssert", "org.assertj.core.api", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, 1, -1 };
  return &_OrgAssertjCoreApiThrowableAssert;
}

@end

void OrgAssertjCoreApiThrowableAssert_initWithNSException_(OrgAssertjCoreApiThrowableAssert *self, NSException *actual) {
  OrgAssertjCoreApiAbstractThrowableAssert_initWithNSException_withIOSClass_(self, actual, OrgAssertjCoreApiThrowableAssert_class_());
}

OrgAssertjCoreApiThrowableAssert *new_OrgAssertjCoreApiThrowableAssert_initWithNSException_(NSException *actual) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreApiThrowableAssert, initWithNSException_, actual)
}

OrgAssertjCoreApiThrowableAssert *create_OrgAssertjCoreApiThrowableAssert_initWithNSException_(NSException *actual) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreApiThrowableAssert, initWithNSException_, actual)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreApiThrowableAssert)
