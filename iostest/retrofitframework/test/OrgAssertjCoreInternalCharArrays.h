//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreInternalCharArrays")
#ifdef RESTRICT_OrgAssertjCoreInternalCharArrays
#define INCLUDE_ALL_OrgAssertjCoreInternalCharArrays 0
#else
#define INCLUDE_ALL_OrgAssertjCoreInternalCharArrays 1
#endif
#undef RESTRICT_OrgAssertjCoreInternalCharArrays

#if !defined (OrgAssertjCoreInternalCharArrays_) && (INCLUDE_ALL_OrgAssertjCoreInternalCharArrays || defined(INCLUDE_OrgAssertjCoreInternalCharArrays))
#define OrgAssertjCoreInternalCharArrays_

@class IOSCharArray;
@class IOSObjectArray;
@class OrgAssertjCoreDataIndex;
@class OrgAssertjCoreInternalFailures;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;
@protocol OrgAssertjCoreApiAssertionInfo;
@protocol OrgAssertjCoreInternalComparisonStrategy;

@interface OrgAssertjCoreInternalCharArrays : NSObject {
 @public
  OrgAssertjCoreInternalFailures *failures_;
}

#pragma mark Public

- (instancetype)initWithOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

- (void)assertContainsWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                           withCharArray:(IOSCharArray *)actual
                                                withChar:(jchar)value
                             withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index;

- (void)assertContainsWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                           withCharArray:(IOSCharArray *)actual
                                           withCharArray:(IOSCharArray *)values;

- (void)assertContainsOnlyWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                               withCharArray:(IOSCharArray *)actual
                                               withCharArray:(IOSCharArray *)values;

- (void)assertContainsOnlyOnceWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                   withCharArray:(IOSCharArray *)actual
                                                   withCharArray:(IOSCharArray *)values;

- (void)assertContainsSequenceWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                   withCharArray:(IOSCharArray *)actual
                                                   withCharArray:(IOSCharArray *)sequence;

- (void)assertContainsSubsequenceWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                      withCharArray:(IOSCharArray *)actual
                                                      withCharArray:(IOSCharArray *)subsequence;

- (void)assertDoesNotContainWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                 withCharArray:(IOSCharArray *)actual
                                                      withChar:(jchar)value
                                   withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index;

- (void)assertDoesNotContainWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                 withCharArray:(IOSCharArray *)actual
                                                 withCharArray:(IOSCharArray *)values;

- (void)assertDoesNotHaveDuplicatesWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                        withCharArray:(IOSCharArray *)actual;

- (void)assertEmptyWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                        withCharArray:(IOSCharArray *)actual;

- (void)assertEndsWithWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                           withCharArray:(IOSCharArray *)actual
                                           withCharArray:(IOSCharArray *)sequence;

- (void)assertHasSameSizeAsWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                withCharArray:(IOSCharArray *)actual
                                         withJavaLangIterable:(id<JavaLangIterable>)other;

- (void)assertHasSameSizeAsWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                withCharArray:(IOSCharArray *)actual
                                            withNSObjectArray:(IOSObjectArray *)other;

- (void)assertHasSizeWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                          withCharArray:(IOSCharArray *)actual
                                                withInt:(jint)expectedSize;

- (void)assertIsSortedWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                           withCharArray:(IOSCharArray *)actual;

- (void)assertIsSortedAccordingToComparatorWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                                withCharArray:(IOSCharArray *)actual
                                                       withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (void)assertNotEmptyWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                           withCharArray:(IOSCharArray *)actual;

- (void)assertNullOrEmptyWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                              withCharArray:(IOSCharArray *)actual;

- (void)assertStartsWithWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                             withCharArray:(IOSCharArray *)actual
                                             withCharArray:(IOSCharArray *)sequence;

- (id<JavaUtilComparator>)getComparator;

+ (OrgAssertjCoreInternalCharArrays *)instance;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgAssertjCoreInternalCharArrays)

J2OBJC_FIELD_SETTER(OrgAssertjCoreInternalCharArrays, failures_, OrgAssertjCoreInternalFailures *)

FOUNDATION_EXPORT OrgAssertjCoreInternalCharArrays *OrgAssertjCoreInternalCharArrays_instance();

FOUNDATION_EXPORT void OrgAssertjCoreInternalCharArrays_init(OrgAssertjCoreInternalCharArrays *self);

FOUNDATION_EXPORT OrgAssertjCoreInternalCharArrays *new_OrgAssertjCoreInternalCharArrays_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreInternalCharArrays *create_OrgAssertjCoreInternalCharArrays_init();

FOUNDATION_EXPORT void OrgAssertjCoreInternalCharArrays_initWithOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreInternalCharArrays *self, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

FOUNDATION_EXPORT OrgAssertjCoreInternalCharArrays *new_OrgAssertjCoreInternalCharArrays_initWithOrgAssertjCoreInternalComparisonStrategy_(id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreInternalCharArrays *create_OrgAssertjCoreInternalCharArrays_initWithOrgAssertjCoreInternalComparisonStrategy_(id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreInternalCharArrays)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreInternalCharArrays")
