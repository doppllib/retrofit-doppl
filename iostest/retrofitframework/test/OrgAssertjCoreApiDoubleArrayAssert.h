//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiDoubleArrayAssert")
#ifdef RESTRICT_OrgAssertjCoreApiDoubleArrayAssert
#define INCLUDE_ALL_OrgAssertjCoreApiDoubleArrayAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiDoubleArrayAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiDoubleArrayAssert

#if !defined (OrgAssertjCoreApiDoubleArrayAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiDoubleArrayAssert || defined(INCLUDE_OrgAssertjCoreApiDoubleArrayAssert))
#define OrgAssertjCoreApiDoubleArrayAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractDoubleArrayAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractDoubleArrayAssert 1
#include "OrgAssertjCoreApiAbstractDoubleArrayAssert.h"

@class IOSClass;
@class IOSDoubleArray;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDataIndex;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiDoubleArrayAssert : OrgAssertjCoreApiAbstractDoubleArrayAssert

#pragma mark Public

- (OrgAssertjCoreApiDoubleArrayAssert *)asWithNSString:(NSString *)arg0
                                     withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiDoubleArrayAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)containsExactlyWithDoubleArray:(IOSDoubleArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)containsOnlyOnceWithDoubleArray:(IOSDoubleArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)containsOnlyWithDoubleArray:(IOSDoubleArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)containsSequenceWithDoubleArray:(IOSDoubleArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)containsSubsequenceWithDoubleArray:(IOSDoubleArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)containsWithDouble:(jdouble)arg0
                               withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)arg1;

- (OrgAssertjCoreApiDoubleArrayAssert *)containsWithDoubleArray:(IOSDoubleArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)describedAsWithNSString:(NSString *)arg0
                                              withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiDoubleArrayAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)doesNotContainWithDouble:(jdouble)arg0
                                     withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)arg1;

- (OrgAssertjCoreApiDoubleArrayAssert *)doesNotContainWithDoubleArray:(IOSDoubleArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)doesNotHaveDuplicates;

- (OrgAssertjCoreApiDoubleArrayAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)endsWithWithDoubleArray:(IOSDoubleArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)hasSameSizeAsWithId:(id)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)hasSameSizeAsWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)hasSizeWithInt:(jint)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)inBinary;

- (OrgAssertjCoreApiDoubleArrayAssert *)inHexadecimal;

- (OrgAssertjCoreApiDoubleArrayAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isNotEmpty;

- (OrgAssertjCoreApiDoubleArrayAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isNotNull;

- (OrgAssertjCoreApiDoubleArrayAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isSorted;

- (OrgAssertjCoreApiDoubleArrayAssert *)isSortedAccordingToWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                         withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiDoubleArrayAssert *)startsWithWithDoubleArray:(IOSDoubleArray *)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiDoubleArrayAssert *)usingDefaultComparator;

- (OrgAssertjCoreApiDoubleArrayAssert *)usingDefaultElementComparator;

- (OrgAssertjCoreApiDoubleArrayAssert *)usingElementComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

#pragma mark Protected

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiDoubleArrayAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiDoubleArrayAssert_initWithDoubleArray_(OrgAssertjCoreApiDoubleArrayAssert *self, IOSDoubleArray *actual);

FOUNDATION_EXPORT OrgAssertjCoreApiDoubleArrayAssert *new_OrgAssertjCoreApiDoubleArrayAssert_initWithDoubleArray_(IOSDoubleArray *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiDoubleArrayAssert *create_OrgAssertjCoreApiDoubleArrayAssert_initWithDoubleArray_(IOSDoubleArray *actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiDoubleArrayAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiDoubleArrayAssert")
