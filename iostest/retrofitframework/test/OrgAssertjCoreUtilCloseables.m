//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreUtilCloseables.h"
#include "java/io/Closeable.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"

@interface OrgAssertjCoreUtilCloseables ()

+ (void)closeCloseableWithJavaIoCloseable:(id<JavaIoCloseable>)c;

- (instancetype)init;

@end

inline JavaUtilLoggingLogger *OrgAssertjCoreUtilCloseables_get_logger();
static JavaUtilLoggingLogger *OrgAssertjCoreUtilCloseables_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgAssertjCoreUtilCloseables, logger, JavaUtilLoggingLogger *)

__attribute__((unused)) static void OrgAssertjCoreUtilCloseables_closeCloseableWithJavaIoCloseable_(id<JavaIoCloseable> c);

__attribute__((unused)) static void OrgAssertjCoreUtilCloseables_init(OrgAssertjCoreUtilCloseables *self);

__attribute__((unused)) static OrgAssertjCoreUtilCloseables *new_OrgAssertjCoreUtilCloseables_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreUtilCloseables *create_OrgAssertjCoreUtilCloseables_init();

J2OBJC_INITIALIZED_DEFN(OrgAssertjCoreUtilCloseables)

@implementation OrgAssertjCoreUtilCloseables

+ (void)closeQuietlyWithJavaIoCloseableArray:(IOSObjectArray *)closeables {
  OrgAssertjCoreUtilCloseables_closeQuietlyWithJavaIoCloseableArray_(closeables);
}

+ (void)closeCloseableWithJavaIoCloseable:(id<JavaIoCloseable>)c {
  OrgAssertjCoreUtilCloseables_closeCloseableWithJavaIoCloseable_(c);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreUtilCloseables_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x89, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(closeQuietlyWithJavaIoCloseableArray:);
  methods[1].selector = @selector(closeCloseableWithJavaIoCloseable:);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "closeQuietly", "[LJavaIoCloseable;", "closeCloseable", "LJavaIoCloseable;", &OrgAssertjCoreUtilCloseables_logger };
  static const J2ObjcClassInfo _OrgAssertjCoreUtilCloseables = { "Closeables", "org.assertj.core.util", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreUtilCloseables;
}

+ (void)initialize {
  if (self == [OrgAssertjCoreUtilCloseables class]) {
    JreStrongAssign(&OrgAssertjCoreUtilCloseables_logger, JavaUtilLoggingLogger_getLoggerWithNSString_([OrgAssertjCoreUtilCloseables_class_() getCanonicalName]));
    J2OBJC_SET_INITIALIZED(OrgAssertjCoreUtilCloseables)
  }
}

@end

void OrgAssertjCoreUtilCloseables_closeQuietlyWithJavaIoCloseableArray_(IOSObjectArray *closeables) {
  OrgAssertjCoreUtilCloseables_initialize();
  {
    IOSObjectArray *a__ = closeables;
    id<JavaIoCloseable> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaIoCloseable> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaIoCloseable> c = *b__++;
      OrgAssertjCoreUtilCloseables_closeCloseableWithJavaIoCloseable_(c);
    }
  }
}

void OrgAssertjCoreUtilCloseables_closeCloseableWithJavaIoCloseable_(id<JavaIoCloseable> c) {
  OrgAssertjCoreUtilCloseables_initialize();
  if (c == nil) {
    return;
  }
  @try {
    [c close];
  }
  @catch (NSException *t) {
    [((JavaUtilLoggingLogger *) nil_chk(OrgAssertjCoreUtilCloseables_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$@", @"Error ocurred while closing ", c) withNSException:t];
  }
}

void OrgAssertjCoreUtilCloseables_init(OrgAssertjCoreUtilCloseables *self) {
  NSObject_init(self);
}

OrgAssertjCoreUtilCloseables *new_OrgAssertjCoreUtilCloseables_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreUtilCloseables, init)
}

OrgAssertjCoreUtilCloseables *create_OrgAssertjCoreUtilCloseables_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreUtilCloseables, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreUtilCloseables)
