//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "RetrofitMimeFormUrlEncodedTypedOutput.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/net/URLEncoder.h"

@implementation RetrofitMimeFormUrlEncodedTypedOutput

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitMimeFormUrlEncodedTypedOutput_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addFieldWithNSString:(NSString *)name
                withNSString:(NSString *)value {
  [self addFieldWithNSString:name withBoolean:true withNSString:value withBoolean:true];
}

- (void)addFieldWithNSString:(NSString *)name
                 withBoolean:(jboolean)encodeName
                withNSString:(NSString *)value
                 withBoolean:(jboolean)encodeValue {
  if (name == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"name");
  }
  if (value == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"value");
  }
  if ([((JavaIoByteArrayOutputStream *) nil_chk(content_)) size] > 0) {
    [content_ writeWithInt:'&'];
  }
  @try {
    if (encodeName) {
      name = JavaNetURLEncoder_encodeWithNSString_withNSString_(name, @"UTF-8");
    }
    if (encodeValue) {
      value = JavaNetURLEncoder_encodeWithNSString_withNSString_(value, @"UTF-8");
    }
    [content_ writeWithByteArray:[((NSString *) nil_chk(name)) java_getBytesWithCharsetName:@"UTF-8"]];
    [content_ writeWithInt:'='];
    [content_ writeWithByteArray:[((NSString *) nil_chk(value)) java_getBytesWithCharsetName:@"UTF-8"]];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

- (NSString *)fileName {
  return nil;
}

- (NSString *)mimeType {
  return @"application/x-www-form-urlencoded; charset=UTF-8";
}

- (jlong)length {
  return [((JavaIoByteArrayOutputStream *) nil_chk(content_)) size];
}

- (void)writeToWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  [((JavaIoOutputStream *) nil_chk(outArg)) writeWithByteArray:[((JavaIoByteArrayOutputStream *) nil_chk(content_)) toByteArray]];
}

- (void)dealloc {
  RELEASE_(content_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addFieldWithNSString:withNSString:);
  methods[2].selector = @selector(addFieldWithNSString:withBoolean:withNSString:withBoolean:);
  methods[3].selector = @selector(fileName);
  methods[4].selector = @selector(mimeType);
  methods[5].selector = @selector(length);
  methods[6].selector = @selector(writeToWithJavaIoOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "content_", "LJavaIoByteArrayOutputStream;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "addField", "LNSString;LNSString;", "LNSString;ZLNSString;Z", "writeTo", "LJavaIoOutputStream;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _RetrofitMimeFormUrlEncodedTypedOutput = { "FormUrlEncodedTypedOutput", "retrofit.mime", ptrTable, methods, fields, 7, 0x11, 7, 1, -1, -1, -1, -1, -1 };
  return &_RetrofitMimeFormUrlEncodedTypedOutput;
}

@end

void RetrofitMimeFormUrlEncodedTypedOutput_init(RetrofitMimeFormUrlEncodedTypedOutput *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->content_, new_JavaIoByteArrayOutputStream_init());
}

RetrofitMimeFormUrlEncodedTypedOutput *new_RetrofitMimeFormUrlEncodedTypedOutput_init() {
  J2OBJC_NEW_IMPL(RetrofitMimeFormUrlEncodedTypedOutput, init)
}

RetrofitMimeFormUrlEncodedTypedOutput *create_RetrofitMimeFormUrlEncodedTypedOutput_init() {
  J2OBJC_CREATE_IMPL(RetrofitMimeFormUrlEncodedTypedOutput, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitMimeFormUrlEncodedTypedOutput)
