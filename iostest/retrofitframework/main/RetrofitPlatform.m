//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "ComGoogleGsonGson.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "RetrofitAndroidAndroidLog.h"
#include "RetrofitAndroidMainThreadExecutor.h"
#include "RetrofitClientClient.h"
#include "RetrofitClientUrlConnectionClient.h"
#include "RetrofitConverterConverter.h"
#include "RetrofitConverterGsonConverter.h"
#include "RetrofitPlatform.h"
#include "RetrofitRestAdapter.h"
#include "RetrofitUtils.h"
#include "java/io/PrintStream.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Runnable.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/util/concurrent/Executor.h"
#include "java/util/concurrent/ExecutorService.h"
#include "java/util/concurrent/Executors.h"
#include "java/util/concurrent/ThreadFactory.h"

@interface RetrofitPlatform ()

+ (RetrofitPlatform *)findPlatform;

+ (jboolean)hasRxJavaOnClasspath;

@end

inline RetrofitPlatform *RetrofitPlatform_get_PLATFORM();
static RetrofitPlatform *RetrofitPlatform_PLATFORM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RetrofitPlatform, PLATFORM, RetrofitPlatform *)

__attribute__((unused)) static RetrofitPlatform *RetrofitPlatform_findPlatform();

__attribute__((unused)) static jboolean RetrofitPlatform_hasRxJavaOnClasspath();

@interface RetrofitPlatform_Base : RetrofitPlatform

- (instancetype)init;

- (id<RetrofitConverterConverter>)defaultConverter;

- (id<RetrofitClientClient_Provider>)defaultClient;

- (id<JavaUtilConcurrentExecutor>)defaultHttpExecutor;

- (id<JavaUtilConcurrentExecutor>)defaultCallbackExecutor;

- (id<RetrofitRestAdapter_Log>)defaultLog;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitPlatform_Base)

__attribute__((unused)) static void RetrofitPlatform_Base_init(RetrofitPlatform_Base *self);

__attribute__((unused)) static RetrofitPlatform_Base *new_RetrofitPlatform_Base_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitPlatform_Base *create_RetrofitPlatform_Base_init();

J2OBJC_TYPE_LITERAL_HEADER(RetrofitPlatform_Base)

@interface RetrofitPlatform_Base_1 : NSObject < RetrofitClientClient_Provider > {
 @public
  id<RetrofitClientClient> val$client_;
}

- (instancetype)initWithRetrofitClientClient:(id<RetrofitClientClient>)capture$0;

- (id<RetrofitClientClient>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitPlatform_Base_1)

__attribute__((unused)) static void RetrofitPlatform_Base_1_initWithRetrofitClientClient_(RetrofitPlatform_Base_1 *self, id<RetrofitClientClient> capture$0);

__attribute__((unused)) static RetrofitPlatform_Base_1 *new_RetrofitPlatform_Base_1_initWithRetrofitClientClient_(id<RetrofitClientClient> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitPlatform_Base_1 *create_RetrofitPlatform_Base_1_initWithRetrofitClientClient_(id<RetrofitClientClient> capture$0);

@interface RetrofitPlatform_Base_2 : NSObject < JavaUtilConcurrentThreadFactory >

- (instancetype)init;

- (JavaLangThread *)newThreadWithJavaLangRunnable:(id<JavaLangRunnable>)r OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitPlatform_Base_2)

__attribute__((unused)) static void RetrofitPlatform_Base_2_init(RetrofitPlatform_Base_2 *self);

__attribute__((unused)) static RetrofitPlatform_Base_2 *new_RetrofitPlatform_Base_2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitPlatform_Base_2 *create_RetrofitPlatform_Base_2_init();

@interface RetrofitPlatform_Base_2_1 : NSObject < JavaLangRunnable > {
 @public
  id<JavaLangRunnable> val$r_;
}

- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitPlatform_Base_2_1)

__attribute__((unused)) static void RetrofitPlatform_Base_2_1_initWithJavaLangRunnable_(RetrofitPlatform_Base_2_1 *self, id<JavaLangRunnable> capture$0);

__attribute__((unused)) static RetrofitPlatform_Base_2_1 *new_RetrofitPlatform_Base_2_1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitPlatform_Base_2_1 *create_RetrofitPlatform_Base_2_1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0);

@interface RetrofitPlatform_Base_3 : NSObject < RetrofitRestAdapter_Log >

- (instancetype)init;

- (void)logWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitPlatform_Base_3)

__attribute__((unused)) static void RetrofitPlatform_Base_3_init(RetrofitPlatform_Base_3 *self);

__attribute__((unused)) static RetrofitPlatform_Base_3 *new_RetrofitPlatform_Base_3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitPlatform_Base_3 *create_RetrofitPlatform_Base_3_init();

@interface RetrofitPlatform_Android : RetrofitPlatform

- (instancetype)init;

- (id<RetrofitConverterConverter>)defaultConverter;

- (id<RetrofitClientClient_Provider>)defaultClient;

- (id<JavaUtilConcurrentExecutor>)defaultHttpExecutor;

- (id<JavaUtilConcurrentExecutor>)defaultCallbackExecutor;

- (id<RetrofitRestAdapter_Log>)defaultLog;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitPlatform_Android)

__attribute__((unused)) static void RetrofitPlatform_Android_init(RetrofitPlatform_Android *self);

__attribute__((unused)) static RetrofitPlatform_Android *new_RetrofitPlatform_Android_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitPlatform_Android *create_RetrofitPlatform_Android_init();

J2OBJC_TYPE_LITERAL_HEADER(RetrofitPlatform_Android)

@interface RetrofitPlatform_Android_1 : NSObject < RetrofitClientClient_Provider > {
 @public
  id<RetrofitClientClient> val$client_;
}

- (instancetype)initWithRetrofitClientClient:(id<RetrofitClientClient>)capture$0;

- (id<RetrofitClientClient>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitPlatform_Android_1)

__attribute__((unused)) static void RetrofitPlatform_Android_1_initWithRetrofitClientClient_(RetrofitPlatform_Android_1 *self, id<RetrofitClientClient> capture$0);

__attribute__((unused)) static RetrofitPlatform_Android_1 *new_RetrofitPlatform_Android_1_initWithRetrofitClientClient_(id<RetrofitClientClient> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitPlatform_Android_1 *create_RetrofitPlatform_Android_1_initWithRetrofitClientClient_(id<RetrofitClientClient> capture$0);

@interface RetrofitPlatform_Android_2 : NSObject < JavaUtilConcurrentThreadFactory >

- (instancetype)init;

- (JavaLangThread *)newThreadWithJavaLangRunnable:(id<JavaLangRunnable>)r OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitPlatform_Android_2)

__attribute__((unused)) static void RetrofitPlatform_Android_2_init(RetrofitPlatform_Android_2 *self);

__attribute__((unused)) static RetrofitPlatform_Android_2 *new_RetrofitPlatform_Android_2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitPlatform_Android_2 *create_RetrofitPlatform_Android_2_init();

@interface RetrofitPlatform_Android_2_1 : NSObject < JavaLangRunnable > {
 @public
  id<JavaLangRunnable> val$r_;
}

- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitPlatform_Android_2_1)

__attribute__((unused)) static void RetrofitPlatform_Android_2_1_initWithJavaLangRunnable_(RetrofitPlatform_Android_2_1 *self, id<JavaLangRunnable> capture$0);

__attribute__((unused)) static RetrofitPlatform_Android_2_1 *new_RetrofitPlatform_Android_2_1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitPlatform_Android_2_1 *create_RetrofitPlatform_Android_2_1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0);

J2OBJC_INITIALIZED_DEFN(RetrofitPlatform)

jboolean RetrofitPlatform_HAS_RX_JAVA;

@implementation RetrofitPlatform

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitPlatform_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (RetrofitPlatform *)get {
  return RetrofitPlatform_get();
}

+ (RetrofitPlatform *)findPlatform {
  return RetrofitPlatform_findPlatform();
}

- (id<RetrofitConverterConverter>)defaultConverter {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RetrofitClientClient_Provider>)defaultClient {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilConcurrentExecutor>)defaultHttpExecutor {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilConcurrentExecutor>)defaultCallbackExecutor {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<RetrofitRestAdapter_Log>)defaultLog {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (jboolean)hasRxJavaOnClasspath {
  return RetrofitPlatform_hasRxJavaOnClasspath();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitPlatform;", 0x8, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitPlatform;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitConverterConverter;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitClientClient_Provider;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentExecutor;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentExecutor;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_Log;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(get);
  methods[2].selector = @selector(findPlatform);
  methods[3].selector = @selector(defaultConverter);
  methods[4].selector = @selector(defaultClient);
  methods[5].selector = @selector(defaultHttpExecutor);
  methods[6].selector = @selector(defaultCallbackExecutor);
  methods[7].selector = @selector(defaultLog);
  methods[8].selector = @selector(hasRxJavaOnClasspath);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PLATFORM", "LRetrofitPlatform;", .constantValue.asLong = 0, 0x1a, -1, 0, -1, -1 },
    { "HAS_RX_JAVA", "Z", .constantValue.asLong = 0, 0x18, -1, 1, -1, -1 },
  };
  static const void *ptrTable[] = { &RetrofitPlatform_PLATFORM, &RetrofitPlatform_HAS_RX_JAVA, "LRetrofitPlatform_Base;LRetrofitPlatform_Android;" };
  static const J2ObjcClassInfo _RetrofitPlatform = { "Platform", "retrofit", ptrTable, methods, fields, 7, 0x400, 9, 2, -1, 2, -1, -1, -1 };
  return &_RetrofitPlatform;
}

+ (void)initialize {
  if (self == [RetrofitPlatform class]) {
    JreStrongAssign(&RetrofitPlatform_PLATFORM, RetrofitPlatform_findPlatform());
    RetrofitPlatform_HAS_RX_JAVA = RetrofitPlatform_hasRxJavaOnClasspath();
    J2OBJC_SET_INITIALIZED(RetrofitPlatform)
  }
}

@end

void RetrofitPlatform_init(RetrofitPlatform *self) {
  NSObject_init(self);
}

RetrofitPlatform *RetrofitPlatform_get() {
  RetrofitPlatform_initialize();
  return RetrofitPlatform_PLATFORM;
}

RetrofitPlatform *RetrofitPlatform_findPlatform() {
  RetrofitPlatform_initialize();
  return create_RetrofitPlatform_Android_init();
}

jboolean RetrofitPlatform_hasRxJavaOnClasspath() {
  RetrofitPlatform_initialize();
  @try {
    IOSClass_forName_(@"rx.Observable");
    return true;
  }
  @catch (JavaLangClassNotFoundException *ignored) {
  }
  return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitPlatform)

@implementation RetrofitPlatform_Base

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitPlatform_Base_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RetrofitConverterConverter>)defaultConverter {
  return create_RetrofitConverterGsonConverter_initWithComGoogleGsonGson_(create_ComGoogleGsonGson_init());
}

- (id<RetrofitClientClient_Provider>)defaultClient {
  id<RetrofitClientClient> client;
  {
    client = create_RetrofitClientUrlConnectionClient_init();
  }
  return create_RetrofitPlatform_Base_1_initWithRetrofitClientClient_(client);
}

- (id<JavaUtilConcurrentExecutor>)defaultHttpExecutor {
  return JavaUtilConcurrentExecutors_newCachedThreadPoolWithJavaUtilConcurrentThreadFactory_(create_RetrofitPlatform_Base_2_init());
}

- (id<JavaUtilConcurrentExecutor>)defaultCallbackExecutor {
  return create_RetrofitUtils_SynchronousExecutor_init();
}

- (id<RetrofitRestAdapter_Log>)defaultLog {
  return create_RetrofitPlatform_Base_3_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitConverterConverter;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitClientClient_Provider;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentExecutor;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentExecutor;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_Log;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(defaultConverter);
  methods[2].selector = @selector(defaultClient);
  methods[3].selector = @selector(defaultHttpExecutor);
  methods[4].selector = @selector(defaultCallbackExecutor);
  methods[5].selector = @selector(defaultLog);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRetrofitPlatform;" };
  static const J2ObjcClassInfo _RetrofitPlatform_Base = { "Base", "retrofit", ptrTable, methods, NULL, 7, 0xa, 6, 0, 0, -1, -1, -1, -1 };
  return &_RetrofitPlatform_Base;
}

@end

void RetrofitPlatform_Base_init(RetrofitPlatform_Base *self) {
  RetrofitPlatform_init(self);
}

RetrofitPlatform_Base *new_RetrofitPlatform_Base_init() {
  J2OBJC_NEW_IMPL(RetrofitPlatform_Base, init)
}

RetrofitPlatform_Base *create_RetrofitPlatform_Base_init() {
  J2OBJC_CREATE_IMPL(RetrofitPlatform_Base, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitPlatform_Base)

@implementation RetrofitPlatform_Base_1

- (instancetype)initWithRetrofitClientClient:(id<RetrofitClientClient>)capture$0 {
  RetrofitPlatform_Base_1_initWithRetrofitClientClient_(self, capture$0);
  return self;
}

- (id<RetrofitClientClient>)get {
  return val$client_;
}

- (void)dealloc {
  RELEASE_(val$client_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitClientClient;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofitClientClient:);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$client_", "LRetrofitClientClient;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRetrofitPlatform_Base;", "defaultClient" };
  static const J2ObjcClassInfo _RetrofitPlatform_Base_1 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_RetrofitPlatform_Base_1;
}

@end

void RetrofitPlatform_Base_1_initWithRetrofitClientClient_(RetrofitPlatform_Base_1 *self, id<RetrofitClientClient> capture$0) {
  JreStrongAssign(&self->val$client_, capture$0);
  NSObject_init(self);
}

RetrofitPlatform_Base_1 *new_RetrofitPlatform_Base_1_initWithRetrofitClientClient_(id<RetrofitClientClient> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitPlatform_Base_1, initWithRetrofitClientClient_, capture$0)
}

RetrofitPlatform_Base_1 *create_RetrofitPlatform_Base_1_initWithRetrofitClientClient_(id<RetrofitClientClient> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitPlatform_Base_1, initWithRetrofitClientClient_, capture$0)
}

@implementation RetrofitPlatform_Base_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitPlatform_Base_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangThread *)newThreadWithJavaLangRunnable:(id<JavaLangRunnable>)r {
  return create_JavaLangThread_initWithJavaLangRunnable_withNSString_(create_RetrofitPlatform_Base_2_1_initWithJavaLangRunnable_(r), RetrofitRestAdapter_IDLE_THREAD_NAME);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThread;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(newThreadWithJavaLangRunnable:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "newThread", "LJavaLangRunnable;", "LRetrofitPlatform_Base;", "defaultHttpExecutor" };
  static const J2ObjcClassInfo _RetrofitPlatform_Base_2 = { "", "retrofit", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, -1, -1 };
  return &_RetrofitPlatform_Base_2;
}

@end

void RetrofitPlatform_Base_2_init(RetrofitPlatform_Base_2 *self) {
  NSObject_init(self);
}

RetrofitPlatform_Base_2 *new_RetrofitPlatform_Base_2_init() {
  J2OBJC_NEW_IMPL(RetrofitPlatform_Base_2, init)
}

RetrofitPlatform_Base_2 *create_RetrofitPlatform_Base_2_init() {
  J2OBJC_CREATE_IMPL(RetrofitPlatform_Base_2, init)
}

@implementation RetrofitPlatform_Base_2_1

- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)capture$0 {
  RetrofitPlatform_Base_2_1_initWithJavaLangRunnable_(self, capture$0);
  return self;
}

- (void)run {
  [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) setPriorityWithInt:JavaLangThread_MIN_PRIORITY];
  [((id<JavaLangRunnable>) nil_chk(val$r_)) run];
}

- (void)dealloc {
  RELEASE_(val$r_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangRunnable:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$r_", "LJavaLangRunnable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRetrofitPlatform_Base_2;", "newThreadWithJavaLangRunnable:" };
  static const J2ObjcClassInfo _RetrofitPlatform_Base_2_1 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_RetrofitPlatform_Base_2_1;
}

@end

void RetrofitPlatform_Base_2_1_initWithJavaLangRunnable_(RetrofitPlatform_Base_2_1 *self, id<JavaLangRunnable> capture$0) {
  JreStrongAssign(&self->val$r_, capture$0);
  NSObject_init(self);
}

RetrofitPlatform_Base_2_1 *new_RetrofitPlatform_Base_2_1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitPlatform_Base_2_1, initWithJavaLangRunnable_, capture$0)
}

RetrofitPlatform_Base_2_1 *create_RetrofitPlatform_Base_2_1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitPlatform_Base_2_1, initWithJavaLangRunnable_, capture$0)
}

@implementation RetrofitPlatform_Base_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitPlatform_Base_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)logWithNSString:(NSString *)message {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:message];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "log", "LNSString;", "LRetrofitPlatform_Base;", "defaultLog" };
  static const J2ObjcClassInfo _RetrofitPlatform_Base_3 = { "", "retrofit", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, -1, -1 };
  return &_RetrofitPlatform_Base_3;
}

@end

void RetrofitPlatform_Base_3_init(RetrofitPlatform_Base_3 *self) {
  NSObject_init(self);
}

RetrofitPlatform_Base_3 *new_RetrofitPlatform_Base_3_init() {
  J2OBJC_NEW_IMPL(RetrofitPlatform_Base_3, init)
}

RetrofitPlatform_Base_3 *create_RetrofitPlatform_Base_3_init() {
  J2OBJC_CREATE_IMPL(RetrofitPlatform_Base_3, init)
}

@implementation RetrofitPlatform_Android

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitPlatform_Android_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<RetrofitConverterConverter>)defaultConverter {
  return create_RetrofitConverterGsonConverter_initWithComGoogleGsonGson_(create_ComGoogleGsonGson_init());
}

- (id<RetrofitClientClient_Provider>)defaultClient {
  id<RetrofitClientClient> client;
  {
    client = create_RetrofitClientUrlConnectionClient_init();
  }
  return create_RetrofitPlatform_Android_1_initWithRetrofitClientClient_(client);
}

- (id<JavaUtilConcurrentExecutor>)defaultHttpExecutor {
  return JavaUtilConcurrentExecutors_newCachedThreadPoolWithJavaUtilConcurrentThreadFactory_(create_RetrofitPlatform_Android_2_init());
}

- (id<JavaUtilConcurrentExecutor>)defaultCallbackExecutor {
  return create_RetrofitAndroidMainThreadExecutor_init();
}

- (id<RetrofitRestAdapter_Log>)defaultLog {
  return create_RetrofitAndroidAndroidLog_initWithNSString_(@"Retrofit");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitConverterConverter;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitClientClient_Provider;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentExecutor;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentExecutor;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_Log;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(defaultConverter);
  methods[2].selector = @selector(defaultClient);
  methods[3].selector = @selector(defaultHttpExecutor);
  methods[4].selector = @selector(defaultCallbackExecutor);
  methods[5].selector = @selector(defaultLog);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LRetrofitPlatform;" };
  static const J2ObjcClassInfo _RetrofitPlatform_Android = { "Android", "retrofit", ptrTable, methods, NULL, 7, 0xa, 6, 0, 0, -1, -1, -1, -1 };
  return &_RetrofitPlatform_Android;
}

@end

void RetrofitPlatform_Android_init(RetrofitPlatform_Android *self) {
  RetrofitPlatform_init(self);
}

RetrofitPlatform_Android *new_RetrofitPlatform_Android_init() {
  J2OBJC_NEW_IMPL(RetrofitPlatform_Android, init)
}

RetrofitPlatform_Android *create_RetrofitPlatform_Android_init() {
  J2OBJC_CREATE_IMPL(RetrofitPlatform_Android, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitPlatform_Android)

@implementation RetrofitPlatform_Android_1

- (instancetype)initWithRetrofitClientClient:(id<RetrofitClientClient>)capture$0 {
  RetrofitPlatform_Android_1_initWithRetrofitClientClient_(self, capture$0);
  return self;
}

- (id<RetrofitClientClient>)get {
  return val$client_;
}

- (void)dealloc {
  RELEASE_(val$client_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitClientClient;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofitClientClient:);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$client_", "LRetrofitClientClient;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRetrofitPlatform_Android;", "defaultClient" };
  static const J2ObjcClassInfo _RetrofitPlatform_Android_1 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_RetrofitPlatform_Android_1;
}

@end

void RetrofitPlatform_Android_1_initWithRetrofitClientClient_(RetrofitPlatform_Android_1 *self, id<RetrofitClientClient> capture$0) {
  JreStrongAssign(&self->val$client_, capture$0);
  NSObject_init(self);
}

RetrofitPlatform_Android_1 *new_RetrofitPlatform_Android_1_initWithRetrofitClientClient_(id<RetrofitClientClient> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitPlatform_Android_1, initWithRetrofitClientClient_, capture$0)
}

RetrofitPlatform_Android_1 *create_RetrofitPlatform_Android_1_initWithRetrofitClientClient_(id<RetrofitClientClient> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitPlatform_Android_1, initWithRetrofitClientClient_, capture$0)
}

@implementation RetrofitPlatform_Android_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitPlatform_Android_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangThread *)newThreadWithJavaLangRunnable:(id<JavaLangRunnable>)r {
  return create_JavaLangThread_initWithJavaLangRunnable_withNSString_(create_RetrofitPlatform_Android_2_1_initWithJavaLangRunnable_(r), RetrofitRestAdapter_IDLE_THREAD_NAME);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThread;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(newThreadWithJavaLangRunnable:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "newThread", "LJavaLangRunnable;", "LRetrofitPlatform_Android;", "defaultHttpExecutor" };
  static const J2ObjcClassInfo _RetrofitPlatform_Android_2 = { "", "retrofit", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, -1, -1 };
  return &_RetrofitPlatform_Android_2;
}

@end

void RetrofitPlatform_Android_2_init(RetrofitPlatform_Android_2 *self) {
  NSObject_init(self);
}

RetrofitPlatform_Android_2 *new_RetrofitPlatform_Android_2_init() {
  J2OBJC_NEW_IMPL(RetrofitPlatform_Android_2, init)
}

RetrofitPlatform_Android_2 *create_RetrofitPlatform_Android_2_init() {
  J2OBJC_CREATE_IMPL(RetrofitPlatform_Android_2, init)
}

@implementation RetrofitPlatform_Android_2_1

- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)capture$0 {
  RetrofitPlatform_Android_2_1_initWithJavaLangRunnable_(self, capture$0);
  return self;
}

- (void)run {
  [((id<JavaLangRunnable>) nil_chk(val$r_)) run];
}

- (void)dealloc {
  RELEASE_(val$r_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangRunnable:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$r_", "LJavaLangRunnable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRetrofitPlatform_Android_2;", "newThreadWithJavaLangRunnable:" };
  static const J2ObjcClassInfo _RetrofitPlatform_Android_2_1 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_RetrofitPlatform_Android_2_1;
}

@end

void RetrofitPlatform_Android_2_1_initWithJavaLangRunnable_(RetrofitPlatform_Android_2_1 *self, id<JavaLangRunnable> capture$0) {
  JreStrongAssign(&self->val$r_, capture$0);
  NSObject_init(self);
}

RetrofitPlatform_Android_2_1 *new_RetrofitPlatform_Android_2_1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitPlatform_Android_2_1, initWithJavaLangRunnable_, capture$0)
}

RetrofitPlatform_Android_2_1 *create_RetrofitPlatform_Android_2_1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitPlatform_Android_2_1, initWithJavaLangRunnable_, capture$0)
}
