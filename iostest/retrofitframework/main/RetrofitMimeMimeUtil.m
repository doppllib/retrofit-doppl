//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "RetrofitMimeMimeUtil.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@interface RetrofitMimeMimeUtil ()

- (instancetype)init;

@end

inline JavaUtilRegexPattern *RetrofitMimeMimeUtil_get_CHARSET();
static JavaUtilRegexPattern *RetrofitMimeMimeUtil_CHARSET;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RetrofitMimeMimeUtil, CHARSET, JavaUtilRegexPattern *)

__attribute__((unused)) static void RetrofitMimeMimeUtil_init(RetrofitMimeMimeUtil *self);

__attribute__((unused)) static RetrofitMimeMimeUtil *new_RetrofitMimeMimeUtil_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitMimeMimeUtil *create_RetrofitMimeMimeUtil_init();

__attribute__((unused)) static IOSObjectArray *RetrofitMimeMimeUtil__Annotations$0();

J2OBJC_INITIALIZED_DEFN(RetrofitMimeMimeUtil)

@implementation RetrofitMimeMimeUtil

+ (NSString *)parseCharsetWithNSString:(NSString *)mimeType {
  return RetrofitMimeMimeUtil_parseCharsetWithNSString_(mimeType);
}

+ (NSString *)parseCharsetWithNSString:(NSString *)mimeType
                          withNSString:(NSString *)defaultCharset {
  return RetrofitMimeMimeUtil_parseCharsetWithNSString_withNSString_(mimeType, defaultCharset);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitMimeMimeUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, 2, -1 },
    { NULL, "LNSString;", 0x9, 0, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(parseCharsetWithNSString:);
  methods[1].selector = @selector(parseCharsetWithNSString:withNSString:);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CHARSET", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "parseCharset", "LNSString;", (void *)&RetrofitMimeMimeUtil__Annotations$0, "LNSString;LNSString;", &RetrofitMimeMimeUtil_CHARSET };
  static const J2ObjcClassInfo _RetrofitMimeMimeUtil = { "MimeUtil", "retrofit.mime", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, -1, -1 };
  return &_RetrofitMimeMimeUtil;
}

+ (void)initialize {
  if (self == [RetrofitMimeMimeUtil class]) {
    JreStrongAssign(&RetrofitMimeMimeUtil_CHARSET, JavaUtilRegexPattern_compileWithNSString_withInt_(@"\\Wcharset=([^\\s;]+)", JavaUtilRegexPattern_CASE_INSENSITIVE));
    J2OBJC_SET_INITIALIZED(RetrofitMimeMimeUtil)
  }
}

@end

NSString *RetrofitMimeMimeUtil_parseCharsetWithNSString_(NSString *mimeType) {
  RetrofitMimeMimeUtil_initialize();
  return RetrofitMimeMimeUtil_parseCharsetWithNSString_withNSString_(mimeType, @"UTF-8");
}

NSString *RetrofitMimeMimeUtil_parseCharsetWithNSString_withNSString_(NSString *mimeType, NSString *defaultCharset) {
  RetrofitMimeMimeUtil_initialize();
  JavaUtilRegexMatcher *match = [((JavaUtilRegexPattern *) nil_chk(RetrofitMimeMimeUtil_CHARSET)) matcherWithJavaLangCharSequence:mimeType];
  if ([((JavaUtilRegexMatcher *) nil_chk(match)) find]) {
    return [((NSString *) nil_chk([match groupWithInt:1])) java_replaceAll:@"[\"\\\\]" withReplacement:@""];
  }
  return defaultCharset;
}

void RetrofitMimeMimeUtil_init(RetrofitMimeMimeUtil *self) {
  NSObject_init(self);
}

RetrofitMimeMimeUtil *new_RetrofitMimeMimeUtil_init() {
  J2OBJC_NEW_IMPL(RetrofitMimeMimeUtil, init)
}

RetrofitMimeMimeUtil *create_RetrofitMimeMimeUtil_init() {
  J2OBJC_CREATE_IMPL(RetrofitMimeMimeUtil, init)
}

IOSObjectArray *RetrofitMimeMimeUtil__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitMimeMimeUtil)
