//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_source.h"
#include "RetrofitRequestInterceptor.h"

@interface RetrofitRequestInterceptor_RequestFacade : NSObject

@end

@interface RetrofitRequestInterceptor_1 : NSObject < RetrofitRequestInterceptor >

- (instancetype)init;

- (void)interceptWithRetrofitRequestInterceptor_RequestFacade:(id<RetrofitRequestInterceptor_RequestFacade>)request;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRequestInterceptor_1)

__attribute__((unused)) static void RetrofitRequestInterceptor_1_init(RetrofitRequestInterceptor_1 *self);

__attribute__((unused)) static RetrofitRequestInterceptor_1 *new_RetrofitRequestInterceptor_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRequestInterceptor_1 *create_RetrofitRequestInterceptor_1_init();

J2OBJC_INITIALIZED_DEFN(RetrofitRequestInterceptor)

id<RetrofitRequestInterceptor> RetrofitRequestInterceptor_NONE;

@implementation RetrofitRequestInterceptor

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(interceptWithRetrofitRequestInterceptor_RequestFacade:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NONE", "LRetrofitRequestInterceptor;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "intercept", "LRetrofitRequestInterceptor_RequestFacade;", &RetrofitRequestInterceptor_NONE };
  static const J2ObjcClassInfo _RetrofitRequestInterceptor = { "RequestInterceptor", "retrofit", ptrTable, methods, fields, 7, 0x609, 1, 1, -1, 1, -1, -1, -1 };
  return &_RetrofitRequestInterceptor;
}

+ (void)initialize {
  if (self == [RetrofitRequestInterceptor class]) {
    JreStrongAssignAndConsume(&RetrofitRequestInterceptor_NONE, new_RetrofitRequestInterceptor_1_init());
    J2OBJC_SET_INITIALIZED(RetrofitRequestInterceptor)
  }
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RetrofitRequestInterceptor)

@implementation RetrofitRequestInterceptor_RequestFacade

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(addHeaderWithNSString:withNSString:);
  methods[1].selector = @selector(addPathParamWithNSString:withNSString:);
  methods[2].selector = @selector(addEncodedPathParamWithNSString:withNSString:);
  methods[3].selector = @selector(addQueryParamWithNSString:withNSString:);
  methods[4].selector = @selector(addEncodedQueryParamWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "addHeader", "LNSString;LNSString;", "addPathParam", "addEncodedPathParam", "addQueryParam", "addEncodedQueryParam", "LRetrofitRequestInterceptor;" };
  static const J2ObjcClassInfo _RetrofitRequestInterceptor_RequestFacade = { "RequestFacade", "retrofit", ptrTable, methods, NULL, 7, 0x609, 5, 0, 6, -1, -1, -1, -1 };
  return &_RetrofitRequestInterceptor_RequestFacade;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RetrofitRequestInterceptor_RequestFacade)

@implementation RetrofitRequestInterceptor_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitRequestInterceptor_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)interceptWithRetrofitRequestInterceptor_RequestFacade:(id<RetrofitRequestInterceptor_RequestFacade>)request {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(interceptWithRetrofitRequestInterceptor_RequestFacade:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "intercept", "LRetrofitRequestInterceptor_RequestFacade;", "LRetrofitRequestInterceptor;" };
  static const J2ObjcClassInfo _RetrofitRequestInterceptor_1 = { "", "retrofit", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, -1, -1 };
  return &_RetrofitRequestInterceptor_1;
}

@end

void RetrofitRequestInterceptor_1_init(RetrofitRequestInterceptor_1 *self) {
  NSObject_init(self);
}

RetrofitRequestInterceptor_1 *new_RetrofitRequestInterceptor_1_init() {
  J2OBJC_NEW_IMPL(RetrofitRequestInterceptor_1, init)
}

RetrofitRequestInterceptor_1 *create_RetrofitRequestInterceptor_1_init() {
  J2OBJC_CREATE_IMPL(RetrofitRequestInterceptor_1, init)
}
