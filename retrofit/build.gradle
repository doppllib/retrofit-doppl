apply plugin: 'java'
apply plugin: 'net.ltgt.apt'
apply plugin: 'co.doppl.gradle'
apply plugin: 'maven-publish'

sourceCompatibility = 1.7
targetCompatibility = 1.7

def javaCoreVersion = '0.8.0'
def dopplCoreVersion = '0.8.0.0'

def dopplRxJavaVersion = '1.2.1.4'
def dopplGsonVersion = '2.6.2.3'

dependencies {
    testCompile 'junit:junit:4.11'

    compile 'com.google.code.gson:gson:2.6.2'
    compile 'io.reactivex:rxjava:1.2.1'

    doppl "co.doppl.com.google.code.gson:gson:$dopplGsonVersion"
    doppl "co.doppl.io.reactivex:rxjava:$dopplRxJavaVersion"
    testDoppl "co.doppl.lib:androidbase:$dopplCoreVersion"
    testDoppl "co.doppl.lib:androidbasetest:$dopplCoreVersion"

    testCompile "co.doppl.lib:androidbasetest:$javaCoreVersion"

    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'com.google.guava:guava:19.0'
    testApt "co.doppl.lib:testapt:$javaCoreVersion"
}

group = 'co.doppl.com.squareup.retrofit'
version = '1.9.0.5'

ext.bintrayGitUrl = 'https://github.com/doppllib/retrofit-doppl.git'

apply from: "$dopplSharedScriptHome/doppllibpublish.gradle"
apply from: "$dopplSharedScriptHome/bintray.gradle"

test{
    enabled = false
}

dopplConfig {
    cycleFinderArgs '--whitelist', 'cycle_whitelist.txt'

    copyMainOutput "../iostest/retrofitframework/main"
    copyTestOutput "../iostest/retrofitframework/test"

    mappingsInput="src/test/java/retrofit.mappings"
    copyDependencies true
}

task runIOSTests(type:Exec, dependsOn: 'dopplDeploy') {
    workingDir '../iostest'

    //on windows:
    commandLine 'xcodebuild', 'test', '-project', 'iostest.xcodeproj', '-scheme', 'iostest', '-destination', 'platform=iOS Simulator,name=iPhone 7,OS=10.3.1'
}