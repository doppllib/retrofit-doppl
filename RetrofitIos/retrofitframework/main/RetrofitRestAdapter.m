//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/main/java/retrofit/RestAdapter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "RetrofitCallback.h"
#include "RetrofitCallbackRunnable.h"
#include "RetrofitClientClient.h"
#include "RetrofitClientHeader.h"
#include "RetrofitClientRequest.h"
#include "RetrofitClientResponse.h"
#include "RetrofitConverterConversionException.h"
#include "RetrofitConverterConverter.h"
#include "RetrofitEndpoint.h"
#include "RetrofitEndpoints.h"
#include "RetrofitErrorHandler.h"
#include "RetrofitExceptionCatchingTypedInput.h"
#include "RetrofitMimeMimeUtil.h"
#include "RetrofitMimeTypedByteArray.h"
#include "RetrofitMimeTypedInput.h"
#include "RetrofitMimeTypedOutput.h"
#include "RetrofitPlatform.h"
#include "RetrofitProfiler.h"
#include "RetrofitRequestBuilder.h"
#include "RetrofitRequestInterceptor.h"
#include "RetrofitRequestInterceptorTape.h"
#include "RetrofitResponseWrapper.h"
#include "RetrofitRestAdapter.h"
#include "RetrofitRestMethodInfo.h"
#include "RetrofitRetrofitError.h"
#include "RetrofitRxSupport.h"
#include "RetrofitUtils.h"
#include "RxObservable.h"
#include "java/io/IOException.h"
#include "java/io/PrintWriter.h"
#include "java/io/StringWriter.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/lang/reflect/InvocationHandler.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Proxy.h"
#include "java/lang/reflect/Type.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/concurrent/Executor.h"
#include "java/util/concurrent/TimeUnit.h"

@interface RetrofitRestAdapter () {
 @public
  id<JavaUtilMap> serviceMethodInfoCache_;
  id<RetrofitClientClient_Provider> clientProvider_;
  id<RetrofitProfiler> profiler_;
  RetrofitRxSupport *rxSupport_;
}

- (instancetype)initWithRetrofitEndpoint:(id<RetrofitEndpoint>)server
       withRetrofitClientClient_Provider:(id<RetrofitClientClient_Provider>)clientProvider
          withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)httpExecutor
          withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)callbackExecutor
          withRetrofitRequestInterceptor:(id<RetrofitRequestInterceptor>)requestInterceptor
          withRetrofitConverterConverter:(id<RetrofitConverterConverter>)converter
                    withRetrofitProfiler:(id<RetrofitProfiler>)profiler
                withRetrofitErrorHandler:(id<RetrofitErrorHandler>)errorHandler
             withRetrofitRestAdapter_Log:(id<RetrofitRestAdapter_Log>)log
        withRetrofitRestAdapter_LogLevel:(RetrofitRestAdapter_LogLevel *)logLevel;

- (RetrofitClientResponse *)logAndReplaceResponseWithNSString:(NSString *)url
                                   withRetrofitClientResponse:(RetrofitClientResponse *)response
                                                     withLong:(jlong)elapsedTime;

- (void)logResponseBodyWithRetrofitMimeTypedInput:(id<RetrofitMimeTypedInput>)body
                                           withId:(id)convert;

+ (RetrofitProfiler_RequestInformation *)getRequestInfoWithNSString:(NSString *)serverUrl
                                         withRetrofitRestMethodInfo:(RetrofitRestMethodInfo *)methodDetails
                                          withRetrofitClientRequest:(RetrofitClientRequest *)request;

@end

J2OBJC_FIELD_SETTER(RetrofitRestAdapter, serviceMethodInfoCache_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapter, clientProvider_, id<RetrofitClientClient_Provider>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapter, profiler_, id<RetrofitProfiler>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapter, rxSupport_, RetrofitRxSupport *)

__attribute__((unused)) static void RetrofitRestAdapter_initWithRetrofitEndpoint_withRetrofitClientClient_Provider_withJavaUtilConcurrentExecutor_withJavaUtilConcurrentExecutor_withRetrofitRequestInterceptor_withRetrofitConverterConverter_withRetrofitProfiler_withRetrofitErrorHandler_withRetrofitRestAdapter_Log_withRetrofitRestAdapter_LogLevel_(RetrofitRestAdapter *self, id<RetrofitEndpoint> server, id<RetrofitClientClient_Provider> clientProvider, id<JavaUtilConcurrentExecutor> httpExecutor, id<JavaUtilConcurrentExecutor> callbackExecutor, id<RetrofitRequestInterceptor> requestInterceptor, id<RetrofitConverterConverter> converter, id<RetrofitProfiler> profiler, id<RetrofitErrorHandler> errorHandler, id<RetrofitRestAdapter_Log> log, RetrofitRestAdapter_LogLevel *logLevel);

__attribute__((unused)) static RetrofitRestAdapter *new_RetrofitRestAdapter_initWithRetrofitEndpoint_withRetrofitClientClient_Provider_withJavaUtilConcurrentExecutor_withJavaUtilConcurrentExecutor_withRetrofitRequestInterceptor_withRetrofitConverterConverter_withRetrofitProfiler_withRetrofitErrorHandler_withRetrofitRestAdapter_Log_withRetrofitRestAdapter_LogLevel_(id<RetrofitEndpoint> server, id<RetrofitClientClient_Provider> clientProvider, id<JavaUtilConcurrentExecutor> httpExecutor, id<JavaUtilConcurrentExecutor> callbackExecutor, id<RetrofitRequestInterceptor> requestInterceptor, id<RetrofitConverterConverter> converter, id<RetrofitProfiler> profiler, id<RetrofitErrorHandler> errorHandler, id<RetrofitRestAdapter_Log> log, RetrofitRestAdapter_LogLevel *logLevel) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapter *create_RetrofitRestAdapter_initWithRetrofitEndpoint_withRetrofitClientClient_Provider_withJavaUtilConcurrentExecutor_withJavaUtilConcurrentExecutor_withRetrofitRequestInterceptor_withRetrofitConverterConverter_withRetrofitProfiler_withRetrofitErrorHandler_withRetrofitRestAdapter_Log_withRetrofitRestAdapter_LogLevel_(id<RetrofitEndpoint> server, id<RetrofitClientClient_Provider> clientProvider, id<JavaUtilConcurrentExecutor> httpExecutor, id<JavaUtilConcurrentExecutor> callbackExecutor, id<RetrofitRequestInterceptor> requestInterceptor, id<RetrofitConverterConverter> converter, id<RetrofitProfiler> profiler, id<RetrofitErrorHandler> errorHandler, id<RetrofitRestAdapter_Log> log, RetrofitRestAdapter_LogLevel *logLevel);

__attribute__((unused)) static RetrofitClientResponse *RetrofitRestAdapter_logAndReplaceResponseWithNSString_withRetrofitClientResponse_withLong_(RetrofitRestAdapter *self, NSString *url, RetrofitClientResponse *response, jlong elapsedTime);

__attribute__((unused)) static void RetrofitRestAdapter_logResponseBodyWithRetrofitMimeTypedInput_withId_(RetrofitRestAdapter *self, id<RetrofitMimeTypedInput> body, id convert);

__attribute__((unused)) static RetrofitProfiler_RequestInformation *RetrofitRestAdapter_getRequestInfoWithNSString_withRetrofitRestMethodInfo_withRetrofitClientRequest_(NSString *serverUrl, RetrofitRestMethodInfo *methodDetails, RetrofitClientRequest *request);

@interface RetrofitRestAdapter_Log_1 : NSObject < RetrofitRestAdapter_Log >

- (instancetype)init;

- (void)logWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapter_Log_1)

__attribute__((unused)) static void RetrofitRestAdapter_Log_1_init(RetrofitRestAdapter_Log_1 *self);

__attribute__((unused)) static RetrofitRestAdapter_Log_1 *new_RetrofitRestAdapter_Log_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapter_Log_1 *create_RetrofitRestAdapter_Log_1_init();

__attribute__((unused)) static void RetrofitRestAdapter_LogLevel_initWithNSString_withInt_(RetrofitRestAdapter_LogLevel *self, NSString *__name, jint __ordinal);

@interface RetrofitRestAdapter_RestHandler : NSObject < JavaLangReflectInvocationHandler > {
 @public
  RetrofitRestAdapter *this$0_;
  id<JavaUtilMap> methodDetailsCache_;
}

- (instancetype)initWithRetrofitRestAdapter:(RetrofitRestAdapter *)outer$
                            withJavaUtilMap:(id<JavaUtilMap>)methodDetailsCache;

- (id)invokeWithId:(id)proxy
withJavaLangReflectMethod:(JavaLangReflectMethod *)method
 withNSObjectArray:(IOSObjectArray *)args;

- (id)invokeRequestWithRetrofitRequestInterceptor:(id<RetrofitRequestInterceptor>)requestInterceptor
                       withRetrofitRestMethodInfo:(RetrofitRestMethodInfo *)methodInfo
                                withNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapter_RestHandler)

J2OBJC_FIELD_SETTER(RetrofitRestAdapter_RestHandler, methodDetailsCache_, id<JavaUtilMap>)

__attribute__((unused)) static void RetrofitRestAdapter_RestHandler_initWithRetrofitRestAdapter_withJavaUtilMap_(RetrofitRestAdapter_RestHandler *self, RetrofitRestAdapter *outer$, id<JavaUtilMap> methodDetailsCache);

__attribute__((unused)) static RetrofitRestAdapter_RestHandler *new_RetrofitRestAdapter_RestHandler_initWithRetrofitRestAdapter_withJavaUtilMap_(RetrofitRestAdapter *outer$, id<JavaUtilMap> methodDetailsCache) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapter_RestHandler *create_RetrofitRestAdapter_RestHandler_initWithRetrofitRestAdapter_withJavaUtilMap_(RetrofitRestAdapter *outer$, id<JavaUtilMap> methodDetailsCache);

__attribute__((unused)) static id RetrofitRestAdapter_RestHandler_invokeRequestWithRetrofitRequestInterceptor_withRetrofitRestMethodInfo_withNSObjectArray_(RetrofitRestAdapter_RestHandler *self, id<RetrofitRequestInterceptor> requestInterceptor, RetrofitRestMethodInfo *methodInfo, IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(RetrofitRestAdapter_RestHandler)

@interface RetrofitRestAdapter_RestHandler_1 : NSObject < RetrofitRxSupport_Invoker > {
 @public
  RetrofitRestAdapter_RestHandler *this$0_;
  RetrofitRestMethodInfo *val$methodInfo_;
  IOSObjectArray *val$args_;
}

- (instancetype)initWithRetrofitRestAdapter_RestHandler:(RetrofitRestAdapter_RestHandler *)outer$
                             withRetrofitRestMethodInfo:(RetrofitRestMethodInfo *)capture$0
                                      withNSObjectArray:(IOSObjectArray *)capture$1;

- (RetrofitResponseWrapper *)invokeWithRetrofitRequestInterceptor:(id<RetrofitRequestInterceptor>)requestInterceptor;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapter_RestHandler_1)

__attribute__((unused)) static void RetrofitRestAdapter_RestHandler_1_initWithRetrofitRestAdapter_RestHandler_withRetrofitRestMethodInfo_withNSObjectArray_(RetrofitRestAdapter_RestHandler_1 *self, RetrofitRestAdapter_RestHandler *outer$, RetrofitRestMethodInfo *capture$0, IOSObjectArray *capture$1);

__attribute__((unused)) static RetrofitRestAdapter_RestHandler_1 *new_RetrofitRestAdapter_RestHandler_1_initWithRetrofitRestAdapter_RestHandler_withRetrofitRestMethodInfo_withNSObjectArray_(RetrofitRestAdapter_RestHandler *outer$, RetrofitRestMethodInfo *capture$0, IOSObjectArray *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapter_RestHandler_1 *create_RetrofitRestAdapter_RestHandler_1_initWithRetrofitRestAdapter_RestHandler_withRetrofitRestMethodInfo_withNSObjectArray_(RetrofitRestAdapter_RestHandler *outer$, RetrofitRestMethodInfo *capture$0, IOSObjectArray *capture$1);

@interface RetrofitRestAdapter_RestHandler_2 : RetrofitCallbackRunnable {
 @public
  RetrofitRestAdapter_RestHandler *this$0_;
  RetrofitRequestInterceptorTape *val$interceptorTape_;
  RetrofitRestMethodInfo *val$methodInfo_;
  IOSObjectArray *val$args_;
}

- (instancetype)initWithRetrofitRestAdapter_RestHandler:(RetrofitRestAdapter_RestHandler *)outer$
                     withRetrofitRequestInterceptorTape:(RetrofitRequestInterceptorTape *)capture$0
                             withRetrofitRestMethodInfo:(RetrofitRestMethodInfo *)capture$1
                                      withNSObjectArray:(IOSObjectArray *)capture$2
                                   withRetrofitCallback:(id<RetrofitCallback>)callback
                         withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)callbackExecutor
                               withRetrofitErrorHandler:(id<RetrofitErrorHandler>)errorHandler;

- (RetrofitResponseWrapper *)obtainResponse;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapter_RestHandler_2)

__attribute__((unused)) static void RetrofitRestAdapter_RestHandler_2_initWithRetrofitRestAdapter_RestHandler_withRetrofitRequestInterceptorTape_withRetrofitRestMethodInfo_withNSObjectArray_withRetrofitCallback_withJavaUtilConcurrentExecutor_withRetrofitErrorHandler_(RetrofitRestAdapter_RestHandler_2 *self, RetrofitRestAdapter_RestHandler *outer$, RetrofitRequestInterceptorTape *capture$0, RetrofitRestMethodInfo *capture$1, IOSObjectArray *capture$2, id<RetrofitCallback> callback, id<JavaUtilConcurrentExecutor> callbackExecutor, id<RetrofitErrorHandler> errorHandler);

__attribute__((unused)) static RetrofitRestAdapter_RestHandler_2 *new_RetrofitRestAdapter_RestHandler_2_initWithRetrofitRestAdapter_RestHandler_withRetrofitRequestInterceptorTape_withRetrofitRestMethodInfo_withNSObjectArray_withRetrofitCallback_withJavaUtilConcurrentExecutor_withRetrofitErrorHandler_(RetrofitRestAdapter_RestHandler *outer$, RetrofitRequestInterceptorTape *capture$0, RetrofitRestMethodInfo *capture$1, IOSObjectArray *capture$2, id<RetrofitCallback> callback, id<JavaUtilConcurrentExecutor> callbackExecutor, id<RetrofitErrorHandler> errorHandler) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapter_RestHandler_2 *create_RetrofitRestAdapter_RestHandler_2_initWithRetrofitRestAdapter_RestHandler_withRetrofitRequestInterceptorTape_withRetrofitRestMethodInfo_withNSObjectArray_withRetrofitCallback_withJavaUtilConcurrentExecutor_withRetrofitErrorHandler_(RetrofitRestAdapter_RestHandler *outer$, RetrofitRequestInterceptorTape *capture$0, RetrofitRestMethodInfo *capture$1, IOSObjectArray *capture$2, id<RetrofitCallback> callback, id<JavaUtilConcurrentExecutor> callbackExecutor, id<RetrofitErrorHandler> errorHandler);

@interface RetrofitRestAdapter_Builder () {
 @public
  id<RetrofitEndpoint> endpoint_;
  id<RetrofitClientClient_Provider> clientProvider_;
  id<JavaUtilConcurrentExecutor> httpExecutor_;
  id<JavaUtilConcurrentExecutor> callbackExecutor_;
  id<RetrofitRequestInterceptor> requestInterceptor_;
  id<RetrofitConverterConverter> converter_;
  id<RetrofitProfiler> profiler_;
  id<RetrofitErrorHandler> errorHandler_;
  id<RetrofitRestAdapter_Log> log_;
  RetrofitRestAdapter_LogLevel *logLevel_;
}

- (void)ensureSaneDefaults;

@end

J2OBJC_FIELD_SETTER(RetrofitRestAdapter_Builder, endpoint_, id<RetrofitEndpoint>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapter_Builder, clientProvider_, id<RetrofitClientClient_Provider>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapter_Builder, httpExecutor_, id<JavaUtilConcurrentExecutor>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapter_Builder, callbackExecutor_, id<JavaUtilConcurrentExecutor>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapter_Builder, requestInterceptor_, id<RetrofitRequestInterceptor>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapter_Builder, converter_, id<RetrofitConverterConverter>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapter_Builder, profiler_, id<RetrofitProfiler>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapter_Builder, errorHandler_, id<RetrofitErrorHandler>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapter_Builder, log_, id<RetrofitRestAdapter_Log>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapter_Builder, logLevel_, RetrofitRestAdapter_LogLevel *)

__attribute__((unused)) static void RetrofitRestAdapter_Builder_ensureSaneDefaults(RetrofitRestAdapter_Builder *self);

@interface RetrofitRestAdapter_Builder_1 : NSObject < RetrofitClientClient_Provider > {
 @public
  id<RetrofitClientClient> val$client_;
}

- (instancetype)initWithRetrofitClientClient:(id<RetrofitClientClient>)capture$0;

- (id<RetrofitClientClient>)get;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapter_Builder_1)

__attribute__((unused)) static void RetrofitRestAdapter_Builder_1_initWithRetrofitClientClient_(RetrofitRestAdapter_Builder_1 *self, id<RetrofitClientClient> capture$0);

__attribute__((unused)) static RetrofitRestAdapter_Builder_1 *new_RetrofitRestAdapter_Builder_1_initWithRetrofitClientClient_(id<RetrofitClientClient> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapter_Builder_1 *create_RetrofitRestAdapter_Builder_1_initWithRetrofitClientClient_(id<RetrofitClientClient> capture$0);

NSString *RetrofitRestAdapter_THREAD_PREFIX = @"Retrofit-";
NSString *RetrofitRestAdapter_IDLE_THREAD_NAME = @"Retrofit-Idle";

@implementation RetrofitRestAdapter

- (instancetype)initWithRetrofitEndpoint:(id<RetrofitEndpoint>)server
       withRetrofitClientClient_Provider:(id<RetrofitClientClient_Provider>)clientProvider
          withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)httpExecutor
          withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)callbackExecutor
          withRetrofitRequestInterceptor:(id<RetrofitRequestInterceptor>)requestInterceptor
          withRetrofitConverterConverter:(id<RetrofitConverterConverter>)converter
                    withRetrofitProfiler:(id<RetrofitProfiler>)profiler
                withRetrofitErrorHandler:(id<RetrofitErrorHandler>)errorHandler
             withRetrofitRestAdapter_Log:(id<RetrofitRestAdapter_Log>)log
        withRetrofitRestAdapter_LogLevel:(RetrofitRestAdapter_LogLevel *)logLevel {
  RetrofitRestAdapter_initWithRetrofitEndpoint_withRetrofitClientClient_Provider_withJavaUtilConcurrentExecutor_withJavaUtilConcurrentExecutor_withRetrofitRequestInterceptor_withRetrofitConverterConverter_withRetrofitProfiler_withRetrofitErrorHandler_withRetrofitRestAdapter_Log_withRetrofitRestAdapter_LogLevel_(self, server, clientProvider, httpExecutor, callbackExecutor, requestInterceptor, converter, profiler, errorHandler, log, logLevel);
  return self;
}

- (void)setLogLevelWithRetrofitRestAdapter_LogLevel:(RetrofitRestAdapter_LogLevel *)loglevel {
  if (JreLoadVolatileId(&logLevel_) == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Log level may not be null.");
  }
  JreVolatileStrongAssign(&self->logLevel_, loglevel);
}

- (RetrofitRestAdapter_LogLevel *)getLogLevel {
  return JreLoadVolatileId(&logLevel_);
}

- (id)createWithIOSClass:(IOSClass *)service {
  RetrofitUtils_validateServiceClassWithIOSClass_(service);
  return JavaLangReflectProxy_newProxyInstanceWithJavaLangClassLoader_withIOSClassArray_withJavaLangReflectInvocationHandler_([((IOSClass *) nil_chk(service)) getClassLoader], [IOSObjectArray arrayWithObjects:(id[]){ service } count:1 type:IOSClass_class_()], create_RetrofitRestAdapter_RestHandler_initWithRetrofitRestAdapter_withJavaUtilMap_(self, [self getMethodInfoCacheWithIOSClass:service]));
}

- (id<JavaUtilMap>)getMethodInfoCacheWithIOSClass:(IOSClass *)service {
  @synchronized(serviceMethodInfoCache_) {
    id<JavaUtilMap> methodInfoCache = [((id<JavaUtilMap>) nil_chk(serviceMethodInfoCache_)) getWithId:service];
    if (methodInfoCache == nil) {
      methodInfoCache = create_JavaUtilLinkedHashMap_init();
      [serviceMethodInfoCache_ putWithId:service withId:methodInfoCache];
    }
    return methodInfoCache;
  }
}

+ (RetrofitRestMethodInfo *)getMethodInfoWithJavaUtilMap:(id<JavaUtilMap>)cache
                               withJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  return RetrofitRestAdapter_getMethodInfoWithJavaUtilMap_withJavaLangReflectMethod_(cache, method);
}

- (RetrofitClientRequest *)logAndReplaceRequestWithNSString:(NSString *)name
                                  withRetrofitClientRequest:(RetrofitClientRequest *)request
                                          withNSObjectArray:(IOSObjectArray *)args {
  [((id<RetrofitRestAdapter_Log>) nil_chk(log_)) logWithNSString:NSString_java_formatWithNSString_withNSObjectArray_(@"---> %s %s %s", [IOSObjectArray arrayWithObjects:(id[]){ name, [((RetrofitClientRequest *) nil_chk(request)) getMethod], [request getUrl] } count:3 type:NSObject_class_()])];
  if ([((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadVolatileId(&logLevel_))) ordinal] >= [((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadEnum(RetrofitRestAdapter_LogLevel, HEADERS))) ordinal]) {
    for (RetrofitClientHeader * __strong header in nil_chk([request getHeaders])) {
      [log_ logWithNSString:[((RetrofitClientHeader *) nil_chk(header)) description]];
    }
    NSString *bodySize = @"no";
    id<RetrofitMimeTypedOutput> body = [request getBody];
    if (body != nil) {
      NSString *bodyMime = [body mimeType];
      if (bodyMime != nil) {
        [log_ logWithNSString:JreStrcat("$$", @"Content-Type: ", bodyMime)];
      }
      jlong bodyLength = [body length];
      bodySize = JreStrcat("J$", bodyLength, @"-byte");
      if (bodyLength != -1) {
        [log_ logWithNSString:JreStrcat("$J", @"Content-Length: ", bodyLength)];
      }
      if ([((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadVolatileId(&logLevel_))) ordinal] >= [((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadEnum(RetrofitRestAdapter_LogLevel, FULL))) ordinal]) {
        if (![((id<JavaUtilList>) nil_chk([request getHeaders])) isEmpty]) {
          [log_ logWithNSString:@""];
        }
        if (!([body isKindOfClass:[RetrofitMimeTypedByteArray class]])) {
          request = RetrofitUtils_readBodyToBytesIfNecessaryWithRetrofitClientRequest_(request);
          body = [((RetrofitClientRequest *) nil_chk(request)) getBody];
        }
        IOSByteArray *bodyBytes = [((RetrofitMimeTypedByteArray *) nil_chk(((RetrofitMimeTypedByteArray *) cast_chk(body, [RetrofitMimeTypedByteArray class])))) getBytes];
        NSString *bodyCharset = RetrofitMimeMimeUtil_parseCharsetWithNSString_withNSString_([((id<RetrofitMimeTypedOutput>) nil_chk(body)) mimeType], @"UTF-8");
        [log_ logWithNSString:[NSString java_stringWithBytes:bodyBytes charsetName:bodyCharset]];
      }
      else if ([((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadVolatileId(&logLevel_))) ordinal] >= [((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadEnum(RetrofitRestAdapter_LogLevel, HEADERS_AND_ARGS))) ordinal]) {
        if (![((id<JavaUtilList>) nil_chk([request getHeaders])) isEmpty]) {
          [log_ logWithNSString:@"---> REQUEST:"];
        }
        for (jint i = 0; i < ((IOSObjectArray *) nil_chk(args))->size_; i++) {
          [log_ logWithNSString:JreStrcat("CI$@", '#', i, @": ", IOSObjectArray_Get(args, i))];
        }
      }
    }
    [log_ logWithNSString:NSString_java_formatWithNSString_withNSObjectArray_(@"---> END %s (%s body)", [IOSObjectArray arrayWithObjects:(id[]){ name, bodySize } count:2 type:NSObject_class_()])];
  }
  return request;
}

- (RetrofitClientResponse *)logAndReplaceResponseWithNSString:(NSString *)url
                                   withRetrofitClientResponse:(RetrofitClientResponse *)response
                                                     withLong:(jlong)elapsedTime {
  return RetrofitRestAdapter_logAndReplaceResponseWithNSString_withRetrofitClientResponse_withLong_(self, url, response, elapsedTime);
}

- (void)logResponseBodyWithRetrofitMimeTypedInput:(id<RetrofitMimeTypedInput>)body
                                           withId:(id)convert {
  RetrofitRestAdapter_logResponseBodyWithRetrofitMimeTypedInput_withId_(self, body, convert);
}

- (void)logExceptionWithNSException:(NSException *)t
                       withNSString:(NSString *)url {
  [((id<RetrofitRestAdapter_Log>) nil_chk(log_)) logWithNSString:NSString_java_formatWithNSString_withNSObjectArray_(@"---- ERROR %s", [IOSObjectArray arrayWithObjects:(id[]){ url != nil ? url : @"" } count:1 type:NSObject_class_()])];
  JavaIoStringWriter *sw = create_JavaIoStringWriter_init();
  [((NSException *) nil_chk(t)) printStackTraceWithJavaIoPrintWriter:create_JavaIoPrintWriter_initWithJavaIoWriter_(sw)];
  [log_ logWithNSString:[sw description]];
  [log_ logWithNSString:@"---- END ERROR"];
}

+ (RetrofitProfiler_RequestInformation *)getRequestInfoWithNSString:(NSString *)serverUrl
                                         withRetrofitRestMethodInfo:(RetrofitRestMethodInfo *)methodDetails
                                          withRetrofitClientRequest:(RetrofitClientRequest *)request {
  return RetrofitRestAdapter_getRequestInfoWithNSString_withRetrofitRestMethodInfo_withRetrofitClientRequest_(serverUrl, methodDetails, request);
}

- (void)__javaClone:(RetrofitRestAdapter *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&logLevel_, &original->logLevel_);
}

- (void)dealloc {
  RELEASE_(serviceMethodInfoCache_);
  RELEASE_(server_);
  RELEASE_(httpExecutor_);
  RELEASE_(callbackExecutor_);
  RELEASE_(requestInterceptor_);
  RELEASE_(converter_);
  RELEASE_(log_);
  RELEASE_(errorHandler_);
  RELEASE_(clientProvider_);
  RELEASE_(profiler_);
  RELEASE_(rxSupport_);
  JreReleaseVolatile(&logLevel_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_LogLevel;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x0, 6, 4, -1, 7, -1, -1 },
    { NULL, "LRetrofitRestMethodInfo;", 0x8, 8, 9, -1, 10, -1, -1 },
    { NULL, "LRetrofitClientRequest;", 0x0, 11, 12, 13, -1, -1, -1 },
    { NULL, "LRetrofitClientResponse;", 0x2, 14, 15, 13, -1, -1, -1 },
    { NULL, "V", 0x2, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 18, 19, -1, -1, -1, -1 },
    { NULL, "LRetrofitProfiler_RequestInformation;", 0xa, 20, 21, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofitEndpoint:withRetrofitClientClient_Provider:withJavaUtilConcurrentExecutor:withJavaUtilConcurrentExecutor:withRetrofitRequestInterceptor:withRetrofitConverterConverter:withRetrofitProfiler:withRetrofitErrorHandler:withRetrofitRestAdapter_Log:withRetrofitRestAdapter_LogLevel:);
  methods[1].selector = @selector(setLogLevelWithRetrofitRestAdapter_LogLevel:);
  methods[2].selector = @selector(getLogLevel);
  methods[3].selector = @selector(createWithIOSClass:);
  methods[4].selector = @selector(getMethodInfoCacheWithIOSClass:);
  methods[5].selector = @selector(getMethodInfoWithJavaUtilMap:withJavaLangReflectMethod:);
  methods[6].selector = @selector(logAndReplaceRequestWithNSString:withRetrofitClientRequest:withNSObjectArray:);
  methods[7].selector = @selector(logAndReplaceResponseWithNSString:withRetrofitClientResponse:withLong:);
  methods[8].selector = @selector(logResponseBodyWithRetrofitMimeTypedInput:withId:);
  methods[9].selector = @selector(logExceptionWithNSException:withNSString:);
  methods[10].selector = @selector(getRequestInfoWithNSString:withRetrofitRestMethodInfo:withRetrofitClientRequest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "THREAD_PREFIX", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 22, -1, -1 },
    { "IDLE_THREAD_NAME", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 23, -1, -1 },
    { "serviceMethodInfoCache_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 24, -1 },
    { "server_", "LRetrofitEndpoint;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "httpExecutor_", "LJavaUtilConcurrentExecutor;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "callbackExecutor_", "LJavaUtilConcurrentExecutor;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "requestInterceptor_", "LRetrofitRequestInterceptor;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "converter_", "LRetrofitConverterConverter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "log_", "LRetrofitRestAdapter_Log;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "errorHandler_", "LRetrofitErrorHandler;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "clientProvider_", "LRetrofitClientClient_Provider;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "profiler_", "LRetrofitProfiler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "rxSupport_", "LRetrofitRxSupport;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "logLevel_", "LRetrofitRestAdapter_LogLevel;", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRetrofitEndpoint;LRetrofitClientClient_Provider;LJavaUtilConcurrentExecutor;LJavaUtilConcurrentExecutor;LRetrofitRequestInterceptor;LRetrofitConverterConverter;LRetrofitProfiler;LRetrofitErrorHandler;LRetrofitRestAdapter_Log;LRetrofitRestAdapter_LogLevel;", "setLogLevel", "LRetrofitRestAdapter_LogLevel;", "create", "LIOSClass;", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;)TT;", "getMethodInfoCache", "(Ljava/lang/Class<*>;)Ljava/util/Map<Ljava/lang/reflect/Method;Lretrofit/RestMethodInfo;>;", "getMethodInfo", "LJavaUtilMap;LJavaLangReflectMethod;", "(Ljava/util/Map<Ljava/lang/reflect/Method;Lretrofit/RestMethodInfo;>;Ljava/lang/reflect/Method;)Lretrofit/RestMethodInfo;", "logAndReplaceRequest", "LNSString;LRetrofitClientRequest;[LNSObject;", "LJavaIoIOException;", "logAndReplaceResponse", "LNSString;LRetrofitClientResponse;J", "logResponseBody", "LRetrofitMimeTypedInput;LNSObject;", "logException", "LNSException;LNSString;", "getRequestInfo", "LNSString;LRetrofitRestMethodInfo;LRetrofitClientRequest;", &RetrofitRestAdapter_THREAD_PREFIX, &RetrofitRestAdapter_IDLE_THREAD_NAME, "Ljava/util/Map<Ljava/lang/Class<*>;Ljava/util/Map<Ljava/lang/reflect/Method;Lretrofit/RestMethodInfo;>;>;", "LRetrofitRestAdapter_Log;LRetrofitRestAdapter_LogLevel;LRetrofitRestAdapter_RestHandler;LRetrofitRestAdapter_Builder;" };
  static const J2ObjcClassInfo _RetrofitRestAdapter = { "RestAdapter", "retrofit", ptrTable, methods, fields, 7, 0x1, 11, 14, -1, 25, -1, -1, -1 };
  return &_RetrofitRestAdapter;
}

@end

void RetrofitRestAdapter_initWithRetrofitEndpoint_withRetrofitClientClient_Provider_withJavaUtilConcurrentExecutor_withJavaUtilConcurrentExecutor_withRetrofitRequestInterceptor_withRetrofitConverterConverter_withRetrofitProfiler_withRetrofitErrorHandler_withRetrofitRestAdapter_Log_withRetrofitRestAdapter_LogLevel_(RetrofitRestAdapter *self, id<RetrofitEndpoint> server, id<RetrofitClientClient_Provider> clientProvider, id<JavaUtilConcurrentExecutor> httpExecutor, id<JavaUtilConcurrentExecutor> callbackExecutor, id<RetrofitRequestInterceptor> requestInterceptor, id<RetrofitConverterConverter> converter, id<RetrofitProfiler> profiler, id<RetrofitErrorHandler> errorHandler, id<RetrofitRestAdapter_Log> log, RetrofitRestAdapter_LogLevel *logLevel) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->serviceMethodInfoCache_, new_JavaUtilLinkedHashMap_init());
  JreStrongAssign(&self->server_, server);
  JreStrongAssign(&self->clientProvider_, clientProvider);
  JreStrongAssign(&self->httpExecutor_, httpExecutor);
  JreStrongAssign(&self->callbackExecutor_, callbackExecutor);
  JreStrongAssign(&self->requestInterceptor_, requestInterceptor);
  JreStrongAssign(&self->converter_, converter);
  JreStrongAssign(&self->profiler_, profiler);
  JreStrongAssign(&self->errorHandler_, errorHandler);
  JreStrongAssign(&self->log_, log);
  JreVolatileStrongAssign(&self->logLevel_, logLevel);
}

RetrofitRestAdapter *new_RetrofitRestAdapter_initWithRetrofitEndpoint_withRetrofitClientClient_Provider_withJavaUtilConcurrentExecutor_withJavaUtilConcurrentExecutor_withRetrofitRequestInterceptor_withRetrofitConverterConverter_withRetrofitProfiler_withRetrofitErrorHandler_withRetrofitRestAdapter_Log_withRetrofitRestAdapter_LogLevel_(id<RetrofitEndpoint> server, id<RetrofitClientClient_Provider> clientProvider, id<JavaUtilConcurrentExecutor> httpExecutor, id<JavaUtilConcurrentExecutor> callbackExecutor, id<RetrofitRequestInterceptor> requestInterceptor, id<RetrofitConverterConverter> converter, id<RetrofitProfiler> profiler, id<RetrofitErrorHandler> errorHandler, id<RetrofitRestAdapter_Log> log, RetrofitRestAdapter_LogLevel *logLevel) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapter, initWithRetrofitEndpoint_withRetrofitClientClient_Provider_withJavaUtilConcurrentExecutor_withJavaUtilConcurrentExecutor_withRetrofitRequestInterceptor_withRetrofitConverterConverter_withRetrofitProfiler_withRetrofitErrorHandler_withRetrofitRestAdapter_Log_withRetrofitRestAdapter_LogLevel_, server, clientProvider, httpExecutor, callbackExecutor, requestInterceptor, converter, profiler, errorHandler, log, logLevel)
}

RetrofitRestAdapter *create_RetrofitRestAdapter_initWithRetrofitEndpoint_withRetrofitClientClient_Provider_withJavaUtilConcurrentExecutor_withJavaUtilConcurrentExecutor_withRetrofitRequestInterceptor_withRetrofitConverterConverter_withRetrofitProfiler_withRetrofitErrorHandler_withRetrofitRestAdapter_Log_withRetrofitRestAdapter_LogLevel_(id<RetrofitEndpoint> server, id<RetrofitClientClient_Provider> clientProvider, id<JavaUtilConcurrentExecutor> httpExecutor, id<JavaUtilConcurrentExecutor> callbackExecutor, id<RetrofitRequestInterceptor> requestInterceptor, id<RetrofitConverterConverter> converter, id<RetrofitProfiler> profiler, id<RetrofitErrorHandler> errorHandler, id<RetrofitRestAdapter_Log> log, RetrofitRestAdapter_LogLevel *logLevel) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapter, initWithRetrofitEndpoint_withRetrofitClientClient_Provider_withJavaUtilConcurrentExecutor_withJavaUtilConcurrentExecutor_withRetrofitRequestInterceptor_withRetrofitConverterConverter_withRetrofitProfiler_withRetrofitErrorHandler_withRetrofitRestAdapter_Log_withRetrofitRestAdapter_LogLevel_, server, clientProvider, httpExecutor, callbackExecutor, requestInterceptor, converter, profiler, errorHandler, log, logLevel)
}

RetrofitRestMethodInfo *RetrofitRestAdapter_getMethodInfoWithJavaUtilMap_withJavaLangReflectMethod_(id<JavaUtilMap> cache, JavaLangReflectMethod *method) {
  RetrofitRestAdapter_initialize();
  @synchronized(cache) {
    RetrofitRestMethodInfo *methodInfo = [((id<JavaUtilMap>) nil_chk(cache)) getWithId:method];
    if (methodInfo == nil) {
      methodInfo = create_RetrofitRestMethodInfo_initWithJavaLangReflectMethod_(method);
      [cache putWithId:method withId:methodInfo];
    }
    return methodInfo;
  }
}

RetrofitClientResponse *RetrofitRestAdapter_logAndReplaceResponseWithNSString_withRetrofitClientResponse_withLong_(RetrofitRestAdapter *self, NSString *url, RetrofitClientResponse *response, jlong elapsedTime) {
  [((id<RetrofitRestAdapter_Log>) nil_chk(self->log_)) logWithNSString:NSString_java_formatWithNSString_withNSObjectArray_(@"<--- HTTP %s %s (%sms)", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_([((RetrofitClientResponse *) nil_chk(response)) getStatus]), url, JavaLangLong_valueOfWithLong_(elapsedTime) } count:3 type:NSObject_class_()])];
  if ([((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadVolatileId(&self->logLevel_))) ordinal] >= [((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadEnum(RetrofitRestAdapter_LogLevel, HEADERS))) ordinal]) {
    for (RetrofitClientHeader * __strong header in nil_chk([response getHeaders])) {
      [self->log_ logWithNSString:[((RetrofitClientHeader *) nil_chk(header)) description]];
    }
    jlong bodySize = 0;
    id<RetrofitMimeTypedInput> body = [response getBody];
    if (body != nil) {
      bodySize = [body length];
      if ([((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadVolatileId(&self->logLevel_))) ordinal] >= [((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadEnum(RetrofitRestAdapter_LogLevel, FULL))) ordinal]) {
        if (![((id<JavaUtilList>) nil_chk([response getHeaders])) isEmpty]) {
          [self->log_ logWithNSString:@""];
        }
        if (!([body isKindOfClass:[RetrofitMimeTypedByteArray class]])) {
          response = RetrofitUtils_readBodyToBytesIfNecessaryWithRetrofitClientResponse_(response);
          body = [((RetrofitClientResponse *) nil_chk(response)) getBody];
        }
        IOSByteArray *bodyBytes = [((RetrofitMimeTypedByteArray *) nil_chk(((RetrofitMimeTypedByteArray *) cast_chk(body, [RetrofitMimeTypedByteArray class])))) getBytes];
        bodySize = ((IOSByteArray *) nil_chk(bodyBytes))->size_;
        NSString *bodyMime = [((id<RetrofitMimeTypedInput>) nil_chk(body)) mimeType];
        NSString *bodyCharset = RetrofitMimeMimeUtil_parseCharsetWithNSString_withNSString_(bodyMime, @"UTF-8");
        [self->log_ logWithNSString:[NSString java_stringWithBytes:bodyBytes charsetName:bodyCharset]];
      }
    }
    [self->log_ logWithNSString:NSString_java_formatWithNSString_withNSObjectArray_(@"<--- END HTTP (%s-byte body)", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(bodySize) } count:1 type:NSObject_class_()])];
  }
  return response;
}

void RetrofitRestAdapter_logResponseBodyWithRetrofitMimeTypedInput_withId_(RetrofitRestAdapter *self, id<RetrofitMimeTypedInput> body, id convert) {
  if ([((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadVolatileId(&self->logLevel_))) ordinal] == [((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadEnum(RetrofitRestAdapter_LogLevel, HEADERS_AND_ARGS))) ordinal]) {
    [((id<RetrofitRestAdapter_Log>) nil_chk(self->log_)) logWithNSString:@"<--- BODY:"];
    [self->log_ logWithNSString:[nil_chk(convert) description]];
  }
}

RetrofitProfiler_RequestInformation *RetrofitRestAdapter_getRequestInfoWithNSString_withRetrofitRestMethodInfo_withRetrofitClientRequest_(NSString *serverUrl, RetrofitRestMethodInfo *methodDetails, RetrofitClientRequest *request) {
  RetrofitRestAdapter_initialize();
  jlong contentLength = 0;
  NSString *contentType = nil;
  id<RetrofitMimeTypedOutput> body = [((RetrofitClientRequest *) nil_chk(request)) getBody];
  if (body != nil) {
    contentLength = [body length];
    contentType = [body mimeType];
  }
  return create_RetrofitProfiler_RequestInformation_initWithNSString_withNSString_withNSString_withLong_withNSString_(((RetrofitRestMethodInfo *) nil_chk(methodDetails))->requestMethod_, serverUrl, methodDetails->requestUrl_, contentLength, contentType);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitRestAdapter)

J2OBJC_INITIALIZED_DEFN(RetrofitRestAdapter_Log)

id<RetrofitRestAdapter_Log> RetrofitRestAdapter_Log_NONE;

@implementation RetrofitRestAdapter_Log

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NONE", "LRetrofitRestAdapter_Log;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "log", "LNSString;", &RetrofitRestAdapter_Log_NONE, "LRetrofitRestAdapter;" };
  static const J2ObjcClassInfo _RetrofitRestAdapter_Log = { "Log", "retrofit", ptrTable, methods, fields, 7, 0x609, 1, 1, 3, -1, -1, -1, -1 };
  return &_RetrofitRestAdapter_Log;
}

+ (void)initialize {
  if (self == [RetrofitRestAdapter_Log class]) {
    JreStrongAssignAndConsume(&RetrofitRestAdapter_Log_NONE, new_RetrofitRestAdapter_Log_1_init());
    J2OBJC_SET_INITIALIZED(RetrofitRestAdapter_Log)
  }
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RetrofitRestAdapter_Log)

@implementation RetrofitRestAdapter_Log_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitRestAdapter_Log_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)logWithNSString:(NSString *)message {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "log", "LNSString;", "LRetrofitRestAdapter_Log;" };
  static const J2ObjcClassInfo _RetrofitRestAdapter_Log_1 = { "", "retrofit", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, -1, -1 };
  return &_RetrofitRestAdapter_Log_1;
}

@end

void RetrofitRestAdapter_Log_1_init(RetrofitRestAdapter_Log_1 *self) {
  NSObject_init(self);
}

RetrofitRestAdapter_Log_1 *new_RetrofitRestAdapter_Log_1_init() {
  J2OBJC_NEW_IMPL(RetrofitRestAdapter_Log_1, init)
}

RetrofitRestAdapter_Log_1 *create_RetrofitRestAdapter_Log_1_init() {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapter_Log_1, init)
}

J2OBJC_INITIALIZED_DEFN(RetrofitRestAdapter_LogLevel)

RetrofitRestAdapter_LogLevel *RetrofitRestAdapter_LogLevel_values_[5];

@implementation RetrofitRestAdapter_LogLevel

- (jboolean)log {
  return self != JreEnum(RetrofitRestAdapter_LogLevel, NONE);
}

+ (IOSObjectArray *)values {
  return RetrofitRestAdapter_LogLevel_values();
}

+ (RetrofitRestAdapter_LogLevel *)valueOfWithNSString:(NSString *)name {
  return RetrofitRestAdapter_LogLevel_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LRetrofitRestAdapter_LogLevel;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_LogLevel;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(log);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NONE", "LRetrofitRestAdapter_LogLevel;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "BASIC", "LRetrofitRestAdapter_LogLevel;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "HEADERS", "LRetrofitRestAdapter_LogLevel;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "HEADERS_AND_ARGS", "LRetrofitRestAdapter_LogLevel;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "FULL", "LRetrofitRestAdapter_LogLevel;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(RetrofitRestAdapter_LogLevel, NONE), &JreEnum(RetrofitRestAdapter_LogLevel, BASIC), &JreEnum(RetrofitRestAdapter_LogLevel, HEADERS), &JreEnum(RetrofitRestAdapter_LogLevel, HEADERS_AND_ARGS), &JreEnum(RetrofitRestAdapter_LogLevel, FULL), "LRetrofitRestAdapter;", "Ljava/lang/Enum<Lretrofit/RestAdapter$LogLevel;>;" };
  static const J2ObjcClassInfo _RetrofitRestAdapter_LogLevel = { "LogLevel", "retrofit", ptrTable, methods, fields, 7, 0x4019, 3, 5, 7, -1, -1, 8, -1 };
  return &_RetrofitRestAdapter_LogLevel;
}

+ (void)initialize {
  if (self == [RetrofitRestAdapter_LogLevel class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 5 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"NONE", @"BASIC", @"HEADERS", @"HEADERS_AND_ARGS", @"FULL",
    };
    for (jint i = 0; i < 5; i++) {
      (RetrofitRestAdapter_LogLevel_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      RetrofitRestAdapter_LogLevel_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(RetrofitRestAdapter_LogLevel)
  }
}

@end

void RetrofitRestAdapter_LogLevel_initWithNSString_withInt_(RetrofitRestAdapter_LogLevel *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *RetrofitRestAdapter_LogLevel_values() {
  RetrofitRestAdapter_LogLevel_initialize();
  return [IOSObjectArray arrayWithObjects:RetrofitRestAdapter_LogLevel_values_ count:5 type:RetrofitRestAdapter_LogLevel_class_()];
}

RetrofitRestAdapter_LogLevel *RetrofitRestAdapter_LogLevel_valueOfWithNSString_(NSString *name) {
  RetrofitRestAdapter_LogLevel_initialize();
  for (int i = 0; i < 5; i++) {
    RetrofitRestAdapter_LogLevel *e = RetrofitRestAdapter_LogLevel_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

RetrofitRestAdapter_LogLevel *RetrofitRestAdapter_LogLevel_fromOrdinal(NSUInteger ordinal) {
  RetrofitRestAdapter_LogLevel_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return RetrofitRestAdapter_LogLevel_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitRestAdapter_LogLevel)

@implementation RetrofitRestAdapter_RestHandler

- (instancetype)initWithRetrofitRestAdapter:(RetrofitRestAdapter *)outer$
                            withJavaUtilMap:(id<JavaUtilMap>)methodDetailsCache {
  RetrofitRestAdapter_RestHandler_initWithRetrofitRestAdapter_withJavaUtilMap_(self, outer$, methodDetailsCache);
  return self;
}

- (id)invokeWithId:(id)proxy
withJavaLangReflectMethod:(JavaLangReflectMethod *)method
 withNSObjectArray:(IOSObjectArray *)args {
  if ([((JavaLangReflectMethod *) nil_chk(method)) getDeclaringClass] == NSObject_class_()) {
    return [method invokeWithId:self withNSObjectArray:args];
  }
  RetrofitRestMethodInfo *methodInfo = RetrofitRestAdapter_getMethodInfoWithJavaUtilMap_withJavaLangReflectMethod_(methodDetailsCache_, method);
  if (((RetrofitRestMethodInfo *) nil_chk(methodInfo))->isSynchronous_) {
    @try {
      return RetrofitRestAdapter_RestHandler_invokeRequestWithRetrofitRequestInterceptor_withRetrofitRestMethodInfo_withNSObjectArray_(self, this$0_->requestInterceptor_, methodInfo, args);
    }
    @catch (RetrofitRetrofitError *error) {
      NSException *newError = [((id<RetrofitErrorHandler>) nil_chk(this$0_->errorHandler_)) handleErrorWithRetrofitRetrofitError:error];
      if (newError == nil) {
        @throw create_JavaLangIllegalStateException_initWithNSString_withNSException_(@"Error handler returned null for wrapped exception.", error);
      }
      @throw newError;
    }
  }
  if (this$0_->httpExecutor_ == nil || this$0_->callbackExecutor_ == nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Asynchronous invocation requires calling setExecutors.");
  }
  if (methodInfo->isObservable_) {
    if (this$0_->rxSupport_ == nil) {
      if (JreLoadStatic(RetrofitPlatform, HAS_RX_JAVA)) {
        JreStrongAssignAndConsume(&this$0_->rxSupport_, new_RetrofitRxSupport_initWithJavaUtilConcurrentExecutor_withRetrofitErrorHandler_withRetrofitRequestInterceptor_(this$0_->httpExecutor_, this$0_->errorHandler_, this$0_->requestInterceptor_));
      }
      else {
        @throw create_JavaLangIllegalStateException_initWithNSString_(@"Observable method found but no RxJava on classpath.");
      }
    }
    return [this$0_->rxSupport_ createRequestObservableWithRetrofitRxSupport_Invoker:create_RetrofitRestAdapter_RestHandler_1_initWithRetrofitRestAdapter_RestHandler_withRetrofitRestMethodInfo_withNSObjectArray_(self, methodInfo, args)];
  }
  RetrofitRequestInterceptorTape *interceptorTape = create_RetrofitRequestInterceptorTape_init();
  [((id<RetrofitRequestInterceptor>) nil_chk(this$0_->requestInterceptor_)) interceptWithRetrofitRequestInterceptor_RequestFacade:interceptorTape];
  id<RetrofitCallback> callback = (id<RetrofitCallback>) cast_check(IOSObjectArray_Get(args, ((IOSObjectArray *) nil_chk(args))->size_ - 1), RetrofitCallback_class_());
  [this$0_->httpExecutor_ executeWithJavaLangRunnable:create_RetrofitRestAdapter_RestHandler_2_initWithRetrofitRestAdapter_RestHandler_withRetrofitRequestInterceptorTape_withRetrofitRestMethodInfo_withNSObjectArray_withRetrofitCallback_withJavaUtilConcurrentExecutor_withRetrofitErrorHandler_(self, interceptorTape, methodInfo, args, callback, this$0_->callbackExecutor_, this$0_->errorHandler_)];
  return nil;
}

- (id)invokeRequestWithRetrofitRequestInterceptor:(id<RetrofitRequestInterceptor>)requestInterceptor
                       withRetrofitRestMethodInfo:(RetrofitRestMethodInfo *)methodInfo
                                withNSObjectArray:(IOSObjectArray *)args {
  return RetrofitRestAdapter_RestHandler_invokeRequestWithRetrofitRequestInterceptor_withRetrofitRestMethodInfo_withNSObjectArray_(self, requestInterceptor, methodInfo, args);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(methodDetailsCache_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofitRestAdapter:withJavaUtilMap:);
  methods[1].selector = @selector(invokeWithId:withJavaLangReflectMethod:withNSObjectArray:);
  methods[2].selector = @selector(invokeRequestWithRetrofitRequestInterceptor:withRetrofitRestMethodInfo:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRetrofitRestAdapter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "methodDetailsCache_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/reflect/Method;Lretrofit/RestMethodInfo;>;)V", "invoke", "LNSObject;LJavaLangReflectMethod;[LNSObject;", "LNSException;", "invokeRequest", "LRetrofitRequestInterceptor;LRetrofitRestMethodInfo;[LNSObject;", "Ljava/util/Map<Ljava/lang/reflect/Method;Lretrofit/RestMethodInfo;>;", "LRetrofitRestAdapter;" };
  static const J2ObjcClassInfo _RetrofitRestAdapter_RestHandler = { "RestHandler", "retrofit", ptrTable, methods, fields, 7, 0x2, 3, 2, 8, -1, -1, -1, -1 };
  return &_RetrofitRestAdapter_RestHandler;
}

@end

void RetrofitRestAdapter_RestHandler_initWithRetrofitRestAdapter_withJavaUtilMap_(RetrofitRestAdapter_RestHandler *self, RetrofitRestAdapter *outer$, id<JavaUtilMap> methodDetailsCache) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->methodDetailsCache_, methodDetailsCache);
}

RetrofitRestAdapter_RestHandler *new_RetrofitRestAdapter_RestHandler_initWithRetrofitRestAdapter_withJavaUtilMap_(RetrofitRestAdapter *outer$, id<JavaUtilMap> methodDetailsCache) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapter_RestHandler, initWithRetrofitRestAdapter_withJavaUtilMap_, outer$, methodDetailsCache)
}

RetrofitRestAdapter_RestHandler *create_RetrofitRestAdapter_RestHandler_initWithRetrofitRestAdapter_withJavaUtilMap_(RetrofitRestAdapter *outer$, id<JavaUtilMap> methodDetailsCache) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapter_RestHandler, initWithRetrofitRestAdapter_withJavaUtilMap_, outer$, methodDetailsCache)
}

id RetrofitRestAdapter_RestHandler_invokeRequestWithRetrofitRequestInterceptor_withRetrofitRestMethodInfo_withNSObjectArray_(RetrofitRestAdapter_RestHandler *self, id<RetrofitRequestInterceptor> requestInterceptor, RetrofitRestMethodInfo *methodInfo, IOSObjectArray *args) {
  NSString *url = nil;
  @try {
    [((RetrofitRestMethodInfo *) nil_chk(methodInfo)) init__];
    NSString *serverUrl = [((id<RetrofitEndpoint>) nil_chk(self->this$0_->server_)) getUrl];
    RetrofitRequestBuilder *requestBuilder = create_RetrofitRequestBuilder_initWithNSString_withRetrofitRestMethodInfo_withRetrofitConverterConverter_(serverUrl, methodInfo, self->this$0_->converter_);
    [requestBuilder setArgumentsWithNSObjectArray:args];
    [((id<RetrofitRequestInterceptor>) nil_chk(requestInterceptor)) interceptWithRetrofitRequestInterceptor_RequestFacade:requestBuilder];
    RetrofitClientRequest *request = [requestBuilder build];
    url = [((RetrofitClientRequest *) nil_chk(request)) getUrl];
    if (!methodInfo->isSynchronous_) {
      jint substrEnd = [((NSString *) nil_chk(url)) java_indexOfString:@"?" fromIndex:((jint) [((NSString *) nil_chk(serverUrl)) length])];
      if (substrEnd == -1) {
        substrEnd = ((jint) [url length]);
      }
      [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) setNameWithNSString:JreStrcat("$$", RetrofitRestAdapter_THREAD_PREFIX, [url java_substring:((jint) [serverUrl length]) endIndex:substrEnd])];
    }
    if ([((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadVolatileId(&self->this$0_->logLevel_))) log]) {
      request = [self->this$0_ logAndReplaceRequestWithNSString:@"HTTP" withRetrofitClientRequest:request withNSObjectArray:args];
    }
    id profilerObject = nil;
    if (self->this$0_->profiler_ != nil) {
      profilerObject = [self->this$0_->profiler_ beforeCall];
    }
    jlong start = JavaLangSystem_nanoTime();
    RetrofitClientResponse *response = [((id<RetrofitClientClient>) nil_chk([((id<RetrofitClientClient_Provider>) nil_chk(self->this$0_->clientProvider_)) get])) executeWithRetrofitClientRequest:request];
    jlong elapsedTime = [((JavaUtilConcurrentTimeUnit *) nil_chk(JreLoadEnum(JavaUtilConcurrentTimeUnit, NANOSECONDS))) toMillisWithLong:JavaLangSystem_nanoTime() - start];
    jint statusCode = [((RetrofitClientResponse *) nil_chk(response)) getStatus];
    if (self->this$0_->profiler_ != nil) {
      RetrofitProfiler_RequestInformation *requestInfo = RetrofitRestAdapter_getRequestInfoWithNSString_withRetrofitRestMethodInfo_withRetrofitClientRequest_(serverUrl, methodInfo, request);
      [self->this$0_->profiler_ afterCallWithRetrofitProfiler_RequestInformation:requestInfo withLong:elapsedTime withInt:statusCode withId:profilerObject];
    }
    if ([((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadVolatileId(&self->this$0_->logLevel_))) log]) {
      response = RetrofitRestAdapter_logAndReplaceResponseWithNSString_withRetrofitClientResponse_withLong_(self->this$0_, url, response, elapsedTime);
    }
    id<JavaLangReflectType> type = methodInfo->responseObjectType_;
    if (statusCode >= 200 && statusCode < 300) {
      if ([((id<JavaLangReflectType>) nil_chk(type)) isEqual:RetrofitClientResponse_class_()]) {
        if (!methodInfo->isStreaming_) {
          response = RetrofitUtils_readBodyToBytesIfNecessaryWithRetrofitClientResponse_(response);
        }
        if (methodInfo->isSynchronous_) {
          return response;
        }
        return create_RetrofitResponseWrapper_initWithRetrofitClientResponse_withId_(response, response);
      }
      id<RetrofitMimeTypedInput> body = [((RetrofitClientResponse *) nil_chk(response)) getBody];
      if (body == nil) {
        if (methodInfo->isSynchronous_) {
          return nil;
        }
        return create_RetrofitResponseWrapper_initWithRetrofitClientResponse_withId_(response, nil);
      }
      RetrofitExceptionCatchingTypedInput *wrapped = create_RetrofitExceptionCatchingTypedInput_initWithRetrofitMimeTypedInput_(body);
      @try {
        id convert = [((id<RetrofitConverterConverter>) nil_chk(self->this$0_->converter_)) fromBodyWithRetrofitMimeTypedInput:wrapped withJavaLangReflectType:type];
        RetrofitRestAdapter_logResponseBodyWithRetrofitMimeTypedInput_withId_(self->this$0_, body, convert);
        if (methodInfo->isSynchronous_) {
          return convert;
        }
        return create_RetrofitResponseWrapper_initWithRetrofitClientResponse_withId_(response, convert);
      }
      @catch (RetrofitConverterConversionException *e) {
        if ([wrapped threwException]) {
          @throw [wrapped getThrownException];
        }
        response = RetrofitUtils_replaceResponseBodyWithRetrofitClientResponse_withRetrofitMimeTypedInput_(response, nil);
        @throw RetrofitRetrofitError_conversionErrorWithNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_withRetrofitConverterConversionException_(url, response, self->this$0_->converter_, type, e);
      }
    }
    response = RetrofitUtils_readBodyToBytesIfNecessaryWithRetrofitClientResponse_(response);
    @throw RetrofitRetrofitError_httpErrorWithNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_(url, response, self->this$0_->converter_, type);
  }
  @catch (RetrofitRetrofitError *e) {
    @throw e;
  }
  @catch (JavaIoIOException *e) {
    if ([((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadVolatileId(&self->this$0_->logLevel_))) log]) {
      [self->this$0_ logExceptionWithNSException:e withNSString:url];
    }
    @throw RetrofitRetrofitError_networkErrorWithNSString_withJavaIoIOException_(url, e);
  }
  @catch (NSException *t) {
    if ([((RetrofitRestAdapter_LogLevel *) nil_chk(JreLoadVolatileId(&self->this$0_->logLevel_))) log]) {
      [self->this$0_ logExceptionWithNSException:t withNSString:url];
    }
    @throw RetrofitRetrofitError_unexpectedErrorWithNSString_withNSException_(url, t);
  }
  @finally {
    if (!methodInfo->isSynchronous_) {
      [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) setNameWithNSString:RetrofitRestAdapter_IDLE_THREAD_NAME];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitRestAdapter_RestHandler)

@implementation RetrofitRestAdapter_RestHandler_1

- (instancetype)initWithRetrofitRestAdapter_RestHandler:(RetrofitRestAdapter_RestHandler *)outer$
                             withRetrofitRestMethodInfo:(RetrofitRestMethodInfo *)capture$0
                                      withNSObjectArray:(IOSObjectArray *)capture$1 {
  RetrofitRestAdapter_RestHandler_1_initWithRetrofitRestAdapter_RestHandler_withRetrofitRestMethodInfo_withNSObjectArray_(self, outer$, capture$0, capture$1);
  return self;
}

- (RetrofitResponseWrapper *)invokeWithRetrofitRequestInterceptor:(id<RetrofitRequestInterceptor>)requestInterceptor {
  return (RetrofitResponseWrapper *) cast_chk(RetrofitRestAdapter_RestHandler_invokeRequestWithRetrofitRequestInterceptor_withRetrofitRestMethodInfo_withNSObjectArray_(this$0_, requestInterceptor, val$methodInfo_, val$args_), [RetrofitResponseWrapper class]);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$methodInfo_);
  RELEASE_(val$args_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitResponseWrapper;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofitRestAdapter_RestHandler:withRetrofitRestMethodInfo:withNSObjectArray:);
  methods[1].selector = @selector(invokeWithRetrofitRequestInterceptor:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRetrofitRestAdapter_RestHandler;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$methodInfo_", "LRetrofitRestMethodInfo;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$args_", "[LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "invoke", "LRetrofitRequestInterceptor;", "LRetrofitRestAdapter_RestHandler;", "invokeWithId:withJavaLangReflectMethod:withNSObjectArray:" };
  static const J2ObjcClassInfo _RetrofitRestAdapter_RestHandler_1 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 3, 2, -1, 3, -1, -1 };
  return &_RetrofitRestAdapter_RestHandler_1;
}

@end

void RetrofitRestAdapter_RestHandler_1_initWithRetrofitRestAdapter_RestHandler_withRetrofitRestMethodInfo_withNSObjectArray_(RetrofitRestAdapter_RestHandler_1 *self, RetrofitRestAdapter_RestHandler *outer$, RetrofitRestMethodInfo *capture$0, IOSObjectArray *capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$methodInfo_, capture$0);
  JreStrongAssign(&self->val$args_, capture$1);
  NSObject_init(self);
}

RetrofitRestAdapter_RestHandler_1 *new_RetrofitRestAdapter_RestHandler_1_initWithRetrofitRestAdapter_RestHandler_withRetrofitRestMethodInfo_withNSObjectArray_(RetrofitRestAdapter_RestHandler *outer$, RetrofitRestMethodInfo *capture$0, IOSObjectArray *capture$1) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapter_RestHandler_1, initWithRetrofitRestAdapter_RestHandler_withRetrofitRestMethodInfo_withNSObjectArray_, outer$, capture$0, capture$1)
}

RetrofitRestAdapter_RestHandler_1 *create_RetrofitRestAdapter_RestHandler_1_initWithRetrofitRestAdapter_RestHandler_withRetrofitRestMethodInfo_withNSObjectArray_(RetrofitRestAdapter_RestHandler *outer$, RetrofitRestMethodInfo *capture$0, IOSObjectArray *capture$1) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapter_RestHandler_1, initWithRetrofitRestAdapter_RestHandler_withRetrofitRestMethodInfo_withNSObjectArray_, outer$, capture$0, capture$1)
}

@implementation RetrofitRestAdapter_RestHandler_2

- (instancetype)initWithRetrofitRestAdapter_RestHandler:(RetrofitRestAdapter_RestHandler *)outer$
                     withRetrofitRequestInterceptorTape:(RetrofitRequestInterceptorTape *)capture$0
                             withRetrofitRestMethodInfo:(RetrofitRestMethodInfo *)capture$1
                                      withNSObjectArray:(IOSObjectArray *)capture$2
                                   withRetrofitCallback:(id<RetrofitCallback>)callback
                         withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)callbackExecutor
                               withRetrofitErrorHandler:(id<RetrofitErrorHandler>)errorHandler {
  RetrofitRestAdapter_RestHandler_2_initWithRetrofitRestAdapter_RestHandler_withRetrofitRequestInterceptorTape_withRetrofitRestMethodInfo_withNSObjectArray_withRetrofitCallback_withJavaUtilConcurrentExecutor_withRetrofitErrorHandler_(self, outer$, capture$0, capture$1, capture$2, callback, callbackExecutor, errorHandler);
  return self;
}

- (RetrofitResponseWrapper *)obtainResponse {
  return (RetrofitResponseWrapper *) cast_chk(RetrofitRestAdapter_RestHandler_invokeRequestWithRetrofitRequestInterceptor_withRetrofitRestMethodInfo_withNSObjectArray_(this$0_, val$interceptorTape_, val$methodInfo_, val$args_), [RetrofitResponseWrapper class]);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$interceptorTape_);
  RELEASE_(val$methodInfo_);
  RELEASE_(val$args_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LRetrofitResponseWrapper;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofitRestAdapter_RestHandler:withRetrofitRequestInterceptorTape:withRetrofitRestMethodInfo:withNSObjectArray:withRetrofitCallback:withJavaUtilConcurrentExecutor:withRetrofitErrorHandler:);
  methods[1].selector = @selector(obtainResponse);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LRetrofitRestAdapter_RestHandler;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$interceptorTape_", "LRetrofitRequestInterceptorTape;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$methodInfo_", "LRetrofitRestMethodInfo;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$args_", "[LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRetrofitCallback;LJavaUtilConcurrentExecutor;LRetrofitErrorHandler;", "LRetrofitRestAdapter_RestHandler;", "invokeWithId:withJavaLangReflectMethod:withNSObjectArray:" };
  static const J2ObjcClassInfo _RetrofitRestAdapter_RestHandler_2 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 4, 1, -1, 2, -1, -1 };
  return &_RetrofitRestAdapter_RestHandler_2;
}

@end

void RetrofitRestAdapter_RestHandler_2_initWithRetrofitRestAdapter_RestHandler_withRetrofitRequestInterceptorTape_withRetrofitRestMethodInfo_withNSObjectArray_withRetrofitCallback_withJavaUtilConcurrentExecutor_withRetrofitErrorHandler_(RetrofitRestAdapter_RestHandler_2 *self, RetrofitRestAdapter_RestHandler *outer$, RetrofitRequestInterceptorTape *capture$0, RetrofitRestMethodInfo *capture$1, IOSObjectArray *capture$2, id<RetrofitCallback> callback, id<JavaUtilConcurrentExecutor> callbackExecutor, id<RetrofitErrorHandler> errorHandler) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$interceptorTape_, capture$0);
  JreStrongAssign(&self->val$methodInfo_, capture$1);
  JreStrongAssign(&self->val$args_, capture$2);
  RetrofitCallbackRunnable_initWithRetrofitCallback_withJavaUtilConcurrentExecutor_withRetrofitErrorHandler_(self, callback, callbackExecutor, errorHandler);
}

RetrofitRestAdapter_RestHandler_2 *new_RetrofitRestAdapter_RestHandler_2_initWithRetrofitRestAdapter_RestHandler_withRetrofitRequestInterceptorTape_withRetrofitRestMethodInfo_withNSObjectArray_withRetrofitCallback_withJavaUtilConcurrentExecutor_withRetrofitErrorHandler_(RetrofitRestAdapter_RestHandler *outer$, RetrofitRequestInterceptorTape *capture$0, RetrofitRestMethodInfo *capture$1, IOSObjectArray *capture$2, id<RetrofitCallback> callback, id<JavaUtilConcurrentExecutor> callbackExecutor, id<RetrofitErrorHandler> errorHandler) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapter_RestHandler_2, initWithRetrofitRestAdapter_RestHandler_withRetrofitRequestInterceptorTape_withRetrofitRestMethodInfo_withNSObjectArray_withRetrofitCallback_withJavaUtilConcurrentExecutor_withRetrofitErrorHandler_, outer$, capture$0, capture$1, capture$2, callback, callbackExecutor, errorHandler)
}

RetrofitRestAdapter_RestHandler_2 *create_RetrofitRestAdapter_RestHandler_2_initWithRetrofitRestAdapter_RestHandler_withRetrofitRequestInterceptorTape_withRetrofitRestMethodInfo_withNSObjectArray_withRetrofitCallback_withJavaUtilConcurrentExecutor_withRetrofitErrorHandler_(RetrofitRestAdapter_RestHandler *outer$, RetrofitRequestInterceptorTape *capture$0, RetrofitRestMethodInfo *capture$1, IOSObjectArray *capture$2, id<RetrofitCallback> callback, id<JavaUtilConcurrentExecutor> callbackExecutor, id<RetrofitErrorHandler> errorHandler) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapter_RestHandler_2, initWithRetrofitRestAdapter_RestHandler_withRetrofitRequestInterceptorTape_withRetrofitRestMethodInfo_withNSObjectArray_withRetrofitCallback_withJavaUtilConcurrentExecutor_withRetrofitErrorHandler_, outer$, capture$0, capture$1, capture$2, callback, callbackExecutor, errorHandler)
}

@implementation RetrofitRestAdapter_Builder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitRestAdapter_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (RetrofitRestAdapter_Builder *)setEndpointWithNSString:(NSString *)endpoint {
  if (endpoint == nil || ((jint) [((NSString *) nil_chk([endpoint java_trim])) length]) == 0) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Endpoint may not be blank.");
  }
  JreStrongAssign(&self->endpoint_, RetrofitEndpoints_newFixedEndpointWithNSString_(endpoint));
  return self;
}

- (RetrofitRestAdapter_Builder *)setEndpointWithRetrofitEndpoint:(id<RetrofitEndpoint>)endpoint {
  if (endpoint == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Endpoint may not be null.");
  }
  JreStrongAssign(&self->endpoint_, endpoint);
  return self;
}

- (RetrofitRestAdapter_Builder *)setClientWithRetrofitClientClient:(id<RetrofitClientClient>)client {
  if (client == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Client may not be null.");
  }
  return [self setClientWithRetrofitClientClient_Provider:create_RetrofitRestAdapter_Builder_1_initWithRetrofitClientClient_(client)];
}

- (RetrofitRestAdapter_Builder *)setClientWithRetrofitClientClient_Provider:(id<RetrofitClientClient_Provider>)clientProvider {
  if (clientProvider == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Client provider may not be null.");
  }
  JreStrongAssign(&self->clientProvider_, clientProvider);
  return self;
}

- (RetrofitRestAdapter_Builder *)setExecutorsWithJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)httpExecutor
                                             withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)callbackExecutor {
  if (httpExecutor == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"HTTP executor may not be null.");
  }
  if (callbackExecutor == nil) {
    callbackExecutor = create_RetrofitUtils_SynchronousExecutor_init();
  }
  JreStrongAssign(&self->httpExecutor_, httpExecutor);
  JreStrongAssign(&self->callbackExecutor_, callbackExecutor);
  return self;
}

- (RetrofitRestAdapter_Builder *)setRequestInterceptorWithRetrofitRequestInterceptor:(id<RetrofitRequestInterceptor>)requestInterceptor {
  if (requestInterceptor == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Request interceptor may not be null.");
  }
  JreStrongAssign(&self->requestInterceptor_, requestInterceptor);
  return self;
}

- (RetrofitRestAdapter_Builder *)setConverterWithRetrofitConverterConverter:(id<RetrofitConverterConverter>)converter {
  if (converter == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Converter may not be null.");
  }
  JreStrongAssign(&self->converter_, converter);
  return self;
}

- (RetrofitRestAdapter_Builder *)setProfilerWithRetrofitProfiler:(id<RetrofitProfiler>)profiler {
  if (profiler == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Profiler may not be null.");
  }
  JreStrongAssign(&self->profiler_, profiler);
  return self;
}

- (RetrofitRestAdapter_Builder *)setErrorHandlerWithRetrofitErrorHandler:(id<RetrofitErrorHandler>)errorHandler {
  if (errorHandler == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Error handler may not be null.");
  }
  JreStrongAssign(&self->errorHandler_, errorHandler);
  return self;
}

- (RetrofitRestAdapter_Builder *)setLogWithRetrofitRestAdapter_Log:(id<RetrofitRestAdapter_Log>)log {
  if (log == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Log may not be null.");
  }
  JreStrongAssign(&self->log_, log);
  return self;
}

- (RetrofitRestAdapter_Builder *)setLogLevelWithRetrofitRestAdapter_LogLevel:(RetrofitRestAdapter_LogLevel *)logLevel {
  if (logLevel == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Log level may not be null.");
  }
  JreStrongAssign(&self->logLevel_, logLevel);
  return self;
}

- (RetrofitRestAdapter *)build {
  if (endpoint_ == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Endpoint may not be null.");
  }
  RetrofitRestAdapter_Builder_ensureSaneDefaults(self);
  return create_RetrofitRestAdapter_initWithRetrofitEndpoint_withRetrofitClientClient_Provider_withJavaUtilConcurrentExecutor_withJavaUtilConcurrentExecutor_withRetrofitRequestInterceptor_withRetrofitConverterConverter_withRetrofitProfiler_withRetrofitErrorHandler_withRetrofitRestAdapter_Log_withRetrofitRestAdapter_LogLevel_(endpoint_, clientProvider_, httpExecutor_, callbackExecutor_, requestInterceptor_, converter_, profiler_, errorHandler_, log_, logLevel_);
}

- (void)ensureSaneDefaults {
  RetrofitRestAdapter_Builder_ensureSaneDefaults(self);
}

- (void)dealloc {
  RELEASE_(endpoint_);
  RELEASE_(clientProvider_);
  RELEASE_(httpExecutor_);
  RELEASE_(callbackExecutor_);
  RELEASE_(requestInterceptor_);
  RELEASE_(converter_);
  RELEASE_(profiler_);
  RELEASE_(errorHandler_);
  RELEASE_(log_);
  RELEASE_(logLevel_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_Builder;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_Builder;", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_Builder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_Builder;", 0x1, 3, 5, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_Builder;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_Builder;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_Builder;", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_Builder;", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_Builder;", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_Builder;", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter_Builder;", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "LRetrofitRestAdapter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setEndpointWithNSString:);
  methods[2].selector = @selector(setEndpointWithRetrofitEndpoint:);
  methods[3].selector = @selector(setClientWithRetrofitClientClient:);
  methods[4].selector = @selector(setClientWithRetrofitClientClient_Provider:);
  methods[5].selector = @selector(setExecutorsWithJavaUtilConcurrentExecutor:withJavaUtilConcurrentExecutor:);
  methods[6].selector = @selector(setRequestInterceptorWithRetrofitRequestInterceptor:);
  methods[7].selector = @selector(setConverterWithRetrofitConverterConverter:);
  methods[8].selector = @selector(setProfilerWithRetrofitProfiler:);
  methods[9].selector = @selector(setErrorHandlerWithRetrofitErrorHandler:);
  methods[10].selector = @selector(setLogWithRetrofitRestAdapter_Log:);
  methods[11].selector = @selector(setLogLevelWithRetrofitRestAdapter_LogLevel:);
  methods[12].selector = @selector(build);
  methods[13].selector = @selector(ensureSaneDefaults);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "endpoint_", "LRetrofitEndpoint;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "clientProvider_", "LRetrofitClientClient_Provider;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "httpExecutor_", "LJavaUtilConcurrentExecutor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "callbackExecutor_", "LJavaUtilConcurrentExecutor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "requestInterceptor_", "LRetrofitRequestInterceptor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "converter_", "LRetrofitConverterConverter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "profiler_", "LRetrofitProfiler;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "errorHandler_", "LRetrofitErrorHandler;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "log_", "LRetrofitRestAdapter_Log;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "logLevel_", "LRetrofitRestAdapter_LogLevel;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setEndpoint", "LNSString;", "LRetrofitEndpoint;", "setClient", "LRetrofitClientClient;", "LRetrofitClientClient_Provider;", "setExecutors", "LJavaUtilConcurrentExecutor;LJavaUtilConcurrentExecutor;", "setRequestInterceptor", "LRetrofitRequestInterceptor;", "setConverter", "LRetrofitConverterConverter;", "setProfiler", "LRetrofitProfiler;", "setErrorHandler", "LRetrofitErrorHandler;", "setLog", "LRetrofitRestAdapter_Log;", "setLogLevel", "LRetrofitRestAdapter_LogLevel;", "LRetrofitRestAdapter;" };
  static const J2ObjcClassInfo _RetrofitRestAdapter_Builder = { "Builder", "retrofit", ptrTable, methods, fields, 7, 0x9, 14, 10, 20, -1, -1, -1, -1 };
  return &_RetrofitRestAdapter_Builder;
}

@end

void RetrofitRestAdapter_Builder_init(RetrofitRestAdapter_Builder *self) {
  NSObject_init(self);
  JreStrongAssign(&self->logLevel_, JreLoadEnum(RetrofitRestAdapter_LogLevel, NONE));
}

RetrofitRestAdapter_Builder *new_RetrofitRestAdapter_Builder_init() {
  J2OBJC_NEW_IMPL(RetrofitRestAdapter_Builder, init)
}

RetrofitRestAdapter_Builder *create_RetrofitRestAdapter_Builder_init() {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapter_Builder, init)
}

void RetrofitRestAdapter_Builder_ensureSaneDefaults(RetrofitRestAdapter_Builder *self) {
  if (self->converter_ == nil) {
    JreStrongAssign(&self->converter_, [((RetrofitPlatform *) nil_chk(RetrofitPlatform_get())) defaultConverter]);
  }
  if (self->clientProvider_ == nil) {
    JreStrongAssign(&self->clientProvider_, [((RetrofitPlatform *) nil_chk(RetrofitPlatform_get())) defaultClient]);
  }
  if (self->httpExecutor_ == nil) {
    JreStrongAssign(&self->httpExecutor_, [((RetrofitPlatform *) nil_chk(RetrofitPlatform_get())) defaultHttpExecutor]);
  }
  if (self->callbackExecutor_ == nil) {
    JreStrongAssign(&self->callbackExecutor_, [((RetrofitPlatform *) nil_chk(RetrofitPlatform_get())) defaultCallbackExecutor]);
  }
  if (self->errorHandler_ == nil) {
    JreStrongAssign(&self->errorHandler_, JreLoadStatic(RetrofitErrorHandler, DEFAULT));
  }
  if (self->log_ == nil) {
    JreStrongAssign(&self->log_, [((RetrofitPlatform *) nil_chk(RetrofitPlatform_get())) defaultLog]);
  }
  if (self->requestInterceptor_ == nil) {
    JreStrongAssign(&self->requestInterceptor_, JreLoadStatic(RetrofitRequestInterceptor, NONE));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitRestAdapter_Builder)

@implementation RetrofitRestAdapter_Builder_1

- (instancetype)initWithRetrofitClientClient:(id<RetrofitClientClient>)capture$0 {
  RetrofitRestAdapter_Builder_1_initWithRetrofitClientClient_(self, capture$0);
  return self;
}

- (id<RetrofitClientClient>)get {
  return val$client_;
}

- (void)dealloc {
  RELEASE_(val$client_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofitClientClient;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofitClientClient:);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$client_", "LRetrofitClientClient;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRetrofitRestAdapter_Builder;", "setClientWithRetrofitClientClient:" };
  static const J2ObjcClassInfo _RetrofitRestAdapter_Builder_1 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_RetrofitRestAdapter_Builder_1;
}

@end

void RetrofitRestAdapter_Builder_1_initWithRetrofitClientClient_(RetrofitRestAdapter_Builder_1 *self, id<RetrofitClientClient> capture$0) {
  JreStrongAssign(&self->val$client_, capture$0);
  NSObject_init(self);
}

RetrofitRestAdapter_Builder_1 *new_RetrofitRestAdapter_Builder_1_initWithRetrofitClientClient_(id<RetrofitClientClient> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapter_Builder_1, initWithRetrofitClientClient_, capture$0)
}

RetrofitRestAdapter_Builder_1 *create_RetrofitRestAdapter_Builder_1_initWithRetrofitClientClient_(id<RetrofitClientClient> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapter_Builder_1, initWithRetrofitClientClient_, capture$0)
}
