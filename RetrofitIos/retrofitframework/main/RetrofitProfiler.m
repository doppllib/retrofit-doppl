//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/main/java/retrofit/Profiler.java
//

#include "J2ObjC_source.h"
#include "RetrofitProfiler.h"

@interface RetrofitProfiler : NSObject

@end

@interface RetrofitProfiler_RequestInformation () {
 @public
  NSString *method_;
  NSString *baseUrl_;
  NSString *relativePath_;
  jlong contentLength_;
  NSString *contentType_;
}

@end

J2OBJC_FIELD_SETTER(RetrofitProfiler_RequestInformation, method_, NSString *)
J2OBJC_FIELD_SETTER(RetrofitProfiler_RequestInformation, baseUrl_, NSString *)
J2OBJC_FIELD_SETTER(RetrofitProfiler_RequestInformation, relativePath_, NSString *)
J2OBJC_FIELD_SETTER(RetrofitProfiler_RequestInformation, contentType_, NSString *)

@implementation RetrofitProfiler

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x401, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x401, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(beforeCall);
  methods[1].selector = @selector(afterCallWithRetrofitProfiler_RequestInformation:withLong:withInt:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "afterCall", "LRetrofitProfiler_RequestInformation;JILNSObject;", "(Lretrofit/Profiler$RequestInformation;JITT;)V", "LRetrofitProfiler_RequestInformation;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _RetrofitProfiler = { "Profiler", "retrofit", ptrTable, methods, NULL, 7, 0x609, 2, 0, -1, 4, -1, 5, -1 };
  return &_RetrofitProfiler;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RetrofitProfiler)

@implementation RetrofitProfiler_RequestInformation

- (instancetype)initWithNSString:(NSString *)method
                    withNSString:(NSString *)baseUrl
                    withNSString:(NSString *)relativePath
                        withLong:(jlong)contentLength
                    withNSString:(NSString *)contentType {
  RetrofitProfiler_RequestInformation_initWithNSString_withNSString_withNSString_withLong_withNSString_(self, method, baseUrl, relativePath, contentLength, contentType);
  return self;
}

- (NSString *)getMethod {
  return method_;
}

- (NSString *)getBaseUrl {
  return baseUrl_;
}

- (NSString *)getRelativePath {
  return relativePath_;
}

- (jlong)getContentLength {
  return contentLength_;
}

- (NSString *)getContentType {
  return contentType_;
}

- (void)dealloc {
  RELEASE_(method_);
  RELEASE_(baseUrl_);
  RELEASE_(relativePath_);
  RELEASE_(contentType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:withNSString:withLong:withNSString:);
  methods[1].selector = @selector(getMethod);
  methods[2].selector = @selector(getBaseUrl);
  methods[3].selector = @selector(getRelativePath);
  methods[4].selector = @selector(getContentLength);
  methods[5].selector = @selector(getContentType);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "method_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "baseUrl_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "relativePath_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "contentLength_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "contentType_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LNSString;JLNSString;", "LRetrofitProfiler;" };
  static const J2ObjcClassInfo _RetrofitProfiler_RequestInformation = { "RequestInformation", "retrofit", ptrTable, methods, fields, 7, 0x19, 6, 5, 1, -1, -1, -1, -1 };
  return &_RetrofitProfiler_RequestInformation;
}

@end

void RetrofitProfiler_RequestInformation_initWithNSString_withNSString_withNSString_withLong_withNSString_(RetrofitProfiler_RequestInformation *self, NSString *method, NSString *baseUrl, NSString *relativePath, jlong contentLength, NSString *contentType) {
  NSObject_init(self);
  JreStrongAssign(&self->method_, method);
  JreStrongAssign(&self->baseUrl_, baseUrl);
  JreStrongAssign(&self->relativePath_, relativePath);
  self->contentLength_ = contentLength;
  JreStrongAssign(&self->contentType_, contentType);
}

RetrofitProfiler_RequestInformation *new_RetrofitProfiler_RequestInformation_initWithNSString_withNSString_withNSString_withLong_withNSString_(NSString *method, NSString *baseUrl, NSString *relativePath, jlong contentLength, NSString *contentType) {
  J2OBJC_NEW_IMPL(RetrofitProfiler_RequestInformation, initWithNSString_withNSString_withNSString_withLong_withNSString_, method, baseUrl, relativePath, contentLength, contentType)
}

RetrofitProfiler_RequestInformation *create_RetrofitProfiler_RequestInformation_initWithNSString_withNSString_withNSString_withLong_withNSString_(NSString *method, NSString *baseUrl, NSString *relativePath, jlong contentLength, NSString *contentType) {
  J2OBJC_CREATE_IMPL(RetrofitProfiler_RequestInformation, initWithNSString_withNSString_withNSString_withLong_withNSString_, method, baseUrl, relativePath, contentLength, contentType)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitProfiler_RequestInformation)
