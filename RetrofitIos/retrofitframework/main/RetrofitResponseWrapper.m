//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/main/java/retrofit/ResponseWrapper.java
//

#include "J2ObjC_source.h"
#include "RetrofitClientResponse.h"
#include "RetrofitResponseWrapper.h"

@implementation RetrofitResponseWrapper

- (instancetype)initWithRetrofitClientResponse:(RetrofitClientResponse *)response
                                        withId:(id)responseBody {
  RetrofitResponseWrapper_initWithRetrofitClientResponse_withId_(self, response, responseBody);
  return self;
}

- (void)dealloc {
  RELEASE_(response_);
  RELEASE_(responseBody_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithRetrofitClientResponse:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "response_", "LRetrofitClientResponse;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "responseBody_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LRetrofitClientResponse;LNSObject;" };
  static const J2ObjcClassInfo _RetrofitResponseWrapper = { "ResponseWrapper", "retrofit", ptrTable, methods, fields, 7, 0x10, 1, 2, -1, -1, -1, -1, -1 };
  return &_RetrofitResponseWrapper;
}

@end

void RetrofitResponseWrapper_initWithRetrofitClientResponse_withId_(RetrofitResponseWrapper *self, RetrofitClientResponse *response, id responseBody) {
  NSObject_init(self);
  JreStrongAssign(&self->response_, response);
  JreStrongAssign(&self->responseBody_, responseBody);
}

RetrofitResponseWrapper *new_RetrofitResponseWrapper_initWithRetrofitClientResponse_withId_(RetrofitClientResponse *response, id responseBody) {
  J2OBJC_NEW_IMPL(RetrofitResponseWrapper, initWithRetrofitClientResponse_withId_, response, responseBody)
}

RetrofitResponseWrapper *create_RetrofitResponseWrapper_initWithRetrofitClientResponse_withId_(RetrofitClientResponse *response, id responseBody) {
  J2OBJC_CREATE_IMPL(RetrofitResponseWrapper, initWithRetrofitClientResponse_withId_, response, responseBody)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitResponseWrapper)
