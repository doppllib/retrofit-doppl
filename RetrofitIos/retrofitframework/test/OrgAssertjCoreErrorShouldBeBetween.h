//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/error/ShouldBeBetween.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldBeBetween")
#ifdef RESTRICT_OrgAssertjCoreErrorShouldBeBetween
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldBeBetween 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldBeBetween 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorShouldBeBetween

#if !defined (OrgAssertjCoreErrorShouldBeBetween_) && (INCLUDE_ALL_OrgAssertjCoreErrorShouldBeBetween || defined(INCLUDE_OrgAssertjCoreErrorShouldBeBetween))
#define OrgAssertjCoreErrorShouldBeBetween_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@class JavaUtilDate;
@protocol JavaLangComparable;
@protocol OrgAssertjCoreErrorErrorMessageFactory;
@protocol OrgAssertjCoreInternalComparisonStrategy;

@interface OrgAssertjCoreErrorShouldBeBetween : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeBetweenWithJavaUtilDate:(JavaUtilDate *)actual
                                                             withJavaUtilDate:(JavaUtilDate *)start
                                                             withJavaUtilDate:(JavaUtilDate *)end
                                                                  withBoolean:(jboolean)inclusiveStart
                                                                  withBoolean:(jboolean)inclusiveEnd;

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeBetweenWithJavaUtilDate:(JavaUtilDate *)actual
                                                             withJavaUtilDate:(JavaUtilDate *)start
                                                             withJavaUtilDate:(JavaUtilDate *)end
                                                                  withBoolean:(jboolean)inclusiveStart
                                                                  withBoolean:(jboolean)inclusiveEnd
                                 withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeBetweenWithJavaLangComparable:(id<JavaLangComparable>)actual
                                                             withJavaLangComparable:(id<JavaLangComparable>)start
                                                             withJavaLangComparable:(id<JavaLangComparable>)end
                                                                        withBoolean:(jboolean)inclusiveStart
                                                                        withBoolean:(jboolean)inclusiveEnd;

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeBetweenWithJavaLangComparable:(id<JavaLangComparable>)actual
                                                             withJavaLangComparable:(id<JavaLangComparable>)start
                                                             withJavaLangComparable:(id<JavaLangComparable>)end
                                                                        withBoolean:(jboolean)inclusiveStart
                                                                        withBoolean:(jboolean)inclusiveEnd
                                       withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorShouldBeBetween)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeBetween_shouldBeBetweenWithJavaUtilDate_withJavaUtilDate_withJavaUtilDate_withBoolean_withBoolean_withOrgAssertjCoreInternalComparisonStrategy_(JavaUtilDate *actual, JavaUtilDate *start, JavaUtilDate *end, jboolean inclusiveStart, jboolean inclusiveEnd, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeBetween_shouldBeBetweenWithJavaUtilDate_withJavaUtilDate_withJavaUtilDate_withBoolean_withBoolean_(JavaUtilDate *actual, JavaUtilDate *start, JavaUtilDate *end, jboolean inclusiveStart, jboolean inclusiveEnd);

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeBetween_shouldBeBetweenWithJavaLangComparable_withJavaLangComparable_withJavaLangComparable_withBoolean_withBoolean_withOrgAssertjCoreInternalComparisonStrategy_(id<JavaLangComparable> actual, id<JavaLangComparable> start, id<JavaLangComparable> end, jboolean inclusiveStart, jboolean inclusiveEnd, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeBetween_shouldBeBetweenWithJavaLangComparable_withJavaLangComparable_withJavaLangComparable_withBoolean_withBoolean_(id<JavaLangComparable> actual, id<JavaLangComparable> start, id<JavaLangComparable> end, jboolean inclusiveStart, jboolean inclusiveEnd);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorShouldBeBetween)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldBeBetween")
