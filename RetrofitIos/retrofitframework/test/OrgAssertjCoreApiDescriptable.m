//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/Descriptable.java
//

#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiDescriptable.h"

@interface OrgAssertjCoreApiDescriptable : NSObject

@end

@implementation OrgAssertjCoreApiDescriptable

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreApiDescriptable;", 0x481, 0, 1, -1, 2, -1, -1 },
    { NULL, "LOrgAssertjCoreApiDescriptable;", 0x401, 0, 3, -1, 4, -1, -1 },
    { NULL, "LOrgAssertjCoreApiDescriptable;", 0x481, 5, 1, -1, 2, -1, -1 },
    { NULL, "LOrgAssertjCoreApiDescriptable;", 0x401, 5, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(asWithNSString:withNSObjectArray:);
  methods[1].selector = @selector(asWithOrgAssertjCoreDescriptionDescription:);
  methods[2].selector = @selector(describedAsWithNSString:withNSObjectArray:);
  methods[3].selector = @selector(describedAsWithOrgAssertjCoreDescriptionDescription:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "as", "LNSString;[LNSObject;", "(Ljava/lang/String;[Ljava/lang/Object;)TS;", "LOrgAssertjCoreDescriptionDescription;", "(Lorg/assertj/core/description/Description;)TS;", "describedAs", "<S::Lorg/assertj/core/api/Descriptable<TS;>;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _OrgAssertjCoreApiDescriptable = { "Descriptable", "org.assertj.core.api", ptrTable, methods, NULL, 7, 0x609, 4, 0, -1, -1, -1, 6, -1 };
  return &_OrgAssertjCoreApiDescriptable;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgAssertjCoreApiDescriptable)
