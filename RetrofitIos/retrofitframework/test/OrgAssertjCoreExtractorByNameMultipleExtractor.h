//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/extractor/ByNameMultipleExtractor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreExtractorByNameMultipleExtractor")
#ifdef RESTRICT_OrgAssertjCoreExtractorByNameMultipleExtractor
#define INCLUDE_ALL_OrgAssertjCoreExtractorByNameMultipleExtractor 0
#else
#define INCLUDE_ALL_OrgAssertjCoreExtractorByNameMultipleExtractor 1
#endif
#undef RESTRICT_OrgAssertjCoreExtractorByNameMultipleExtractor

#if !defined (OrgAssertjCoreExtractorByNameMultipleExtractor_) && (INCLUDE_ALL_OrgAssertjCoreExtractorByNameMultipleExtractor || defined(INCLUDE_OrgAssertjCoreExtractorByNameMultipleExtractor))
#define OrgAssertjCoreExtractorByNameMultipleExtractor_

#define RESTRICT_OrgAssertjCoreApiIterableExtractor 1
#define INCLUDE_OrgAssertjCoreApiIterableExtractor 1
#include "OrgAssertjCoreApiIterableExtractor.h"

@class IOSObjectArray;
@class OrgAssertjCoreGroupsTuple;

@interface OrgAssertjCoreExtractorByNameMultipleExtractor : NSObject < OrgAssertjCoreApiIterableExtractor >

#pragma mark Public

- (OrgAssertjCoreGroupsTuple *)extractWithId:(id)input;

#pragma mark Package-Private

- (instancetype)initWithNSStringArray:(IOSObjectArray *)fieldsOrProperties;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreExtractorByNameMultipleExtractor)

FOUNDATION_EXPORT void OrgAssertjCoreExtractorByNameMultipleExtractor_initWithNSStringArray_(OrgAssertjCoreExtractorByNameMultipleExtractor *self, IOSObjectArray *fieldsOrProperties);

FOUNDATION_EXPORT OrgAssertjCoreExtractorByNameMultipleExtractor *new_OrgAssertjCoreExtractorByNameMultipleExtractor_initWithNSStringArray_(IOSObjectArray *fieldsOrProperties) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreExtractorByNameMultipleExtractor *create_OrgAssertjCoreExtractorByNameMultipleExtractor_initWithNSStringArray_(IOSObjectArray *fieldsOrProperties);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreExtractorByNameMultipleExtractor)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreExtractorByNameMultipleExtractor")
