//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/core-doppl/androidbasetest/src/main/java/co/touchlab/doppel/testing/DopplJunitTestHelper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestHelper")
#ifdef RESTRICT_CoTouchlabDoppelTestingDopplJunitTestHelper
#define INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestHelper 0
#else
#define INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestHelper 1
#endif
#undef RESTRICT_CoTouchlabDoppelTestingDopplJunitTestHelper

#if !defined (CoTouchlabDoppelTestingDopplJunitTestHelper_) && (INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestHelper || defined(INCLUDE_CoTouchlabDoppelTestingDopplJunitTestHelper))
#define CoTouchlabDoppelTestingDopplJunitTestHelper_

@class CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat;
@class CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder;
@class IOSClass;
@class IOSObjectArray;
@class JavaIoPrintStream;
@class OrgJunitRunnerJUnitCore;
@class OrgJunitRunnerNotificationRunListener;
@class OrgJunitRunnerResult;
@protocol CoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener;

@interface CoTouchlabDoppelTestingDopplJunitTestHelper : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJavaIoPrintStream:(JavaIoPrintStream *)outArg;

+ (jint)mainWithNSStringArray:(IOSObjectArray *)args;

- (OrgJunitRunnerNotificationRunListener *)newRunListenerWithCoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat:(CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat *)outputFormat OBJC_METHOD_FAMILY_NONE;

- (jint)run;

+ (jint)runWithIOSClassArray:(IOSObjectArray *)classes
withOrgJunitRunnerNotificationRunListener:(OrgJunitRunnerNotificationRunListener *)listener
withCoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener:(id<CoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener>)dopplJunitListener;

+ (jint)runWithNSStringArray:(IOSObjectArray *)classes
withOrgJunitRunnerNotificationRunListener:(OrgJunitRunnerNotificationRunListener *)listener
withCoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener:(id<CoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener>)dopplListener;

+ (OrgJunitRunnerResult *)runSpecificTestWithOrgJunitRunnerJUnitCore:(OrgJunitRunnerJUnitCore *)junitCore
                                                        withNSString:(NSString *)c;

- (void)sortClassesWithIOSClassArray:(IOSObjectArray *)classes
withCoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder:(CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder *)sortOrder;

#pragma mark Protected

- (jboolean)isJUnit3TestClassWithIOSClass:(IOSClass *)cls;

- (jboolean)isJUnit4TestClassWithIOSClass:(IOSClass *)cls;

- (jboolean)isJUnitTestClassWithIOSClass:(IOSClass *)cls;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDoppelTestingDopplJunitTestHelper)

FOUNDATION_EXPORT void CoTouchlabDoppelTestingDopplJunitTestHelper_init(CoTouchlabDoppelTestingDopplJunitTestHelper *self);

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper *new_CoTouchlabDoppelTestingDopplJunitTestHelper_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper *create_CoTouchlabDoppelTestingDopplJunitTestHelper_init();

FOUNDATION_EXPORT void CoTouchlabDoppelTestingDopplJunitTestHelper_initWithJavaIoPrintStream_(CoTouchlabDoppelTestingDopplJunitTestHelper *self, JavaIoPrintStream *outArg);

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper *new_CoTouchlabDoppelTestingDopplJunitTestHelper_initWithJavaIoPrintStream_(JavaIoPrintStream *outArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper *create_CoTouchlabDoppelTestingDopplJunitTestHelper_initWithJavaIoPrintStream_(JavaIoPrintStream *outArg);

FOUNDATION_EXPORT jint CoTouchlabDoppelTestingDopplJunitTestHelper_mainWithNSStringArray_(IOSObjectArray *args);

FOUNDATION_EXPORT jint CoTouchlabDoppelTestingDopplJunitTestHelper_runWithNSStringArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener_(IOSObjectArray *classes, OrgJunitRunnerNotificationRunListener *listener, id<CoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener> dopplListener);

FOUNDATION_EXPORT OrgJunitRunnerResult *CoTouchlabDoppelTestingDopplJunitTestHelper_runSpecificTestWithOrgJunitRunnerJUnitCore_withNSString_(OrgJunitRunnerJUnitCore *junitCore, NSString *c);

FOUNDATION_EXPORT jint CoTouchlabDoppelTestingDopplJunitTestHelper_runWithIOSClassArray_withOrgJunitRunnerNotificationRunListener_withCoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener_(IOSObjectArray *classes, OrgJunitRunnerNotificationRunListener *listener, id<CoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener> dopplJunitListener);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingDopplJunitTestHelper)

#endif

#if !defined (CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat_) && (INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestHelper || defined(INCLUDE_CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat))
#define CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat_Enum) {
  CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat_Enum_JUNIT = 0,
  CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat_Enum_GTM_UNIT_TESTING = 1,
};

@interface CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat : JavaLangEnum < NSCopying >

#pragma mark Public

+ (CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat *CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat_values_[];

inline CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat *CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat_get_JUNIT();
J2OBJC_ENUM_CONSTANT(CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat, JUNIT)

inline CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat *CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat_get_GTM_UNIT_TESTING();
J2OBJC_ENUM_CONSTANT(CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat, GTM_UNIT_TESTING)

FOUNDATION_EXPORT IOSObjectArray *CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat_values();

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat *CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat *CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingDopplJunitTestHelper_OutputFormat)

#endif

#if !defined (CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder_) && (INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestHelper || defined(INCLUDE_CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder))
#define CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder_Enum) {
  CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder_Enum_ALPHABETICAL = 0,
  CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder_Enum_RANDOM = 1,
};

@interface CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder : JavaLangEnum < NSCopying >

#pragma mark Public

+ (CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder *CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder_values_[];

inline CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder *CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder_get_ALPHABETICAL();
J2OBJC_ENUM_CONSTANT(CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder, ALPHABETICAL)

inline CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder *CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder_get_RANDOM();
J2OBJC_ENUM_CONSTANT(CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder, RANDOM)

FOUNDATION_EXPORT IOSObjectArray *CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder_values();

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder *CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder *CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingDopplJunitTestHelper_SortOrder)

#endif

#if !defined (CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion_) && (INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestHelper || defined(INCLUDE_CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion))
#define CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion_Enum) {
  CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion_Enum_INCLUDE = 0,
  CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion_Enum_EXCLUDE = 1,
};

@interface CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion : JavaLangEnum < NSCopying >

#pragma mark Public

+ (CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion *CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion_values_[];

inline CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion *CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion_get_INCLUDE();
J2OBJC_ENUM_CONSTANT(CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion, INCLUDE)

inline CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion *CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion_get_EXCLUDE();
J2OBJC_ENUM_CONSTANT(CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion, EXCLUDE)

FOUNDATION_EXPORT IOSObjectArray *CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion_values();

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion *CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion *CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingDopplJunitTestHelper_TestInclusion)

#endif

#if !defined (CoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener_) && (INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestHelper || defined(INCLUDE_CoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener))
#define CoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener_

@protocol CoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener < JavaObject >

- (void)startRunWithNSString:(NSString *)run;

- (void)endRunWithNSString:(NSString *)run;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener)

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingDopplJunitTestHelper_DopplJunitListener)

#endif

#if !defined (CoTouchlabDoppelTestingDopplJunitTestHelper_ResultContainer_) && (INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestHelper || defined(INCLUDE_CoTouchlabDoppelTestingDopplJunitTestHelper_ResultContainer))
#define CoTouchlabDoppelTestingDopplJunitTestHelper_ResultContainer_

@class OrgJunitRunnerResult;

@interface CoTouchlabDoppelTestingDopplJunitTestHelper_ResultContainer : NSObject {
 @public
  OrgJunitRunnerResult *result_;
  NSString *testClassName_;
}

#pragma mark Public

- (instancetype)initWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result
                                withNSString:(NSString *)testClassName;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDoppelTestingDopplJunitTestHelper_ResultContainer)

J2OBJC_FIELD_SETTER(CoTouchlabDoppelTestingDopplJunitTestHelper_ResultContainer, result_, OrgJunitRunnerResult *)
J2OBJC_FIELD_SETTER(CoTouchlabDoppelTestingDopplJunitTestHelper_ResultContainer, testClassName_, NSString *)

FOUNDATION_EXPORT void CoTouchlabDoppelTestingDopplJunitTestHelper_ResultContainer_initWithOrgJunitRunnerResult_withNSString_(CoTouchlabDoppelTestingDopplJunitTestHelper_ResultContainer *self, OrgJunitRunnerResult *result, NSString *testClassName);

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper_ResultContainer *new_CoTouchlabDoppelTestingDopplJunitTestHelper_ResultContainer_initWithOrgJunitRunnerResult_withNSString_(OrgJunitRunnerResult *result, NSString *testClassName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplJunitTestHelper_ResultContainer *create_CoTouchlabDoppelTestingDopplJunitTestHelper_ResultContainer_initWithOrgJunitRunnerResult_withNSString_(OrgJunitRunnerResult *result, NSString *testClassName);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingDopplJunitTestHelper_ResultContainer)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabDoppelTestingDopplJunitTestHelper")
