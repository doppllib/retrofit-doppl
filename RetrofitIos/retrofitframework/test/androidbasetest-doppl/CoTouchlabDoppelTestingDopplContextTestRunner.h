//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/core-doppl/androidbasetest/src/main/java/co/touchlab/doppel/testing/DopplContextTestRunner.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabDoppelTestingDopplContextTestRunner")
#ifdef RESTRICT_CoTouchlabDoppelTestingDopplContextTestRunner
#define INCLUDE_ALL_CoTouchlabDoppelTestingDopplContextTestRunner 0
#else
#define INCLUDE_ALL_CoTouchlabDoppelTestingDopplContextTestRunner 1
#endif
#undef RESTRICT_CoTouchlabDoppelTestingDopplContextTestRunner

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (CoTouchlabDoppelTestingDopplContextTestRunner_) && (INCLUDE_ALL_CoTouchlabDoppelTestingDopplContextTestRunner || defined(INCLUDE_CoTouchlabDoppelTestingDopplContextTestRunner))
#define CoTouchlabDoppelTestingDopplContextTestRunner_

#define RESTRICT_OrgJunitRunnersBlockJUnit4ClassRunner 1
#define INCLUDE_OrgJunitRunnersBlockJUnit4ClassRunner 1
#include "org/junit/runners/BlockJUnit4ClassRunner.h"

@class IOSClass;
@class OrgJunitRunnerNotificationRunNotifier;
@class OrgJunitRunnersModelFrameworkMethod;

@interface CoTouchlabDoppelTestingDopplContextTestRunner : OrgJunitRunnersBlockJUnit4ClassRunner

#pragma mark Public

- (instancetype)initWithIOSClass:(IOSClass *)klass;

#pragma mark Protected

- (void)runChildWithId:(OrgJunitRunnersModelFrameworkMethod *)method
withOrgJunitRunnerNotificationRunNotifier:(OrgJunitRunnerNotificationRunNotifier *)notifier;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabDoppelTestingDopplContextTestRunner)

FOUNDATION_EXPORT void CoTouchlabDoppelTestingDopplContextTestRunner_initWithIOSClass_(CoTouchlabDoppelTestingDopplContextTestRunner *self, IOSClass *klass);

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplContextTestRunner *new_CoTouchlabDoppelTestingDopplContextTestRunner_initWithIOSClass_(IOSClass *klass) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabDoppelTestingDopplContextTestRunner *create_CoTouchlabDoppelTestingDopplContextTestRunner_initWithIOSClass_(IOSClass *klass);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabDoppelTestingDopplContextTestRunner)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_CoTouchlabDoppelTestingDopplContextTestRunner")
