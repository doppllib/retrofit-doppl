//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/FloatAssert.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiAbstractFloatAssert.h"
#include "OrgAssertjCoreApiFloatAssert.h"
#include "java/lang/Float.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation OrgAssertjCoreApiFloatAssert

- (instancetype)initWithJavaLangFloat:(JavaLangFloat *)actual {
  OrgAssertjCoreApiFloatAssert_initWithJavaLangFloat_(self, actual);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangFloat:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaLangFloat;", "Lorg/assertj/core/api/AbstractFloatAssert<Lorg/assertj/core/api/FloatAssert;>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreApiFloatAssert = { "FloatAssert", "org.assertj.core.api", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, 1, -1 };
  return &_OrgAssertjCoreApiFloatAssert;
}

@end

void OrgAssertjCoreApiFloatAssert_initWithJavaLangFloat_(OrgAssertjCoreApiFloatAssert *self, JavaLangFloat *actual) {
  OrgAssertjCoreApiAbstractFloatAssert_initWithJavaLangFloat_withIOSClass_(self, actual, OrgAssertjCoreApiFloatAssert_class_());
}

OrgAssertjCoreApiFloatAssert *new_OrgAssertjCoreApiFloatAssert_initWithJavaLangFloat_(JavaLangFloat *actual) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreApiFloatAssert, initWithJavaLangFloat_, actual)
}

OrgAssertjCoreApiFloatAssert *create_OrgAssertjCoreApiFloatAssert_initWithJavaLangFloat_(JavaLangFloat *actual) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreApiFloatAssert, initWithJavaLangFloat_, actual)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreApiFloatAssert)
