//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/AbstractBigDecimalAssert.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractBigDecimalAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractBigDecimalAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractBigDecimalAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractBigDecimalAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractBigDecimalAssert

#if !defined (OrgAssertjCoreApiAbstractBigDecimalAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractBigDecimalAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractBigDecimalAssert))
#define OrgAssertjCoreApiAbstractBigDecimalAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractUnevenComparableAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractUnevenComparableAssert 1
#include "OrgAssertjCoreApiAbstractUnevenComparableAssert.h"

#define RESTRICT_OrgAssertjCoreApiNumberAssert 1
#define INCLUDE_OrgAssertjCoreApiNumberAssert 1
#include "OrgAssertjCoreApiNumberAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaMathBigDecimal;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDataOffset;
@class OrgAssertjCoreDescriptionDescription;
@class OrgAssertjCoreInternalBigDecimals;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractBigDecimalAssert : OrgAssertjCoreApiAbstractUnevenComparableAssert < OrgAssertjCoreApiNumberAssert > {
 @public
  OrgAssertjCoreInternalBigDecimals *bigDecimals_;
}

#pragma mark Public

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)asWithNSString:(NSString *)arg0
                                            withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)describedAsWithNSString:(NSString *)arg0
                                                     withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)inBinary;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)inHexadecimal;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isBetweenWithNSNumber:(JavaMathBigDecimal *)start
                                                        withNSNumber:(JavaMathBigDecimal *)end;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isCloseToWithJavaMathBigDecimal:(JavaMathBigDecimal *)other
                                                  withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)offset;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isEqualByComparingToWithNSString:(NSString *)expected;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isEqualByComparingToWithJavaLangComparable:(JavaMathBigDecimal *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isEqualToWithNSString:(NSString *)expected;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(JavaMathBigDecimal *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isGreaterThanWithJavaLangComparable:(JavaMathBigDecimal *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isLessThanOrEqualToWithJavaLangComparable:(JavaMathBigDecimal *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isLessThanWithJavaLangComparable:(JavaMathBigDecimal *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNegative;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNotEqualByComparingToWithJavaLangComparable:(JavaMathBigDecimal *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNotNegative;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNotPositive;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isNotZero;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isPositive;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isStrictlyBetweenWithNSNumber:(JavaMathBigDecimal *)start
                                                                withNSNumber:(JavaMathBigDecimal *)end;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)isZero;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                                withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)customComparator;

- (OrgAssertjCoreApiAbstractBigDecimalAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaMathBigDecimal:(JavaMathBigDecimal *)actual
                              withIOSClass:(IOSClass *)selfType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractBigDecimalAssert)

J2OBJC_FIELD_SETTER(OrgAssertjCoreApiAbstractBigDecimalAssert, bigDecimals_, OrgAssertjCoreInternalBigDecimals *)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractBigDecimalAssert_initWithJavaMathBigDecimal_withIOSClass_(OrgAssertjCoreApiAbstractBigDecimalAssert *self, JavaMathBigDecimal *actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractBigDecimalAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractBigDecimalAssert")
