//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/error/ShouldContainAtIndex.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreDataIndex.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldContainAtIndex.h"
#include "OrgAssertjCoreInternalComparisonStrategy.h"
#include "OrgAssertjCoreInternalStandardComparisonStrategy.h"
#include "java/lang/Integer.h"

@interface OrgAssertjCoreErrorShouldContainAtIndex ()

- (instancetype)initWithId:(id)actual
                    withId:(id)expected
withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index
                    withId:(id)found
withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldContainAtIndex_initWithId_withId_withOrgAssertjCoreDataIndex_withId_withOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreErrorShouldContainAtIndex *self, id actual, id expected, OrgAssertjCoreDataIndex *index, id found, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

__attribute__((unused)) static OrgAssertjCoreErrorShouldContainAtIndex *new_OrgAssertjCoreErrorShouldContainAtIndex_initWithId_withId_withOrgAssertjCoreDataIndex_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id expected, OrgAssertjCoreDataIndex *index, id found, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldContainAtIndex *create_OrgAssertjCoreErrorShouldContainAtIndex_initWithId_withId_withOrgAssertjCoreDataIndex_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id expected, OrgAssertjCoreDataIndex *index, id found, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

@implementation OrgAssertjCoreErrorShouldContainAtIndex

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldContainAtIndexWithId:(id)actual
                                                                  withId:(id)expected
                                             withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index
                                                                  withId:(id)found
                            withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy {
  return OrgAssertjCoreErrorShouldContainAtIndex_shouldContainAtIndexWithId_withId_withOrgAssertjCoreDataIndex_withId_withOrgAssertjCoreInternalComparisonStrategy_(actual, expected, index, found, comparisonStrategy);
}

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldContainAtIndexWithId:(id)actual
                                                                  withId:(id)expected
                                             withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index
                                                                  withId:(id)found {
  return OrgAssertjCoreErrorShouldContainAtIndex_shouldContainAtIndexWithId_withId_withOrgAssertjCoreDataIndex_withId_(actual, expected, index, found);
}

- (instancetype)initWithId:(id)actual
                    withId:(id)expected
withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index
                    withId:(id)found
withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy {
  OrgAssertjCoreErrorShouldContainAtIndex_initWithId_withId_withOrgAssertjCoreDataIndex_withId_withOrgAssertjCoreInternalComparisonStrategy_(self, actual, expected, index, found, comparisonStrategy);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldContainAtIndexWithId:withId:withOrgAssertjCoreDataIndex:withId:withOrgAssertjCoreInternalComparisonStrategy:);
  methods[1].selector = @selector(shouldContainAtIndexWithId:withId:withOrgAssertjCoreDataIndex:withId:);
  methods[2].selector = @selector(initWithId:withId:withOrgAssertjCoreDataIndex:withId:withOrgAssertjCoreInternalComparisonStrategy:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldContainAtIndex", "LNSObject;LNSObject;LOrgAssertjCoreDataIndex;LNSObject;LOrgAssertjCoreInternalComparisonStrategy;", "LNSObject;LNSObject;LOrgAssertjCoreDataIndex;LNSObject;" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldContainAtIndex = { "ShouldContainAtIndex", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldContainAtIndex;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldContainAtIndex_shouldContainAtIndexWithId_withId_withOrgAssertjCoreDataIndex_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id expected, OrgAssertjCoreDataIndex *index, id found, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  OrgAssertjCoreErrorShouldContainAtIndex_initialize();
  return create_OrgAssertjCoreErrorShouldContainAtIndex_initWithId_withId_withOrgAssertjCoreDataIndex_withId_withOrgAssertjCoreInternalComparisonStrategy_(actual, expected, index, found, comparisonStrategy);
}

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldContainAtIndex_shouldContainAtIndexWithId_withId_withOrgAssertjCoreDataIndex_withId_(id actual, id expected, OrgAssertjCoreDataIndex *index, id found) {
  OrgAssertjCoreErrorShouldContainAtIndex_initialize();
  return create_OrgAssertjCoreErrorShouldContainAtIndex_initWithId_withId_withOrgAssertjCoreDataIndex_withId_withOrgAssertjCoreInternalComparisonStrategy_(actual, expected, index, found, OrgAssertjCoreInternalStandardComparisonStrategy_instance());
}

void OrgAssertjCoreErrorShouldContainAtIndex_initWithId_withId_withOrgAssertjCoreDataIndex_withId_withOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreErrorShouldContainAtIndex *self, id actual, id expected, OrgAssertjCoreDataIndex *index, id found, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting:\n <%s>\nat index <%s> but found:\n <%s>\nin:\n <%s>\n%s", [IOSObjectArray arrayWithObjects:(id[]){ expected, JavaLangInteger_valueOfWithInt_(((OrgAssertjCoreDataIndex *) nil_chk(index))->value_), found, actual, comparisonStrategy } count:5 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldContainAtIndex *new_OrgAssertjCoreErrorShouldContainAtIndex_initWithId_withId_withOrgAssertjCoreDataIndex_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id expected, OrgAssertjCoreDataIndex *index, id found, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldContainAtIndex, initWithId_withId_withOrgAssertjCoreDataIndex_withId_withOrgAssertjCoreInternalComparisonStrategy_, actual, expected, index, found, comparisonStrategy)
}

OrgAssertjCoreErrorShouldContainAtIndex *create_OrgAssertjCoreErrorShouldContainAtIndex_initWithId_withId_withOrgAssertjCoreDataIndex_withId_withOrgAssertjCoreInternalComparisonStrategy_(id actual, id expected, OrgAssertjCoreDataIndex *index, id found, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldContainAtIndex, initWithId_withId_withOrgAssertjCoreDataIndex_withId_withOrgAssertjCoreInternalComparisonStrategy_, actual, expected, index, found, comparisonStrategy)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldContainAtIndex)
