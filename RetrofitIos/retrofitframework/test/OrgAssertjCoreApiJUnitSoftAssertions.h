//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/JUnitSoftAssertions.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiJUnitSoftAssertions")
#ifdef RESTRICT_OrgAssertjCoreApiJUnitSoftAssertions
#define INCLUDE_ALL_OrgAssertjCoreApiJUnitSoftAssertions 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiJUnitSoftAssertions 1
#endif
#undef RESTRICT_OrgAssertjCoreApiJUnitSoftAssertions

#if !defined (OrgAssertjCoreApiJUnitSoftAssertions_) && (INCLUDE_ALL_OrgAssertjCoreApiJUnitSoftAssertions || defined(INCLUDE_OrgAssertjCoreApiJUnitSoftAssertions))
#define OrgAssertjCoreApiJUnitSoftAssertions_

#define RESTRICT_OrgAssertjCoreApiAbstractSoftAssertions 1
#define INCLUDE_OrgAssertjCoreApiAbstractSoftAssertions 1
#include "OrgAssertjCoreApiAbstractSoftAssertions.h"

#define RESTRICT_OrgJunitRulesTestRule 1
#define INCLUDE_OrgJunitRulesTestRule 1
#include "org/junit/rules/TestRule.h"

@class OrgJunitRunnerDescription;
@class OrgJunitRunnersModelStatement;

@interface OrgAssertjCoreApiJUnitSoftAssertions : OrgAssertjCoreApiAbstractSoftAssertions < OrgJunitRulesTestRule >

#pragma mark Public

- (instancetype)init;

- (OrgJunitRunnersModelStatement *)applyWithOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)base
                                            withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiJUnitSoftAssertions)

FOUNDATION_EXPORT void OrgAssertjCoreApiJUnitSoftAssertions_init(OrgAssertjCoreApiJUnitSoftAssertions *self);

FOUNDATION_EXPORT OrgAssertjCoreApiJUnitSoftAssertions *new_OrgAssertjCoreApiJUnitSoftAssertions_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiJUnitSoftAssertions *create_OrgAssertjCoreApiJUnitSoftAssertions_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiJUnitSoftAssertions)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiJUnitSoftAssertions")
