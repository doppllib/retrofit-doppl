//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/error/ShouldBeEqualByComparingOnlyGivenFields.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields.h"
#include "java/util/List.h"

@interface OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields ()

- (instancetype)initWithId:(id)actual
          withJavaUtilList:(id<JavaUtilList>)rejectedFields
          withJavaUtilList:(id<JavaUtilList>)rejectedValues
          withJavaUtilList:(id<JavaUtilList>)expectedValue
          withJavaUtilList:(id<JavaUtilList>)acceptedFields;

- (instancetype)initWithId:(id)actual
              withNSString:(NSString *)rejectedField
                    withId:(id)rejectedValue
                    withId:(id)expectedValue
          withJavaUtilList:(id<JavaUtilList>)acceptedFields;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withJavaUtilList_withJavaUtilList_withJavaUtilList_withJavaUtilList_(OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields *self, id actual, id<JavaUtilList> rejectedFields, id<JavaUtilList> rejectedValues, id<JavaUtilList> expectedValue, id<JavaUtilList> acceptedFields);

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields *new_OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withJavaUtilList_withJavaUtilList_withJavaUtilList_withJavaUtilList_(id actual, id<JavaUtilList> rejectedFields, id<JavaUtilList> rejectedValues, id<JavaUtilList> expectedValue, id<JavaUtilList> acceptedFields) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields *create_OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withJavaUtilList_withJavaUtilList_withJavaUtilList_withJavaUtilList_(id actual, id<JavaUtilList> rejectedFields, id<JavaUtilList> rejectedValues, id<JavaUtilList> expectedValue, id<JavaUtilList> acceptedFields);

__attribute__((unused)) static void OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withNSString_withId_withId_withJavaUtilList_(OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields *self, id actual, NSString *rejectedField, id rejectedValue, id expectedValue, id<JavaUtilList> acceptedFields);

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields *new_OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withNSString_withId_withId_withJavaUtilList_(id actual, NSString *rejectedField, id rejectedValue, id expectedValue, id<JavaUtilList> acceptedFields) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields *create_OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withNSString_withId_withId_withJavaUtilList_(id actual, NSString *rejectedField, id rejectedValue, id expectedValue, id<JavaUtilList> acceptedFields);

@implementation OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeEqualComparingOnlyGivenFieldsWithId:(id)actual
                                                                         withJavaUtilList:(id<JavaUtilList>)rejectedFields
                                                                         withJavaUtilList:(id<JavaUtilList>)rejectedValues
                                                                         withJavaUtilList:(id<JavaUtilList>)expectedValues
                                                                         withJavaUtilList:(id<JavaUtilList>)acceptedFields {
  return OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_shouldBeEqualComparingOnlyGivenFieldsWithId_withJavaUtilList_withJavaUtilList_withJavaUtilList_withJavaUtilList_(actual, rejectedFields, rejectedValues, expectedValues, acceptedFields);
}

- (instancetype)initWithId:(id)actual
          withJavaUtilList:(id<JavaUtilList>)rejectedFields
          withJavaUtilList:(id<JavaUtilList>)rejectedValues
          withJavaUtilList:(id<JavaUtilList>)expectedValue
          withJavaUtilList:(id<JavaUtilList>)acceptedFields {
  OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withJavaUtilList_withJavaUtilList_withJavaUtilList_withJavaUtilList_(self, actual, rejectedFields, rejectedValues, expectedValue, acceptedFields);
  return self;
}

- (instancetype)initWithId:(id)actual
              withNSString:(NSString *)rejectedField
                    withId:(id)rejectedValue
                    withId:(id)expectedValue
          withJavaUtilList:(id<JavaUtilList>)acceptedFields {
  OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withNSString_withId_withId_withJavaUtilList_(self, actual, rejectedField, rejectedValue, expectedValue, acceptedFields);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, 3, -1, -1 },
    { NULL, NULL, 0x2, -1, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldBeEqualComparingOnlyGivenFieldsWithId:withJavaUtilList:withJavaUtilList:withJavaUtilList:withJavaUtilList:);
  methods[1].selector = @selector(initWithId:withJavaUtilList:withJavaUtilList:withJavaUtilList:withJavaUtilList:);
  methods[2].selector = @selector(initWithId:withNSString:withId:withId:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldBeEqualComparingOnlyGivenFields", "LNSObject;LJavaUtilList;LJavaUtilList;LJavaUtilList;LJavaUtilList;", "(Ljava/lang/Object;Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/Object;>;Ljava/util/List<Ljava/lang/Object;>;Ljava/util/List<Ljava/lang/String;>;)Lorg/assertj/core/error/ErrorMessageFactory;", "(Ljava/lang/Object;Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/Object;>;Ljava/util/List<Ljava/lang/Object;>;Ljava/util/List<Ljava/lang/String;>;)V", "LNSObject;LNSString;LNSObject;LNSObject;LJavaUtilList;", "(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List<Ljava/lang/String;>;)V" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields = { "ShouldBeEqualByComparingOnlyGivenFields", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_shouldBeEqualComparingOnlyGivenFieldsWithId_withJavaUtilList_withJavaUtilList_withJavaUtilList_withJavaUtilList_(id actual, id<JavaUtilList> rejectedFields, id<JavaUtilList> rejectedValues, id<JavaUtilList> expectedValues, id<JavaUtilList> acceptedFields) {
  OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initialize();
  if ([((id<JavaUtilList>) nil_chk(rejectedFields)) size] == 1) {
    return create_OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withNSString_withId_withId_withJavaUtilList_(actual, [rejectedFields getWithInt:0], [((id<JavaUtilList>) nil_chk(rejectedValues)) getWithInt:0], [((id<JavaUtilList>) nil_chk(expectedValues)) getWithInt:0], acceptedFields);
  }
  else {
    return create_OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withJavaUtilList_withJavaUtilList_withJavaUtilList_withJavaUtilList_(actual, rejectedFields, rejectedValues, expectedValues, acceptedFields);
  }
}

void OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withJavaUtilList_withJavaUtilList_withJavaUtilList_withJavaUtilList_(OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields *self, id actual, id<JavaUtilList> rejectedFields, id<JavaUtilList> rejectedValues, id<JavaUtilList> expectedValue, id<JavaUtilList> acceptedFields) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting values:\n  <%s>\nin fields:\n  <%s>\nbut were:\n  <%s>\nin <%s>.\nComparison was performed on fields:\n  <%s>", [IOSObjectArray arrayWithObjects:(id[]){ expectedValue, rejectedFields, rejectedValues, actual, acceptedFields } count:5 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields *new_OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withJavaUtilList_withJavaUtilList_withJavaUtilList_withJavaUtilList_(id actual, id<JavaUtilList> rejectedFields, id<JavaUtilList> rejectedValues, id<JavaUtilList> expectedValue, id<JavaUtilList> acceptedFields) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields, initWithId_withJavaUtilList_withJavaUtilList_withJavaUtilList_withJavaUtilList_, actual, rejectedFields, rejectedValues, expectedValue, acceptedFields)
}

OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields *create_OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withJavaUtilList_withJavaUtilList_withJavaUtilList_withJavaUtilList_(id actual, id<JavaUtilList> rejectedFields, id<JavaUtilList> rejectedValues, id<JavaUtilList> expectedValue, id<JavaUtilList> acceptedFields) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields, initWithId_withJavaUtilList_withJavaUtilList_withJavaUtilList_withJavaUtilList_, actual, rejectedFields, rejectedValues, expectedValue, acceptedFields)
}

void OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withNSString_withId_withId_withJavaUtilList_(OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields *self, id actual, NSString *rejectedField, id rejectedValue, id expectedValue, id<JavaUtilList> acceptedFields) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting value <%s> in field <%s> but was <%s> in <%s>", [IOSObjectArray arrayWithObjects:(id[]){ expectedValue, rejectedField, rejectedValue, actual, acceptedFields } count:5 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields *new_OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withNSString_withId_withId_withJavaUtilList_(id actual, NSString *rejectedField, id rejectedValue, id expectedValue, id<JavaUtilList> acceptedFields) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields, initWithId_withNSString_withId_withId_withJavaUtilList_, actual, rejectedField, rejectedValue, expectedValue, acceptedFields)
}

OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields *create_OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields_initWithId_withNSString_withId_withId_withJavaUtilList_(id actual, NSString *rejectedField, id rejectedValue, id expectedValue, id<JavaUtilList> acceptedFields) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields, initWithId_withNSString_withId_withId_withJavaUtilList_, actual, rejectedField, rejectedValue, expectedValue, acceptedFields)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldBeEqualByComparingOnlyGivenFields)
