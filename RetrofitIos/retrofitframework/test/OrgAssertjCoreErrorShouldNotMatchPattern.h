//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/error/ShouldNotMatchPattern.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldNotMatchPattern")
#ifdef RESTRICT_OrgAssertjCoreErrorShouldNotMatchPattern
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldNotMatchPattern 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldNotMatchPattern 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorShouldNotMatchPattern

#if !defined (OrgAssertjCoreErrorShouldNotMatchPattern_) && (INCLUDE_ALL_OrgAssertjCoreErrorShouldNotMatchPattern || defined(INCLUDE_OrgAssertjCoreErrorShouldNotMatchPattern))
#define OrgAssertjCoreErrorShouldNotMatchPattern_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@protocol JavaLangCharSequence;
@protocol OrgAssertjCoreErrorErrorMessageFactory;

@interface OrgAssertjCoreErrorShouldNotMatchPattern : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldNotMatchWithJavaLangCharSequence:(id<JavaLangCharSequence>)actual
                                                            withJavaLangCharSequence:(id<JavaLangCharSequence>)pattern;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorShouldNotMatchPattern)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldNotMatchPattern_shouldNotMatchWithJavaLangCharSequence_withJavaLangCharSequence_(id<JavaLangCharSequence> actual, id<JavaLangCharSequence> pattern);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorShouldNotMatchPattern)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldNotMatchPattern")
