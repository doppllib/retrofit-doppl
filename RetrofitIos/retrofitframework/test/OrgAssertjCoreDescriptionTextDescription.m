//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/description/TextDescription.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreDescriptionDescription.h"
#include "OrgAssertjCoreDescriptionTextDescription.h"
#include "OrgAssertjCoreUtilArrays.h"
#include "OrgAssertjCoreUtilObjects.h"
#include "OrgAssertjCoreUtilPreconditions.h"
#include "OrgAssertjCoreUtilStrings.h"

@implementation OrgAssertjCoreDescriptionTextDescription

- (instancetype)initWithNSString:(NSString *)value
               withNSObjectArray:(IOSObjectArray *)args {
  OrgAssertjCoreDescriptionTextDescription_initWithNSString_withNSObjectArray_(self, value, args);
  return self;
}

- (NSString *)value {
  return OrgAssertjCoreUtilStrings_formatIfArgsWithNSString_withNSObjectArray_(value_, args_);
}

- (NSUInteger)hash {
  return OrgAssertjCoreUtilObjects_HASH_CODE_PRIME + OrgAssertjCoreUtilObjects_hashCodeForWithId_(value_) + OrgAssertjCoreUtilObjects_hashCodeForWithId_(args_);
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) {
    return true;
  }
  if (obj == nil) {
    return false;
  }
  if ([self java_getClass] != [obj java_getClass]) {
    return false;
  }
  OrgAssertjCoreDescriptionTextDescription *other = (OrgAssertjCoreDescriptionTextDescription *) cast_chk(obj, [OrgAssertjCoreDescriptionTextDescription class]);
  return OrgAssertjCoreUtilObjects_areEqualWithId_withId_(value_, other->value_) && OrgAssertjCoreUtilObjects_areEqualWithId_withId_(args_, other->args_);
}

- (void)dealloc {
  RELEASE_(value_);
  RELEASE_(args_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x81, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSObjectArray:);
  methods[1].selector = @selector(value);
  methods[2].selector = @selector(hash);
  methods[3].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "args_", "[LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[LNSObject;", "hashCode", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _OrgAssertjCoreDescriptionTextDescription = { "TextDescription", "org.assertj.core.description", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreDescriptionTextDescription;
}

@end

void OrgAssertjCoreDescriptionTextDescription_initWithNSString_withNSObjectArray_(OrgAssertjCoreDescriptionTextDescription *self, NSString *value, IOSObjectArray *args) {
  OrgAssertjCoreDescriptionDescription_init(self);
  OrgAssertjCoreUtilPreconditions_checkNotNullWithId_(value);
  JreStrongAssign(&self->value_, value);
  JreStrongAssign(&self->args_, OrgAssertjCoreUtilArrays_isNullOrEmptyWithNSObjectArray_(args) ? nil : [((IOSObjectArray *) nil_chk(args)) java_clone]);
}

OrgAssertjCoreDescriptionTextDescription *new_OrgAssertjCoreDescriptionTextDescription_initWithNSString_withNSObjectArray_(NSString *value, IOSObjectArray *args) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreDescriptionTextDescription, initWithNSString_withNSObjectArray_, value, args)
}

OrgAssertjCoreDescriptionTextDescription *create_OrgAssertjCoreDescriptionTextDescription_initWithNSString_withNSObjectArray_(NSString *value, IOSObjectArray *args) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreDescriptionTextDescription, initWithNSString_withNSObjectArray_, value, args)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreDescriptionTextDescription)
