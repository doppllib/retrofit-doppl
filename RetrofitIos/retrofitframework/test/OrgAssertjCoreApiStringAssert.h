//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/StringAssert.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiStringAssert")
#ifdef RESTRICT_OrgAssertjCoreApiStringAssert
#define INCLUDE_ALL_OrgAssertjCoreApiStringAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiStringAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiStringAssert

#if !defined (OrgAssertjCoreApiStringAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiStringAssert || defined(INCLUDE_OrgAssertjCoreApiStringAssert))
#define OrgAssertjCoreApiStringAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractCharSequenceAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractCharSequenceAssert 1
#include "OrgAssertjCoreApiAbstractCharSequenceAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaIoFile;
@class JavaUtilRegexPattern;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangCharSequence;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiStringAssert : OrgAssertjCoreApiAbstractCharSequenceAssert

#pragma mark Public

- (OrgAssertjCoreApiStringAssert *)asWithNSString:(NSString *)arg0
                                withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiStringAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiStringAssert *)containsIgnoringCaseWithJavaLangCharSequence:(id<JavaLangCharSequence>)arg0;

- (OrgAssertjCoreApiStringAssert *)containsOnlyOnceWithJavaLangCharSequence:(id<JavaLangCharSequence>)arg0;

- (OrgAssertjCoreApiStringAssert *)containsSequenceWithJavaLangCharSequenceArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiStringAssert *)containsWithJavaLangCharSequenceArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiStringAssert *)describedAsWithNSString:(NSString *)arg0
                                         withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiStringAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiStringAssert *)doesNotContainWithJavaLangCharSequence:(id<JavaLangCharSequence>)arg0;

- (OrgAssertjCoreApiStringAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiStringAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiStringAssert *)doesNotMatchWithJavaLangCharSequence:(id<JavaLangCharSequence>)arg0;

- (OrgAssertjCoreApiStringAssert *)doesNotMatchWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)arg0;

- (OrgAssertjCoreApiStringAssert *)endsWithWithJavaLangCharSequence:(id<JavaLangCharSequence>)arg0;

- (OrgAssertjCoreApiStringAssert *)hasLineCountWithInt:(jint)arg0;

- (OrgAssertjCoreApiStringAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiStringAssert *)hasSameSizeAsWithId:(id)arg0;

- (OrgAssertjCoreApiStringAssert *)hasSameSizeAsWithJavaLangCharSequence:(id<JavaLangCharSequence>)arg0;

- (OrgAssertjCoreApiStringAssert *)hasSameSizeAsWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiStringAssert *)hasSizeWithInt:(jint)arg0;

- (OrgAssertjCoreApiStringAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiStringAssert *)inHexadecimal;

- (OrgAssertjCoreApiStringAssert *)inUnicode;

- (OrgAssertjCoreApiStringAssert *)isEqualToIgnoringCaseWithJavaLangCharSequence:(id<JavaLangCharSequence>)arg0;

- (OrgAssertjCoreApiStringAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiStringAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiStringAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiStringAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiStringAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiStringAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiStringAssert *)isNotEmpty;

- (OrgAssertjCoreApiStringAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiStringAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiStringAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiStringAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiStringAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiStringAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiStringAssert *)isNotNull;

- (OrgAssertjCoreApiStringAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiStringAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiStringAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiStringAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiStringAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiStringAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiStringAssert *)isXmlEqualToContentOfWithJavaIoFile:(JavaIoFile *)arg0;

- (OrgAssertjCoreApiStringAssert *)isXmlEqualToWithJavaLangCharSequence:(id<JavaLangCharSequence>)arg0;

- (OrgAssertjCoreApiStringAssert *)matchesWithJavaLangCharSequence:(id<JavaLangCharSequence>)arg0;

- (OrgAssertjCoreApiStringAssert *)matchesWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)arg0;

- (OrgAssertjCoreApiStringAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                    withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiStringAssert *)startsWithWithJavaLangCharSequence:(id<JavaLangCharSequence>)arg0;

- (OrgAssertjCoreApiStringAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiStringAssert *)usingDefaultComparator;

- (OrgAssertjCoreApiStringAssert *)usingDefaultElementComparator;

- (OrgAssertjCoreApiStringAssert *)usingElementComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

#pragma mark Protected

- (instancetype)initWithNSString:(NSString *)actual;

- (OrgAssertjCoreApiStringAssert *)inBinary;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiStringAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiStringAssert_initWithNSString_(OrgAssertjCoreApiStringAssert *self, NSString *actual);

FOUNDATION_EXPORT OrgAssertjCoreApiStringAssert *new_OrgAssertjCoreApiStringAssert_initWithNSString_(NSString *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiStringAssert *create_OrgAssertjCoreApiStringAssert_initWithNSString_(NSString *actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiStringAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiStringAssert")
