//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/util/FailureMessages.java
//

#include "J2ObjC_source.h"
#include "OrgAssertjCoreUtilFailureMessages.h"

@interface OrgAssertjCoreUtilFailureMessages ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgAssertjCoreUtilFailureMessages_init(OrgAssertjCoreUtilFailureMessages *self);

__attribute__((unused)) static OrgAssertjCoreUtilFailureMessages *new_OrgAssertjCoreUtilFailureMessages_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreUtilFailureMessages *create_OrgAssertjCoreUtilFailureMessages_init();

@implementation OrgAssertjCoreUtilFailureMessages

+ (NSString *)actualIsEmpty {
  return OrgAssertjCoreUtilFailureMessages_actualIsEmpty();
}

+ (NSString *)actualIsNull {
  return OrgAssertjCoreUtilFailureMessages_actualIsNull();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreUtilFailureMessages_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(actualIsEmpty);
  methods[1].selector = @selector(actualIsNull);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcClassInfo _OrgAssertjCoreUtilFailureMessages = { "FailureMessages", "org.assertj.core.util", NULL, methods, NULL, 7, 0x11, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreUtilFailureMessages;
}

@end

NSString *OrgAssertjCoreUtilFailureMessages_actualIsEmpty() {
  OrgAssertjCoreUtilFailureMessages_initialize();
  return @"\nExpecting actual not to be empty";
}

NSString *OrgAssertjCoreUtilFailureMessages_actualIsNull() {
  OrgAssertjCoreUtilFailureMessages_initialize();
  return @"\nExpecting actual not to be null";
}

void OrgAssertjCoreUtilFailureMessages_init(OrgAssertjCoreUtilFailureMessages *self) {
  NSObject_init(self);
}

OrgAssertjCoreUtilFailureMessages *new_OrgAssertjCoreUtilFailureMessages_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreUtilFailureMessages, init)
}

OrgAssertjCoreUtilFailureMessages *create_OrgAssertjCoreUtilFailureMessages_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreUtilFailureMessages, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreUtilFailureMessages)
