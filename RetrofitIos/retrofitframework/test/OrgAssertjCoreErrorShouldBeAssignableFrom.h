//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/error/ShouldBeAssignableFrom.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldBeAssignableFrom")
#ifdef RESTRICT_OrgAssertjCoreErrorShouldBeAssignableFrom
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldBeAssignableFrom 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorShouldBeAssignableFrom 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorShouldBeAssignableFrom

#if !defined (OrgAssertjCoreErrorShouldBeAssignableFrom_) && (INCLUDE_ALL_OrgAssertjCoreErrorShouldBeAssignableFrom || defined(INCLUDE_OrgAssertjCoreErrorShouldBeAssignableFrom))
#define OrgAssertjCoreErrorShouldBeAssignableFrom_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@class IOSClass;
@protocol JavaUtilSet;
@protocol OrgAssertjCoreErrorErrorMessageFactory;

@interface OrgAssertjCoreErrorShouldBeAssignableFrom : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeAssignableFromWithIOSClass:(IOSClass *)actual
                                                                 withJavaUtilSet:(id<JavaUtilSet>)expectedAssignableFrom
                                                                 withJavaUtilSet:(id<JavaUtilSet>)missingAssignableFrom;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorShouldBeAssignableFrom)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeAssignableFrom_shouldBeAssignableFromWithIOSClass_withJavaUtilSet_withJavaUtilSet_(IOSClass *actual, id<JavaUtilSet> expectedAssignableFrom, id<JavaUtilSet> missingAssignableFrom);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorShouldBeAssignableFrom)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorShouldBeAssignableFrom")
