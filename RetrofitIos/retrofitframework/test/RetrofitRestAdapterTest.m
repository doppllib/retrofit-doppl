//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/retrofit/RestAdapterTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiAbstractBooleanAssert.h"
#include "OrgAssertjCoreApiAbstractCharSequenceAssert.h"
#include "OrgAssertjCoreApiAbstractComparableAssert.h"
#include "OrgAssertjCoreApiAbstractInputStreamAssert.h"
#include "OrgAssertjCoreApiAbstractIntegerAssert.h"
#include "OrgAssertjCoreApiAbstractListAssert.h"
#include "OrgAssertjCoreApiAbstractObjectAssert.h"
#include "OrgAssertjCoreApiAbstractThrowableAssert.h"
#include "OrgAssertjCoreApiAssertions.h"
#include "RetrofitCallback.h"
#include "RetrofitCallbackRunnable.h"
#include "RetrofitClientClient.h"
#include "RetrofitClientHeader.h"
#include "RetrofitClientRequest.h"
#include "RetrofitClientResponse.h"
#include "RetrofitConverterConversionException.h"
#include "RetrofitHttpBody.h"
#include "RetrofitHttpGET.h"
#include "RetrofitHttpHeaders.h"
#include "RetrofitHttpPOST.h"
#include "RetrofitHttpPath.h"
#include "RetrofitHttpStreaming.h"
#include "RetrofitMimeTypedInput.h"
#include "RetrofitMimeTypedString.h"
#include "RetrofitProfiler.h"
#include "RetrofitRestAdapter.h"
#include "RetrofitRestAdapterTest.h"
#include "RetrofitRetrofitError.h"
#include "RetrofitUtils.h"
#include "RxFunctionsAction1.h"
#include "RxObservable.h"
#include "RxSubscription.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/CharSequence.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Type.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/concurrent/Executor.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/mockito/ArgumentCaptor.h"
#include "org/mockito/Matchers.h"
#include "org/mockito/Mockito.h"
#include "org/mockito/invocation/InvocationOnMock.h"
#include "org/mockito/stubbing/Answer.h"
#include "org/mockito/stubbing/OngoingStubbing.h"
#include "org/mockito/stubbing/Stubber.h"
#include "org/mockito/verification/VerificationMode.h"

@protocol RetrofitMimeTypedOutput;
@protocol RetrofitRestAdapterTest_Example;

@interface RetrofitRestAdapterTest () {
 @public
  id<RetrofitClientClient> mockClient_;
  id<JavaUtilConcurrentExecutor> mockRequestExecutor_;
  id<JavaUtilConcurrentExecutor> mockCallbackExecutor_;
  id<RetrofitProfiler> mockProfiler_;
  id<RetrofitRestAdapterTest_Example> example_;
}

@end

J2OBJC_FIELD_SETTER(RetrofitRestAdapterTest, mockClient_, id<RetrofitClientClient>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapterTest, mockRequestExecutor_, id<JavaUtilConcurrentExecutor>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapterTest, mockCallbackExecutor_, id<JavaUtilConcurrentExecutor>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapterTest, mockProfiler_, id<RetrofitProfiler>)
J2OBJC_FIELD_SETTER(RetrofitRestAdapterTest, example_, id<RetrofitRestAdapterTest_Example>)

inline id<JavaUtilList> RetrofitRestAdapterTest_get_NO_HEADERS();
static id<JavaUtilList> RetrofitRestAdapterTest_NO_HEADERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RetrofitRestAdapterTest, NO_HEADERS, id<JavaUtilList>)

inline id<JavaUtilList> RetrofitRestAdapterTest_get_TWO_HEADERS();
static id<JavaUtilList> RetrofitRestAdapterTest_TWO_HEADERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RetrofitRestAdapterTest, TWO_HEADERS, id<JavaUtilList>)

inline id<RetrofitMimeTypedInput> RetrofitRestAdapterTest_get_NO_MIME_BODY();
static id<RetrofitMimeTypedInput> RetrofitRestAdapterTest_NO_MIME_BODY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RetrofitRestAdapterTest, NO_MIME_BODY, id<RetrofitMimeTypedInput>)

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$16();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$17();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$18();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$19();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$20();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$21();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$22();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$23();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$24();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$25();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$26();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$27();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$28();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$29();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$30();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest__Annotations$31();

@interface RetrofitRestAdapterTest_1 : NSObject < RetrofitMimeTypedInput >

- (instancetype)init;

- (NSString *)mimeType;

- (jlong)length;

- (JavaIoInputStream *)in;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_1)

__attribute__((unused)) static void RetrofitRestAdapterTest_1_init(RetrofitRestAdapterTest_1 *self);

__attribute__((unused)) static RetrofitRestAdapterTest_1 *new_RetrofitRestAdapterTest_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapterTest_1 *create_RetrofitRestAdapterTest_1_init();

@protocol RetrofitRestAdapterTest_Example < JavaObject >

- (NSString *)something;

- (id)somethingWithRetrofitMimeTypedOutput:(id<RetrofitMimeTypedOutput>)body;

- (void)somethingWithRetrofitCallback:(id<RetrofitCallback>)callback;

- (RetrofitClientResponse *)direct;

- (void)directWithRetrofitCallback:(id<RetrofitCallback>)callback;

- (RetrofitClientResponse *)streaming;

- (RxObservable *)observableWithNSString:(NSString *)body;

- (RxObservable *)observableWithNSString:(NSString *)x
                            withNSString:(NSString *)y;

@end

@interface RetrofitRestAdapterTest_Example : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_Example)

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$0();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$1();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$2();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$3();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$4();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$5();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$6();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$7();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$8();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$9();

__attribute__((unused)) static IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$10();

J2OBJC_TYPE_LITERAL_HEADER(RetrofitRestAdapterTest_Example)

@protocol RetrofitRestAdapterTest_InvalidExample < RetrofitRestAdapterTest_Example, JavaObject >

@end

@interface RetrofitRestAdapterTest_InvalidExample : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_InvalidExample)

J2OBJC_TYPE_LITERAL_HEADER(RetrofitRestAdapterTest_InvalidExample)

@interface RetrofitRestAdapterTest_2 : NSObject < RetrofitRestAdapter_Log > {
 @public
  id<JavaUtilList> val$logMessages_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

- (void)logWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_2)

__attribute__((unused)) static void RetrofitRestAdapterTest_2_initWithJavaUtilList_(RetrofitRestAdapterTest_2 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RetrofitRestAdapterTest_2 *new_RetrofitRestAdapterTest_2_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapterTest_2 *create_RetrofitRestAdapterTest_2_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RetrofitRestAdapterTest_3 : NSObject < RetrofitRestAdapter_Log > {
 @public
  id<JavaUtilList> val$logMessages_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

- (void)logWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_3)

__attribute__((unused)) static void RetrofitRestAdapterTest_3_initWithJavaUtilList_(RetrofitRestAdapterTest_3 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RetrofitRestAdapterTest_3 *new_RetrofitRestAdapterTest_3_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapterTest_3 *create_RetrofitRestAdapterTest_3_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RetrofitRestAdapterTest_4 : NSObject < RetrofitRestAdapter_Log > {
 @public
  id<JavaUtilList> val$logMessages_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

- (void)logWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_4)

__attribute__((unused)) static void RetrofitRestAdapterTest_4_initWithJavaUtilList_(RetrofitRestAdapterTest_4 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RetrofitRestAdapterTest_4 *new_RetrofitRestAdapterTest_4_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapterTest_4 *create_RetrofitRestAdapterTest_4_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RetrofitRestAdapterTest_5 : NSObject < RetrofitRestAdapter_Log > {
 @public
  id<JavaUtilList> val$logMessages_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

- (void)logWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_5)

__attribute__((unused)) static void RetrofitRestAdapterTest_5_initWithJavaUtilList_(RetrofitRestAdapterTest_5 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RetrofitRestAdapterTest_5 *new_RetrofitRestAdapterTest_5_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapterTest_5 *create_RetrofitRestAdapterTest_5_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RetrofitRestAdapterTest_6 : NSObject < RetrofitRestAdapter_Log > {
 @public
  id<JavaUtilList> val$logMessages_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

- (void)logWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_6)

__attribute__((unused)) static void RetrofitRestAdapterTest_6_initWithJavaUtilList_(RetrofitRestAdapterTest_6 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RetrofitRestAdapterTest_6 *new_RetrofitRestAdapterTest_6_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapterTest_6 *create_RetrofitRestAdapterTest_6_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RetrofitRestAdapterTest_7 : NSObject < RetrofitRestAdapter_Log > {
 @public
  id<JavaUtilList> val$logMessages_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

- (void)logWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_7)

__attribute__((unused)) static void RetrofitRestAdapterTest_7_initWithJavaUtilList_(RetrofitRestAdapterTest_7 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RetrofitRestAdapterTest_7 *new_RetrofitRestAdapterTest_7_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapterTest_7 *create_RetrofitRestAdapterTest_7_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RetrofitRestAdapterTest_8 : NSObject < RetrofitRestAdapter_Log > {
 @public
  id<JavaUtilList> val$logMessages_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

- (void)logWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_8)

__attribute__((unused)) static void RetrofitRestAdapterTest_8_initWithJavaUtilList_(RetrofitRestAdapterTest_8 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RetrofitRestAdapterTest_8 *new_RetrofitRestAdapterTest_8_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapterTest_8 *create_RetrofitRestAdapterTest_8_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RetrofitRestAdapterTest_9 : NSObject < RetrofitRestAdapter_Log > {
 @public
  id<JavaUtilList> val$logMessages_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

- (void)logWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_9)

__attribute__((unused)) static void RetrofitRestAdapterTest_9_initWithJavaUtilList_(RetrofitRestAdapterTest_9 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RetrofitRestAdapterTest_9 *new_RetrofitRestAdapterTest_9_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapterTest_9 *create_RetrofitRestAdapterTest_9_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RetrofitRestAdapterTest_10 : NSObject < RetrofitRestAdapter_Log > {
 @public
  id<JavaUtilList> val$logMessages_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

- (void)logWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_10)

__attribute__((unused)) static void RetrofitRestAdapterTest_10_initWithJavaUtilList_(RetrofitRestAdapterTest_10 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RetrofitRestAdapterTest_10 *new_RetrofitRestAdapterTest_10_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapterTest_10 *create_RetrofitRestAdapterTest_10_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RetrofitRestAdapterTest_11 : NSObject < RetrofitRestAdapter_Log > {
 @public
  id<JavaUtilList> val$logMessages_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

- (void)logWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_11)

__attribute__((unused)) static void RetrofitRestAdapterTest_11_initWithJavaUtilList_(RetrofitRestAdapterTest_11 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static RetrofitRestAdapterTest_11 *new_RetrofitRestAdapterTest_11_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapterTest_11 *create_RetrofitRestAdapterTest_11_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface RetrofitRestAdapterTest_12 : NSObject < OrgMockitoStubbingAnswer >

- (instancetype)init;

- (id)answerWithOrgMockitoInvocationInvocationOnMock:(id<OrgMockitoInvocationInvocationOnMock>)invocation;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_12)

__attribute__((unused)) static void RetrofitRestAdapterTest_12_init(RetrofitRestAdapterTest_12 *self);

__attribute__((unused)) static RetrofitRestAdapterTest_12 *new_RetrofitRestAdapterTest_12_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapterTest_12 *create_RetrofitRestAdapterTest_12_init();

@interface RetrofitRestAdapterTest_13 : NSObject < RetrofitMimeTypedInput > {
 @public
  JavaIoInputStream *val$is_;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)capture$0;

- (NSString *)mimeType;

- (jlong)length;

- (JavaIoInputStream *)in;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitRestAdapterTest_13)

__attribute__((unused)) static void RetrofitRestAdapterTest_13_initWithJavaIoInputStream_(RetrofitRestAdapterTest_13 *self, JavaIoInputStream *capture$0);

__attribute__((unused)) static RetrofitRestAdapterTest_13 *new_RetrofitRestAdapterTest_13_initWithJavaIoInputStream_(JavaIoInputStream *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitRestAdapterTest_13 *create_RetrofitRestAdapterTest_13_initWithJavaIoInputStream_(JavaIoInputStream *capture$0);

J2OBJC_INITIALIZED_DEFN(RetrofitRestAdapterTest)

@implementation RetrofitRestAdapterTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitRestAdapterTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
  JreStrongAssign(&mockClient_, OrgMockitoMockito_mockWithIOSClass_(RetrofitClientClient_class_()));
  JreStrongAssign(&mockRequestExecutor_, OrgMockitoMockito_spyWithId_(create_RetrofitUtils_SynchronousExecutor_init()));
  JreStrongAssign(&mockCallbackExecutor_, OrgMockitoMockito_spyWithId_(create_RetrofitUtils_SynchronousExecutor_init()));
  JreStrongAssign(&mockProfiler_, OrgMockitoMockito_mockWithIOSClass_(RetrofitProfiler_class_()));
  JreStrongAssign(&example_, [((RetrofitRestAdapter *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([create_RetrofitRestAdapter_Builder_init() setClientWithRetrofitClientClient:mockClient_])) setExecutorsWithJavaUtilConcurrentExecutor:mockRequestExecutor_ withJavaUtilConcurrentExecutor:mockCallbackExecutor_])) setEndpointWithNSString:@"http://example.com"])) setProfilerWithRetrofitProfiler:mockProfiler_])) build])) createWithIOSClass:RetrofitRestAdapterTest_Example_class_()]);
}

- (void)objectMethodsStillWork {
  [((OrgAssertjCoreApiAbstractIntegerAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithInt_(((jint) [((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) hash])))) isNotZero];
  [((OrgAssertjCoreApiAbstractBooleanAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithBoolean_([((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) isEqual:self]))) isFalse];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) description]))) isNotEmpty];
}

- (void)interfaceWithExtendIsNotSupported {
  @try {
    [((RetrofitRestAdapter *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([create_RetrofitRestAdapter_Builder_init() setEndpointWithNSString:@"http://foo/"])) build])) createWithIOSClass:RetrofitRestAdapterTest_InvalidExample_class_()];
    OrgAssertjCoreApiAssertions_failWithNSString_(@"Interface inheritance should not be supported.");
  }
  @catch (JavaLangIllegalArgumentException *e) {
    [((OrgAssertjCoreApiAbstractThrowableAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSException_(e))) hasMessageWithNSString:@"Interface definitions must not extend other interfaces."];
  }
}

- (void)profilerObjectPassThrough {
  id data = create_NSObject_init();
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitProfiler>) nil_chk(mockProfiler_)) beforeCall]))) thenReturnWithId:data];
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_NO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"Hey"))];
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) something];
  [((id<RetrofitProfiler>) nil_chk(OrgMockitoMockito_verifyWithId_(mockProfiler_))) beforeCall];
  [((id<RetrofitClientClient>) nil_chk(OrgMockitoMockito_verifyWithId_(mockClient_))) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())];
  [((id<RetrofitProfiler>) nil_chk(OrgMockitoMockito_verifyWithId_(mockProfiler_))) afterCallWithRetrofitProfiler_RequestInformation:OrgMockitoMatchers_anyWithIOSClass_(RetrofitProfiler_RequestInformation_class_()) withLong:OrgMockitoMatchers_anyInt() withInt:OrgMockitoMatchers_eqWithInt_(200) withId:OrgMockitoMatchers_sameWithId_(data)];
}

- (void)logRequestResponseBasic {
  id<JavaUtilList> logMessages = create_JavaUtilArrayList_init();
  id<RetrofitRestAdapter_Log> log = create_RetrofitRestAdapterTest_2_initWithJavaUtilList_(logMessages);
  id<RetrofitRestAdapterTest_Example> example = [((RetrofitRestAdapter *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([create_RetrofitRestAdapter_Builder_init() setClientWithRetrofitClientClient:mockClient_])) setExecutorsWithJavaUtilConcurrentExecutor:mockRequestExecutor_ withJavaUtilConcurrentExecutor:mockCallbackExecutor_])) setEndpointWithNSString:@"http://example.com"])) setProfilerWithRetrofitProfiler:mockProfiler_])) setLogWithRetrofitRestAdapter_Log:log])) setLogLevelWithRetrofitRestAdapter_LogLevel:JreLoadEnum(RetrofitRestAdapter_LogLevel, BASIC)])) build])) createWithIOSClass:RetrofitRestAdapterTest_Example_class_()];
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_TWO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"Hi"))];
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example)) something];
  [((OrgAssertjCoreApiAbstractListAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaUtilList_(logMessages))) hasSizeWithInt:2];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:0]))) isEqualToWithId:@"---> HTTP GET http://example.com/"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:1]))) matchesWithJavaLangCharSequence:@"<--- HTTP 200 http://example.com/ \\([0-9]+ms\\)"];
}

- (void)logRequestResponseHeaders {
  id<JavaUtilList> logMessages = create_JavaUtilArrayList_init();
  id<RetrofitRestAdapter_Log> log = create_RetrofitRestAdapterTest_3_initWithJavaUtilList_(logMessages);
  id<RetrofitRestAdapterTest_Example> example = [((RetrofitRestAdapter *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([create_RetrofitRestAdapter_Builder_init() setClientWithRetrofitClientClient:mockClient_])) setExecutorsWithJavaUtilConcurrentExecutor:mockRequestExecutor_ withJavaUtilConcurrentExecutor:mockCallbackExecutor_])) setEndpointWithNSString:@"http://example.com"])) setProfilerWithRetrofitProfiler:mockProfiler_])) setLogWithRetrofitRestAdapter_Log:log])) setLogLevelWithRetrofitRestAdapter_LogLevel:JreLoadEnum(RetrofitRestAdapter_LogLevel, HEADERS)])) build])) createWithIOSClass:RetrofitRestAdapterTest_Example_class_()];
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_TWO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"Hi"))];
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example)) something];
  [((OrgAssertjCoreApiAbstractListAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaUtilList_(logMessages))) hasSizeWithInt:7];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:0]))) isEqualToWithId:@"---> HTTP GET http://example.com/"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:1]))) isEqualToWithId:@"Foo: Bar"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:2]))) isEqualToWithId:@"---> END HTTP (no body)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:3]))) matchesWithJavaLangCharSequence:@"<--- HTTP 200 http://example.com/ \\([0-9]+ms\\)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:4]))) isEqualToWithId:@"Content-Type: application/json"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:5]))) isEqualToWithId:@"Content-Length: 42"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:6]))) isEqualToWithId:@"<--- END HTTP (2-byte body)"];
}

- (void)logRequestResponseHeadersAndArgs {
  id<JavaUtilList> logMessages = create_JavaUtilArrayList_init();
  id<RetrofitRestAdapter_Log> log = create_RetrofitRestAdapterTest_4_initWithJavaUtilList_(logMessages);
  id<RetrofitRestAdapterTest_Example> example = [((RetrofitRestAdapter *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([create_RetrofitRestAdapter_Builder_init() setClientWithRetrofitClientClient:mockClient_])) setExecutorsWithJavaUtilConcurrentExecutor:mockRequestExecutor_ withJavaUtilConcurrentExecutor:mockCallbackExecutor_])) setEndpointWithNSString:@"http://example.com"])) setProfilerWithRetrofitProfiler:mockProfiler_])) setLogWithRetrofitRestAdapter_Log:log])) setLogLevelWithRetrofitRestAdapter_LogLevel:JreLoadEnum(RetrofitRestAdapter_LogLevel, HEADERS_AND_ARGS)])) build])) createWithIOSClass:RetrofitRestAdapterTest_Example_class_()];
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_TWO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"Hi"))];
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example)) something];
  [((OrgAssertjCoreApiAbstractListAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaUtilList_(logMessages))) hasSizeWithInt:9];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:0]))) isEqualToWithId:@"---> HTTP GET http://example.com/"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:1]))) isEqualToWithId:@"Foo: Bar"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:2]))) isEqualToWithId:@"---> END HTTP (no body)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:3]))) matchesWithJavaLangCharSequence:@"<--- HTTP 200 http://example.com/ \\([0-9]+ms\\)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:4]))) isEqualToWithId:@"Content-Type: application/json"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:5]))) isEqualToWithId:@"Content-Length: 42"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:6]))) isEqualToWithId:@"<--- END HTTP (2-byte body)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:7]))) isEqualToWithId:@"<--- BODY:"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:8]))) isEqualToWithId:@"Hi"];
}

- (void)logSuccessfulRequestResponseFullWhenResponseBodyPresent {
  id<JavaUtilList> logMessages = create_JavaUtilArrayList_init();
  id<RetrofitRestAdapter_Log> log = create_RetrofitRestAdapterTest_5_initWithJavaUtilList_(logMessages);
  id<RetrofitRestAdapterTest_Example> example = [((RetrofitRestAdapter *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([create_RetrofitRestAdapter_Builder_init() setClientWithRetrofitClientClient:mockClient_])) setExecutorsWithJavaUtilConcurrentExecutor:mockRequestExecutor_ withJavaUtilConcurrentExecutor:mockCallbackExecutor_])) setEndpointWithNSString:@"http://example.com"])) setProfilerWithRetrofitProfiler:mockProfiler_])) setLogWithRetrofitRestAdapter_Log:log])) setLogLevelWithRetrofitRestAdapter_LogLevel:JreLoadEnum(RetrofitRestAdapter_LogLevel, FULL)])) build])) createWithIOSClass:RetrofitRestAdapterTest_Example_class_()];
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_TWO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"{}"))];
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example)) somethingWithRetrofitMimeTypedOutput:create_RetrofitMimeTypedString_initWithNSString_(@"Hi")];
  [((OrgAssertjCoreApiAbstractListAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaUtilList_(logMessages))) hasSizeWithInt:13];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:0]))) isEqualToWithId:@"---> HTTP POST http://example.com/"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:1]))) isEqualToWithId:@"Foo: Bar"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:2]))) isEqualToWithId:@"Content-Type: text/plain; charset=UTF-8"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:3]))) isEqualToWithId:@"Content-Length: 2"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:4]))) isEqualToWithId:@""];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:5]))) isEqualToWithId:@"Hi"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:6]))) isEqualToWithId:@"---> END HTTP (2-byte body)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:7]))) matchesWithJavaLangCharSequence:@"<--- HTTP 200 http://example.com/ \\([0-9]+ms\\)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:8]))) isEqualToWithId:@"Content-Type: application/json"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:9]))) isEqualToWithId:@"Content-Length: 42"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:10]))) isEqualToWithId:@""];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:11]))) isEqualToWithId:@"{}"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:12]))) isEqualToWithId:@"<--- END HTTP (2-byte body)"];
}

- (void)logSuccessfulRequestResponseHeadersAndArgsWhenResponseBodyPresent {
  id<JavaUtilList> logMessages = create_JavaUtilArrayList_init();
  id<RetrofitRestAdapter_Log> log = create_RetrofitRestAdapterTest_6_initWithJavaUtilList_(logMessages);
  id<RetrofitRestAdapterTest_Example> example = [((RetrofitRestAdapter *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([create_RetrofitRestAdapter_Builder_init() setClientWithRetrofitClientClient:mockClient_])) setExecutorsWithJavaUtilConcurrentExecutor:mockRequestExecutor_ withJavaUtilConcurrentExecutor:mockCallbackExecutor_])) setEndpointWithNSString:@"http://example.com"])) setProfilerWithRetrofitProfiler:mockProfiler_])) setLogWithRetrofitRestAdapter_Log:log])) setLogLevelWithRetrofitRestAdapter_LogLevel:JreLoadEnum(RetrofitRestAdapter_LogLevel, HEADERS_AND_ARGS)])) build])) createWithIOSClass:RetrofitRestAdapterTest_Example_class_()];
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_TWO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"{}"))];
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example)) somethingWithRetrofitMimeTypedOutput:create_RetrofitMimeTypedString_initWithNSString_(@"Hi")];
  [((OrgAssertjCoreApiAbstractListAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaUtilList_(logMessages))) hasSizeWithInt:13];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:0]))) isEqualToWithId:@"---> HTTP POST http://example.com/"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:1]))) isEqualToWithId:@"Foo: Bar"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:2]))) isEqualToWithId:@"Content-Type: text/plain; charset=UTF-8"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:3]))) isEqualToWithId:@"Content-Length: 2"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:4]))) isEqualToWithId:@"---> REQUEST:"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:5]))) isEqualToWithId:@"#0: TypedString[Hi]"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:6]))) isEqualToWithId:@"---> END HTTP (2-byte body)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:7]))) matchesWithJavaLangCharSequence:@"<--- HTTP 200 http://example.com/ \\([0-9]+ms\\)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:8]))) isEqualToWithId:@"Content-Type: application/json"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:9]))) isEqualToWithId:@"Content-Length: 42"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:10]))) isEqualToWithId:@"<--- END HTTP (2-byte body)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:11]))) isEqualToWithId:@"<--- BODY:"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:12]))) isEqualToWithId:@"{}"];
}

- (void)logSuccessfulRequestResponseFullWhenResponseBodyAbsent {
  id<JavaUtilList> logMessages = create_JavaUtilArrayList_init();
  id<RetrofitRestAdapter_Log> log = create_RetrofitRestAdapterTest_7_initWithJavaUtilList_(logMessages);
  id<RetrofitRestAdapterTest_Example> example = [((RetrofitRestAdapter *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([create_RetrofitRestAdapter_Builder_init() setClientWithRetrofitClientClient:mockClient_])) setExecutorsWithJavaUtilConcurrentExecutor:mockRequestExecutor_ withJavaUtilConcurrentExecutor:mockCallbackExecutor_])) setEndpointWithNSString:@"http://example.com"])) setProfilerWithRetrofitProfiler:mockProfiler_])) setLogWithRetrofitRestAdapter_Log:log])) setLogLevelWithRetrofitRestAdapter_LogLevel:JreLoadEnum(RetrofitRestAdapter_LogLevel, FULL)])) build])) createWithIOSClass:RetrofitRestAdapterTest_Example_class_()];
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_TWO_HEADERS, nil)];
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example)) something];
  [((OrgAssertjCoreApiAbstractListAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaUtilList_(logMessages))) hasSizeWithInt:7];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:0]))) isEqualToWithId:@"---> HTTP GET http://example.com/"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:1]))) isEqualToWithId:@"Foo: Bar"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:2]))) isEqualToWithId:@"---> END HTTP (no body)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:3]))) matchesWithJavaLangCharSequence:@"<--- HTTP 200 http://example.com/ \\([0-9]+ms\\)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:4]))) isEqualToWithId:@"Content-Type: application/json"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:5]))) isEqualToWithId:@"Content-Length: 42"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:6]))) isEqualToWithId:@"<--- END HTTP (0-byte body)"];
}

- (void)logSuccessfulRequestResponseHeadersAndArgsWhenResponseBodyAbsent {
  id<JavaUtilList> logMessages = create_JavaUtilArrayList_init();
  id<RetrofitRestAdapter_Log> log = create_RetrofitRestAdapterTest_8_initWithJavaUtilList_(logMessages);
  id<RetrofitRestAdapterTest_Example> example = [((RetrofitRestAdapter *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([create_RetrofitRestAdapter_Builder_init() setClientWithRetrofitClientClient:mockClient_])) setExecutorsWithJavaUtilConcurrentExecutor:mockRequestExecutor_ withJavaUtilConcurrentExecutor:mockCallbackExecutor_])) setEndpointWithNSString:@"http://example.com"])) setProfilerWithRetrofitProfiler:mockProfiler_])) setLogWithRetrofitRestAdapter_Log:log])) setLogLevelWithRetrofitRestAdapter_LogLevel:JreLoadEnum(RetrofitRestAdapter_LogLevel, HEADERS_AND_ARGS)])) build])) createWithIOSClass:RetrofitRestAdapterTest_Example_class_()];
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_TWO_HEADERS, nil)];
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example)) somethingWithRetrofitMimeTypedOutput:create_RetrofitMimeTypedString_initWithNSString_(@"Hi")];
  [((OrgAssertjCoreApiAbstractListAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaUtilList_(logMessages))) hasSizeWithInt:11];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:0]))) isEqualToWithId:@"---> HTTP POST http://example.com/"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:1]))) isEqualToWithId:@"Foo: Bar"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:2]))) isEqualToWithId:@"Content-Type: text/plain; charset=UTF-8"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:3]))) isEqualToWithId:@"Content-Length: 2"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:4]))) isEqualToWithId:@"---> REQUEST:"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:5]))) isEqualToWithId:@"#0: TypedString[Hi]"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:6]))) isEqualToWithId:@"---> END HTTP (2-byte body)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:7]))) matchesWithJavaLangCharSequence:@"<--- HTTP 200 http://example.com/ \\([0-9]+ms\\)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:8]))) isEqualToWithId:@"Content-Type: application/json"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:9]))) isEqualToWithId:@"Content-Length: 42"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:10]))) isEqualToWithId:@"<--- END HTTP (0-byte body)"];
}

- (void)successfulRequestResponseWhenMimeTypeMissing {
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_NO_HEADERS, RetrofitRestAdapterTest_NO_MIME_BODY)];
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) something];
}

- (void)logSuccessfulRequestResponseFullWhenMimeTypeMissing {
  id<JavaUtilList> logMessages = create_JavaUtilArrayList_init();
  id<RetrofitRestAdapter_Log> log = create_RetrofitRestAdapterTest_9_initWithJavaUtilList_(logMessages);
  id<RetrofitRestAdapterTest_Example> example = [((RetrofitRestAdapter *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([create_RetrofitRestAdapter_Builder_init() setClientWithRetrofitClientClient:mockClient_])) setExecutorsWithJavaUtilConcurrentExecutor:mockRequestExecutor_ withJavaUtilConcurrentExecutor:mockCallbackExecutor_])) setEndpointWithNSString:@"http://example.com"])) setProfilerWithRetrofitProfiler:mockProfiler_])) setLogWithRetrofitRestAdapter_Log:log])) setLogLevelWithRetrofitRestAdapter_LogLevel:JreLoadEnum(RetrofitRestAdapter_LogLevel, FULL)])) build])) createWithIOSClass:RetrofitRestAdapterTest_Example_class_()];
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_TWO_HEADERS, RetrofitRestAdapterTest_NO_MIME_BODY)];
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example)) something];
  [((OrgAssertjCoreApiAbstractListAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaUtilList_(logMessages))) hasSizeWithInt:9];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:0]))) isEqualToWithId:@"---> HTTP GET http://example.com/"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:1]))) isEqualToWithId:@"Foo: Bar"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:2]))) isEqualToWithId:@"---> END HTTP (no body)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:3]))) matchesWithJavaLangCharSequence:@"<--- HTTP 200 http://example.com/ \\([0-9]+ms\\)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:4]))) isEqualToWithId:@"Content-Type: application/json"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:5]))) isEqualToWithId:@"Content-Length: 42"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:6]))) isEqualToWithId:@""];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:7]))) isEqualToWithId:@"Hi"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:8]))) isEqualToWithId:@"<--- END HTTP (2-byte body)"];
}

- (void)synchronousDoesNotUseExecutors {
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_NO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"Hi"))];
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) something];
  OrgMockitoMockito_verifyZeroInteractionsWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ mockRequestExecutor_ } count:1 type:NSObject_class_()]);
  OrgMockitoMockito_verifyZeroInteractionsWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ mockCallbackExecutor_ } count:1 type:NSObject_class_()]);
}

- (void)asynchronousUsesExecutors {
  RetrofitClientResponse *response = create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_NO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"Hey"));
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:response];
  id<RetrofitCallback> callback = OrgMockitoMockito_mockWithIOSClass_(RetrofitCallback_class_());
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) somethingWithRetrofitCallback:callback];
  [((id<JavaUtilConcurrentExecutor>) nil_chk(OrgMockitoMockito_verifyWithId_(mockRequestExecutor_))) executeWithJavaLangRunnable:OrgMockitoMatchers_anyWithIOSClass_(RetrofitCallbackRunnable_class_())];
  [((id<JavaUtilConcurrentExecutor>) nil_chk(OrgMockitoMockito_verifyWithId_(mockCallbackExecutor_))) executeWithJavaLangRunnable:OrgMockitoMatchers_anyWithIOSClass_(JavaLangRunnable_class_())];
  [((id<RetrofitCallback>) nil_chk(OrgMockitoMockito_verifyWithId_(callback))) successWithId:OrgMockitoMatchers_eqWithId_(@"Hey") withRetrofitClientResponse:OrgMockitoMatchers_sameWithId_(response)];
}

- (void)malformedResponseThrowsConversionException {
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_NO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"{"))];
  @try {
    [((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) something];
    OrgAssertjCoreApiAssertions_failWithNSString_(@"RetrofitError expected on malformed response body.");
  }
  @catch (RetrofitRetrofitError *e) {
    [((OrgAssertjCoreApiAbstractComparableAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaLangComparable_([((RetrofitRetrofitError *) nil_chk(e)) getKind]))) isEqualToWithId:JreLoadEnum(RetrofitRetrofitError_Kind, CONVERSION)];
    [((OrgAssertjCoreApiAbstractIntegerAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithInt_([((RetrofitClientResponse *) nil_chk([e getResponse])) getStatus]))) isEqualToWithInt:200];
    [((OrgAssertjCoreApiAbstractThrowableAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSException_([e getCause]))) isInstanceOfWithIOSClass:RetrofitConverterConversionException_class_()];
    [((OrgAssertjCoreApiAbstractObjectAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithId_([((RetrofitClientResponse *) nil_chk([e getResponse])) getBody]))) isNull];
  }
}

- (void)errorResponseThrowsHttpError {
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 500, @"Internal Server Error", RetrofitRestAdapterTest_NO_HEADERS, nil)];
  @try {
    [((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) something];
    OrgAssertjCoreApiAssertions_failWithNSString_(@"RetrofitError expected on non-2XX response code.");
  }
  @catch (RetrofitRetrofitError *e) {
    [((OrgAssertjCoreApiAbstractComparableAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaLangComparable_([((RetrofitRetrofitError *) nil_chk(e)) getKind]))) isEqualToWithId:JreLoadEnum(RetrofitRetrofitError_Kind, HTTP)];
    [((OrgAssertjCoreApiAbstractIntegerAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithInt_([((RetrofitClientResponse *) nil_chk([e getResponse])) getStatus]))) isEqualToWithInt:500];
    [((OrgAssertjCoreApiAbstractObjectAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithId_([e getSuccessType]))) isEqualToWithId:NSString_class_()];
  }
}

- (void)logErrorRequestResponseFullWhenMimeTypeMissing {
  id<JavaUtilList> logMessages = create_JavaUtilArrayList_init();
  id<RetrofitRestAdapter_Log> log = create_RetrofitRestAdapterTest_10_initWithJavaUtilList_(logMessages);
  id<RetrofitRestAdapterTest_Example> example = [((RetrofitRestAdapter *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([create_RetrofitRestAdapter_Builder_init() setClientWithRetrofitClientClient:mockClient_])) setExecutorsWithJavaUtilConcurrentExecutor:mockRequestExecutor_ withJavaUtilConcurrentExecutor:mockCallbackExecutor_])) setEndpointWithNSString:@"http://example.com"])) setProfilerWithRetrofitProfiler:mockProfiler_])) setLogWithRetrofitRestAdapter_Log:log])) setLogLevelWithRetrofitRestAdapter_LogLevel:JreLoadEnum(RetrofitRestAdapter_LogLevel, FULL)])) build])) createWithIOSClass:RetrofitRestAdapterTest_Example_class_()];
  RetrofitClientResponse *responseMissingMimeType = create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 403, @"Forbidden", RetrofitRestAdapterTest_TWO_HEADERS, RetrofitRestAdapterTest_NO_MIME_BODY);
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:responseMissingMimeType];
  @try {
    [((id<RetrofitRestAdapterTest_Example>) nil_chk(example)) something];
    OrgAssertjCoreApiAssertions_failWithNSString_(@"RetrofitError expected on non-2XX response code.");
  }
  @catch (RetrofitRetrofitError *e) {
    [((OrgAssertjCoreApiAbstractIntegerAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithInt_([((RetrofitClientResponse *) nil_chk([((RetrofitRetrofitError *) nil_chk(e)) getResponse])) getStatus]))) isEqualToWithInt:403];
  }
  [((OrgAssertjCoreApiAbstractListAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaUtilList_(logMessages))) hasSizeWithInt:9];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:0]))) isEqualToWithId:@"---> HTTP GET http://example.com/"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:1]))) isEqualToWithId:@"Foo: Bar"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:2]))) isEqualToWithId:@"---> END HTTP (no body)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:3]))) matchesWithJavaLangCharSequence:@"<--- HTTP 403 http://example.com/ \\([0-9]+ms\\)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:4]))) isEqualToWithId:@"Content-Type: application/json"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:5]))) isEqualToWithId:@"Content-Length: 42"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:6]))) isEqualToWithId:@""];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:7]))) isEqualToWithId:@"Hi"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:8]))) isEqualToWithId:@"<--- END HTTP (2-byte body)"];
}

- (void)logErrorRequestResponseFullWhenResponseBodyAbsent {
  id<JavaUtilList> logMessages = create_JavaUtilArrayList_init();
  id<RetrofitRestAdapter_Log> log = create_RetrofitRestAdapterTest_11_initWithJavaUtilList_(logMessages);
  id<RetrofitRestAdapterTest_Example> example = [((RetrofitRestAdapter *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([create_RetrofitRestAdapter_Builder_init() setClientWithRetrofitClientClient:mockClient_])) setExecutorsWithJavaUtilConcurrentExecutor:mockRequestExecutor_ withJavaUtilConcurrentExecutor:mockCallbackExecutor_])) setEndpointWithNSString:@"http://example.com"])) setProfilerWithRetrofitProfiler:mockProfiler_])) setLogWithRetrofitRestAdapter_Log:log])) setLogLevelWithRetrofitRestAdapter_LogLevel:JreLoadEnum(RetrofitRestAdapter_LogLevel, FULL)])) build])) createWithIOSClass:RetrofitRestAdapterTest_Example_class_()];
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 500, @"Internal Server Error", RetrofitRestAdapterTest_TWO_HEADERS, nil)];
  @try {
    [((id<RetrofitRestAdapterTest_Example>) nil_chk(example)) something];
    OrgAssertjCoreApiAssertions_failWithNSString_(@"RetrofitError expected on non-2XX response code.");
  }
  @catch (RetrofitRetrofitError *e) {
    [((OrgAssertjCoreApiAbstractIntegerAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithInt_([((RetrofitClientResponse *) nil_chk([((RetrofitRetrofitError *) nil_chk(e)) getResponse])) getStatus]))) isEqualToWithInt:500];
  }
  [((OrgAssertjCoreApiAbstractListAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaUtilList_(logMessages))) hasSizeWithInt:7];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:0]))) isEqualToWithId:@"---> HTTP GET http://example.com/"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:1]))) isEqualToWithId:@"Foo: Bar"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:2]))) isEqualToWithId:@"---> END HTTP (no body)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:3]))) matchesWithJavaLangCharSequence:@"<--- HTTP 500 http://example.com/ \\([0-9]+ms\\)"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:4]))) isEqualToWithId:@"Content-Type: application/json"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:5]))) isEqualToWithId:@"Content-Length: 42"];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([logMessages getWithInt:6]))) isEqualToWithId:@"<--- END HTTP (0-byte body)"];
}

- (void)clientExceptionThrowsNetworkError {
  JavaIoIOException *exception = create_JavaIoIOException_initWithNSString_(@"I'm broken!");
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenThrowWithNSExceptionArray:[IOSObjectArray arrayWithObjects:(id[]){ exception } count:1 type:NSException_class_()]];
  @try {
    [((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) something];
    OrgAssertjCoreApiAssertions_failWithNSString_(@"RetrofitError expected when client throws exception.");
  }
  @catch (RetrofitRetrofitError *e) {
    [((OrgAssertjCoreApiAbstractComparableAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaLangComparable_([((RetrofitRetrofitError *) nil_chk(e)) getKind]))) isEqualToWithId:JreLoadEnum(RetrofitRetrofitError_Kind, NETWORK)];
    [((OrgAssertjCoreApiAbstractThrowableAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSException_([e getCause]))) isSameAsWithId:exception];
  }
}

- (void)bodyTypedInputExceptionThrowsNetworkError {
  id<RetrofitMimeTypedInput> body = OrgMockitoMockito_spyWithId_(create_RetrofitMimeTypedString_initWithNSString_(@"{}"));
  JavaIoInputStream *bodyStream = OrgMockitoMockito_mockWithIOSClass_withOrgMockitoStubbingAnswer_(JavaIoInputStream_class_(), create_RetrofitRestAdapterTest_12_init());
  [((id<RetrofitMimeTypedInput>) nil_chk([((id<OrgMockitoStubbingStubber>) nil_chk(OrgMockitoMockito_doReturnWithId_(bodyStream))) whenWithId:body])) in];
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_NO_HEADERS, body)];
  @try {
    [((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) something];
    OrgAssertjCoreApiAssertions_failWithNSString_(@"RetrofitError expected on malformed response body.");
  }
  @catch (RetrofitRetrofitError *e) {
    OrgAssertjCoreApiAssertions_assertThatWithBoolean_([((RetrofitRetrofitError *) nil_chk(e)) isNetworkError]);
    [((NSException *) nil_chk([e getCause])) printStackTrace];
    [((OrgAssertjCoreApiAbstractThrowableAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSException_([e getCause]))) isInstanceOfWithIOSClass:JavaIoIOException_class_()];
    [((OrgAssertjCoreApiAbstractComparableAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaLangComparable_([e getKind]))) isEqualToWithId:JreLoadEnum(RetrofitRetrofitError_Kind, NETWORK)];
    [((OrgAssertjCoreApiAbstractThrowableAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSException_([e getCause]))) hasMessageWithNSString:@"I'm broken!"];
  }
}

- (void)unexpectedExceptionThrows {
  JavaLangRuntimeException *exception = create_JavaLangRuntimeException_initWithNSString_(@"More breakage.");
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitProfiler>) nil_chk(mockProfiler_)) beforeCall]))) thenThrowWithNSExceptionArray:[IOSObjectArray arrayWithObjects:(id[]){ exception } count:1 type:NSException_class_()]];
  @try {
    [((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) something];
    OrgAssertjCoreApiAssertions_failWithNSString_(@"RetrofitError expected when unexpected exception thrown.");
  }
  @catch (RetrofitRetrofitError *e) {
    [((OrgAssertjCoreApiAbstractComparableAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaLangComparable_([((RetrofitRetrofitError *) nil_chk(e)) getKind]))) isEqualToWithId:JreLoadEnum(RetrofitRetrofitError_Kind, UNEXPECTED)];
    [((OrgAssertjCoreApiAbstractThrowableAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSException_([e getCause]))) isSameAsWithId:exception];
  }
}

- (void)getResponseDirectly {
  RetrofitClientResponse *response = create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_NO_HEADERS, nil);
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:response];
  [((OrgAssertjCoreApiAbstractObjectAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithId_([((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) direct]))) isSameAsWithId:response];
}

- (void)streamingResponse {
  JavaIoInputStream *is = create_JavaIoByteArrayInputStream_initWithByteArray_([@"Hey" java_getBytesWithCharsetName:@"UTF-8"]);
  id<RetrofitMimeTypedInput> in = create_RetrofitRestAdapterTest_13_initWithJavaIoInputStream_(is);
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_NO_HEADERS, in)];
  RetrofitClientResponse *response = [((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) streaming];
  [((OrgAssertjCoreApiAbstractInputStreamAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithJavaIoInputStream_([((id<RetrofitMimeTypedInput>) nil_chk([((RetrofitClientResponse *) nil_chk(response)) getBody])) in]))) isSameAsWithId:is];
}

- (void)closeInputStream {
  id<RetrofitRestAdapterTest_Example> example = [((RetrofitRestAdapter *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([((RetrofitRestAdapter_Builder *) nil_chk([create_RetrofitRestAdapter_Builder_init() setClientWithRetrofitClientClient:mockClient_])) setExecutorsWithJavaUtilConcurrentExecutor:mockRequestExecutor_ withJavaUtilConcurrentExecutor:mockCallbackExecutor_])) setEndpointWithNSString:@"http://example.com"])) setProfilerWithRetrofitProfiler:mockProfiler_])) setLogWithRetrofitRestAdapter_Log:JreLoadStatic(RetrofitRestAdapter_Log, NONE)])) setLogLevelWithRetrofitRestAdapter_LogLevel:JreLoadEnum(RetrofitRestAdapter_LogLevel, FULL)])) build])) createWithIOSClass:RetrofitRestAdapterTest_Example_class_()];
  JavaIoByteArrayInputStream *is = OrgMockitoMockito_spyWithId_(create_JavaIoByteArrayInputStream_initWithByteArray_([@"hello" java_getBytes]));
  id<RetrofitMimeTypedInput> typedInput = OrgMockitoMockito_mockWithIOSClass_(RetrofitMimeTypedInput_class_());
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitMimeTypedInput>) nil_chk(typedInput)) in]))) thenReturnWithId:is];
  RetrofitClientResponse *response = create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_NO_HEADERS, typedInput);
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:response];
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example)) something];
  [((JavaIoByteArrayInputStream *) nil_chk(OrgMockitoMockito_verifyWithId_(is))) close];
}

- (void)getResponseDirectlyAsync {
  RetrofitClientResponse *response = create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_NO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"Hey"));
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:response];
  id<RetrofitCallback> callback = OrgMockitoMockito_mockWithIOSClass_(RetrofitCallback_class_());
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) directWithRetrofitCallback:callback];
  [((id<JavaUtilConcurrentExecutor>) nil_chk(OrgMockitoMockito_verifyWithId_(mockRequestExecutor_))) executeWithJavaLangRunnable:OrgMockitoMatchers_anyWithIOSClass_(RetrofitCallbackRunnable_class_())];
  [((id<JavaUtilConcurrentExecutor>) nil_chk(OrgMockitoMockito_verifyWithId_(mockCallbackExecutor_))) executeWithJavaLangRunnable:OrgMockitoMatchers_anyWithIOSClass_(JavaLangRunnable_class_())];
  [((id<RetrofitCallback>) nil_chk(OrgMockitoMockito_verifyWithId_(callback))) successWithId:OrgMockitoMatchers_eqWithId_(response) withRetrofitClientResponse:OrgMockitoMatchers_sameWithId_(response)];
}

- (void)getAsync {
  RetrofitClientResponse *response = create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_NO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"Hey"));
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:response];
  id<RetrofitCallback> callback = OrgMockitoMockito_mockWithIOSClass_(RetrofitCallback_class_());
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) somethingWithRetrofitCallback:callback];
  [((id<JavaUtilConcurrentExecutor>) nil_chk(OrgMockitoMockito_verifyWithId_(mockRequestExecutor_))) executeWithJavaLangRunnable:OrgMockitoMatchers_anyWithIOSClass_(RetrofitCallbackRunnable_class_())];
  [((id<JavaUtilConcurrentExecutor>) nil_chk(OrgMockitoMockito_verifyWithId_(mockCallbackExecutor_))) executeWithJavaLangRunnable:OrgMockitoMatchers_anyWithIOSClass_(JavaLangRunnable_class_())];
  OrgMockitoArgumentCaptor *responseCaptor = OrgMockitoArgumentCaptor_forClassWithIOSClass_(NSString_class_());
  [((id<RetrofitCallback>) nil_chk(OrgMockitoMockito_verifyWithId_(callback))) successWithId:[((OrgMockitoArgumentCaptor *) nil_chk(responseCaptor)) capture] withRetrofitClientResponse:OrgMockitoMatchers_sameWithId_(response)];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([responseCaptor getValue]))) isEqualToWithId:@"Hey"];
}

- (void)errorAsync {
  RetrofitClientResponse *response = create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 500, @"Broken!", RetrofitRestAdapterTest_NO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"Hey"));
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:response];
  id<RetrofitCallback> callback = OrgMockitoMockito_mockWithIOSClass_(RetrofitCallback_class_());
  [((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) somethingWithRetrofitCallback:callback];
  [((id<JavaUtilConcurrentExecutor>) nil_chk(OrgMockitoMockito_verifyWithId_(mockRequestExecutor_))) executeWithJavaLangRunnable:OrgMockitoMatchers_anyWithIOSClass_(RetrofitCallbackRunnable_class_())];
  [((id<JavaUtilConcurrentExecutor>) nil_chk(OrgMockitoMockito_verifyWithId_(mockCallbackExecutor_))) executeWithJavaLangRunnable:OrgMockitoMatchers_anyWithIOSClass_(JavaLangRunnable_class_())];
  OrgMockitoArgumentCaptor *errorCaptor = OrgMockitoArgumentCaptor_forClassWithIOSClass_(RetrofitRetrofitError_class_());
  [((id<RetrofitCallback>) nil_chk(OrgMockitoMockito_verifyWithId_(callback))) failureWithRetrofitRetrofitError:[((OrgMockitoArgumentCaptor *) nil_chk(errorCaptor)) capture]];
  RetrofitRetrofitError *error = [errorCaptor getValue];
  [((OrgAssertjCoreApiAbstractIntegerAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithInt_([((RetrofitClientResponse *) nil_chk([((RetrofitRetrofitError *) nil_chk(error)) getResponse])) getStatus]))) isEqualToWithInt:500];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([((RetrofitClientResponse *) nil_chk([error getResponse])) getReason]))) isEqualToWithId:@"Broken!"];
  [((OrgAssertjCoreApiAbstractObjectAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithId_([error getSuccessType]))) isEqualToWithId:NSString_class_()];
  [((OrgAssertjCoreApiAbstractObjectAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithId_([error getBody]))) isEqualToWithId:@"Hey"];
}

- (void)observableCallsOnNext {
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_NO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"hello"))];
  id<RxFunctionsAction1> action = OrgMockitoMockito_mockWithIOSClass_(RxFunctionsAction1_class_());
  [((RxObservable *) nil_chk([((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) observableWithNSString:@"Howdy"])) subscribeWithRxFunctionsAction1:action];
  [((id<RxFunctionsAction1>) nil_chk(OrgMockitoMockito_verifyWithId_(action))) callWithId:OrgMockitoMatchers_eqWithId_(@"hello")];
}

- (void)observableCallsOnError {
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 300, @"FAIL", RetrofitRestAdapterTest_NO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"bummer"))];
  id<RxFunctionsAction1> onSuccess = OrgMockitoMockito_mockWithIOSClass_(RxFunctionsAction1_class_());
  id<RxFunctionsAction1> onError = OrgMockitoMockito_mockWithIOSClass_(RxFunctionsAction1_class_());
  [((RxObservable *) nil_chk([((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) observableWithNSString:@"Howdy"])) subscribeWithRxFunctionsAction1:onSuccess withRxFunctionsAction1:onError];
  OrgMockitoMockito_verifyZeroInteractionsWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ onSuccess } count:1 type:NSObject_class_()]);
  OrgMockitoArgumentCaptor *errorCaptor = OrgMockitoArgumentCaptor_forClassWithIOSClass_(RetrofitRetrofitError_class_());
  [((id<RxFunctionsAction1>) nil_chk(OrgMockitoMockito_verifyWithId_(onError))) callWithId:[((OrgMockitoArgumentCaptor *) nil_chk(errorCaptor)) capture]];
  RetrofitRetrofitError *value = [errorCaptor getValue];
  [((OrgAssertjCoreApiAbstractObjectAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithId_([((RetrofitRetrofitError *) nil_chk(value)) getSuccessType]))) isEqualToWithId:NSString_class_()];
}

- (void)observableHandlesParams {
  OrgMockitoArgumentCaptor *requestCaptor = OrgMockitoArgumentCaptor_forClassWithIOSClass_(RetrofitClientRequest_class_());
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:[((OrgMockitoArgumentCaptor *) nil_chk(requestCaptor)) capture]]))) thenReturnWithId:create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_NO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"hello"))];
  OrgMockitoArgumentCaptor *responseCaptor = OrgMockitoArgumentCaptor_forClassWithIOSClass_(RetrofitClientResponse_class_());
  id<RxFunctionsAction1> action = OrgMockitoMockito_mockWithIOSClass_(RxFunctionsAction1_class_());
  [((RxObservable *) nil_chk([((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) observableWithNSString:@"X" withNSString:@"Y"])) subscribeWithRxFunctionsAction1:action];
  RetrofitClientRequest *request = [requestCaptor getValue];
  [((OrgAssertjCoreApiAbstractCharSequenceAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithNSString_([((RetrofitClientRequest *) nil_chk(request)) getUrl]))) containsWithJavaLangCharSequenceArray:[IOSObjectArray arrayWithObjects:(id[]){ @"/X/Y" } count:1 type:JavaLangCharSequence_class_()]];
  [((id<RxFunctionsAction1>) nil_chk(OrgMockitoMockito_verifyWithId_(action))) callWithId:[((OrgMockitoArgumentCaptor *) nil_chk(responseCaptor)) capture]];
  RetrofitClientResponse *response = [responseCaptor getValue];
  [((OrgAssertjCoreApiAbstractIntegerAssert *) nil_chk(OrgAssertjCoreApiAssertions_assertThatWithInt_([((RetrofitClientResponse *) nil_chk(response)) getStatus]))) isEqualToWithInt:200];
}

- (void)observableUsesHttpExecutor {
  RetrofitClientResponse *response = create_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_(@"http://example.com/", 200, @"OK", RetrofitRestAdapterTest_NO_HEADERS, create_RetrofitMimeTypedString_initWithNSString_(@"hello"));
  [((id<OrgMockitoStubbingOngoingStubbing>) nil_chk(OrgMockitoMockito_whenWithId_([((id<RetrofitClientClient>) nil_chk(mockClient_)) executeWithRetrofitClientRequest:OrgMockitoMatchers_anyWithIOSClass_(RetrofitClientRequest_class_())]))) thenReturnWithId:response];
  [((RxObservable *) nil_chk([((id<RetrofitRestAdapterTest_Example>) nil_chk(example_)) observableWithNSString:@"Howdy"])) subscribeWithRxFunctionsAction1:OrgMockitoMockito_mockWithIOSClass_(RxFunctionsAction1_class_())];
  [((id<JavaUtilConcurrentExecutor>) nil_chk(OrgMockitoMockito_verifyWithId_withOrgMockitoVerificationVerificationMode_(mockRequestExecutor_, OrgMockitoMockito_atLeastOnce()))) executeWithJavaLangRunnable:OrgMockitoMatchers_anyWithIOSClass_(JavaLangRunnable_class_())];
  OrgMockitoMockito_verifyZeroInteractionsWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ mockCallbackExecutor_ } count:1 type:NSObject_class_()]);
}

- (void)dealloc {
  RELEASE_(mockClient_);
  RELEASE_(mockRequestExecutor_);
  RELEASE_(mockCallbackExecutor_);
  RELEASE_(mockProfiler_);
  RELEASE_(example_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 13, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 14, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 15, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 16, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 17, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 18, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 19, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 20, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 21, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 22, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 23, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 24, -1 },
    { NULL, "V", 0x1, -1, -1, 25, -1, 26, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 27, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 28, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 29, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 30, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 31, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 32, -1 },
    { NULL, "V", 0x1, -1, -1, 25, -1, 33, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(objectMethodsStillWork);
  methods[3].selector = @selector(interfaceWithExtendIsNotSupported);
  methods[4].selector = @selector(profilerObjectPassThrough);
  methods[5].selector = @selector(logRequestResponseBasic);
  methods[6].selector = @selector(logRequestResponseHeaders);
  methods[7].selector = @selector(logRequestResponseHeadersAndArgs);
  methods[8].selector = @selector(logSuccessfulRequestResponseFullWhenResponseBodyPresent);
  methods[9].selector = @selector(logSuccessfulRequestResponseHeadersAndArgsWhenResponseBodyPresent);
  methods[10].selector = @selector(logSuccessfulRequestResponseFullWhenResponseBodyAbsent);
  methods[11].selector = @selector(logSuccessfulRequestResponseHeadersAndArgsWhenResponseBodyAbsent);
  methods[12].selector = @selector(successfulRequestResponseWhenMimeTypeMissing);
  methods[13].selector = @selector(logSuccessfulRequestResponseFullWhenMimeTypeMissing);
  methods[14].selector = @selector(synchronousDoesNotUseExecutors);
  methods[15].selector = @selector(asynchronousUsesExecutors);
  methods[16].selector = @selector(malformedResponseThrowsConversionException);
  methods[17].selector = @selector(errorResponseThrowsHttpError);
  methods[18].selector = @selector(logErrorRequestResponseFullWhenMimeTypeMissing);
  methods[19].selector = @selector(logErrorRequestResponseFullWhenResponseBodyAbsent);
  methods[20].selector = @selector(clientExceptionThrowsNetworkError);
  methods[21].selector = @selector(bodyTypedInputExceptionThrowsNetworkError);
  methods[22].selector = @selector(unexpectedExceptionThrows);
  methods[23].selector = @selector(getResponseDirectly);
  methods[24].selector = @selector(streamingResponse);
  methods[25].selector = @selector(closeInputStream);
  methods[26].selector = @selector(getResponseDirectlyAsync);
  methods[27].selector = @selector(getAsync);
  methods[28].selector = @selector(errorAsync);
  methods[29].selector = @selector(observableCallsOnNext);
  methods[30].selector = @selector(observableCallsOnError);
  methods[31].selector = @selector(observableHandlesParams);
  methods[32].selector = @selector(observableUsesHttpExecutor);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NO_HEADERS", "LJavaUtilList;", .constantValue.asLong = 0, 0x1a, -1, 34, 35, -1 },
    { "TWO_HEADERS", "LJavaUtilList;", .constantValue.asLong = 0, 0x1a, -1, 36, 35, -1 },
    { "NO_MIME_BODY", "LRetrofitMimeTypedInput;", .constantValue.asLong = 0, 0x1a, -1, 37, -1, -1 },
    { "mockClient_", "LRetrofitClientClient;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mockRequestExecutor_", "LJavaUtilConcurrentExecutor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mockCallbackExecutor_", "LJavaUtilConcurrentExecutor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mockProfiler_", "LRetrofitProfiler;", .constantValue.asLong = 0, 0x2, -1, -1, 38, -1 },
    { "example_", "LRetrofitRestAdapterTest_Example;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", (void *)&RetrofitRestAdapterTest__Annotations$0, (void *)&RetrofitRestAdapterTest__Annotations$1, (void *)&RetrofitRestAdapterTest__Annotations$2, (void *)&RetrofitRestAdapterTest__Annotations$3, (void *)&RetrofitRestAdapterTest__Annotations$4, (void *)&RetrofitRestAdapterTest__Annotations$5, (void *)&RetrofitRestAdapterTest__Annotations$6, (void *)&RetrofitRestAdapterTest__Annotations$7, (void *)&RetrofitRestAdapterTest__Annotations$8, (void *)&RetrofitRestAdapterTest__Annotations$9, (void *)&RetrofitRestAdapterTest__Annotations$10, (void *)&RetrofitRestAdapterTest__Annotations$11, (void *)&RetrofitRestAdapterTest__Annotations$12, (void *)&RetrofitRestAdapterTest__Annotations$13, (void *)&RetrofitRestAdapterTest__Annotations$14, (void *)&RetrofitRestAdapterTest__Annotations$15, (void *)&RetrofitRestAdapterTest__Annotations$16, (void *)&RetrofitRestAdapterTest__Annotations$17, (void *)&RetrofitRestAdapterTest__Annotations$18, (void *)&RetrofitRestAdapterTest__Annotations$19, (void *)&RetrofitRestAdapterTest__Annotations$20, (void *)&RetrofitRestAdapterTest__Annotations$21, (void *)&RetrofitRestAdapterTest__Annotations$22, (void *)&RetrofitRestAdapterTest__Annotations$23, "LJavaIoIOException;", (void *)&RetrofitRestAdapterTest__Annotations$24, (void *)&RetrofitRestAdapterTest__Annotations$25, (void *)&RetrofitRestAdapterTest__Annotations$26, (void *)&RetrofitRestAdapterTest__Annotations$27, (void *)&RetrofitRestAdapterTest__Annotations$28, (void *)&RetrofitRestAdapterTest__Annotations$29, (void *)&RetrofitRestAdapterTest__Annotations$30, (void *)&RetrofitRestAdapterTest__Annotations$31, &RetrofitRestAdapterTest_NO_HEADERS, "Ljava/util/List<Lretrofit/client/Header;>;", &RetrofitRestAdapterTest_TWO_HEADERS, &RetrofitRestAdapterTest_NO_MIME_BODY, "Lretrofit/Profiler<Ljava/lang/Object;>;", "LRetrofitRestAdapterTest_Example;LRetrofitRestAdapterTest_InvalidExample;" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest = { "RestAdapterTest", "retrofit", ptrTable, methods, fields, 7, 0x1, 33, 8, -1, 39, -1, -1, -1 };
  return &_RetrofitRestAdapterTest;
}

+ (void)initialize {
  if (self == [RetrofitRestAdapterTest class]) {
    JreStrongAssign(&RetrofitRestAdapterTest_NO_HEADERS, JavaUtilCollections_emptyList());
    JreStrongAssign(&RetrofitRestAdapterTest_TWO_HEADERS, JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ create_RetrofitClientHeader_initWithNSString_withNSString_(@"Content-Type", @"application/json"), create_RetrofitClientHeader_initWithNSString_withNSString_(@"Content-Length", @"42") } count:2 type:RetrofitClientHeader_class_()]));
    JreStrongAssignAndConsume(&RetrofitRestAdapterTest_NO_MIME_BODY, new_RetrofitRestAdapterTest_1_init());
    J2OBJC_SET_INITIALIZED(RetrofitRestAdapterTest)
  }
}

@end

void RetrofitRestAdapterTest_init(RetrofitRestAdapterTest *self) {
  NSObject_init(self);
}

RetrofitRestAdapterTest *new_RetrofitRestAdapterTest_init() {
  J2OBJC_NEW_IMPL(RetrofitRestAdapterTest, init)
}

RetrofitRestAdapterTest *create_RetrofitRestAdapterTest_init() {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapterTest, init)
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$18() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$19() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$20() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$21() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$22() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$23() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$24() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$25() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$26() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$27() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$28() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$29() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$30() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest__Annotations$31() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitRestAdapterTest)

@implementation RetrofitRestAdapterTest_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitRestAdapterTest_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)mimeType {
  return nil;
}

- (jlong)length {
  return 2;
}

- (JavaIoInputStream *)in {
  return create_JavaIoByteArrayInputStream_initWithByteArray_([@"Hi" java_getBytesWithCharsetName:@"UTF-8"]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mimeType);
  methods[2].selector = @selector(length);
  methods[3].selector = @selector(in);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoIOException;", "LRetrofitRestAdapterTest;" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_1 = { "", "retrofit", ptrTable, methods, NULL, 7, 0x8018, 4, 0, 1, -1, -1, -1, -1 };
  return &_RetrofitRestAdapterTest_1;
}

@end

void RetrofitRestAdapterTest_1_init(RetrofitRestAdapterTest_1 *self) {
  NSObject_init(self);
}

RetrofitRestAdapterTest_1 *new_RetrofitRestAdapterTest_1_init() {
  J2OBJC_NEW_IMPL(RetrofitRestAdapterTest_1, init)
}

RetrofitRestAdapterTest_1 *create_RetrofitRestAdapterTest_1_init() {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapterTest_1, init)
}

@implementation RetrofitRestAdapterTest_Example

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, 0, -1 },
    { NULL, "LNSObject;", 0x401, 1, 2, -1, -1, 3, 4 },
    { NULL, "V", 0x401, 1, 5, -1, 6, 7, -1 },
    { NULL, "LRetrofitClientResponse;", 0x401, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x401, 9, 5, -1, 10, 11, -1 },
    { NULL, "LRetrofitClientResponse;", 0x401, -1, -1, -1, -1, 12, -1 },
    { NULL, "LRxObservable;", 0x401, 13, 14, -1, 15, 16, 17 },
    { NULL, "LRxObservable;", 0x401, 13, 18, -1, 19, 20, 21 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(something);
  methods[1].selector = @selector(somethingWithRetrofitMimeTypedOutput:);
  methods[2].selector = @selector(somethingWithRetrofitCallback:);
  methods[3].selector = @selector(direct);
  methods[4].selector = @selector(directWithRetrofitCallback:);
  methods[5].selector = @selector(streaming);
  methods[6].selector = @selector(observableWithNSString:);
  methods[7].selector = @selector(observableWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&RetrofitRestAdapterTest_Example__Annotations$0, "something", "LRetrofitMimeTypedOutput;", (void *)&RetrofitRestAdapterTest_Example__Annotations$1, (void *)&RetrofitRestAdapterTest_Example__Annotations$2, "LRetrofitCallback;", "(Lretrofit/Callback<Ljava/lang/String;>;)V", (void *)&RetrofitRestAdapterTest_Example__Annotations$3, (void *)&RetrofitRestAdapterTest_Example__Annotations$4, "direct", "(Lretrofit/Callback<Lretrofit/client/Response;>;)V", (void *)&RetrofitRestAdapterTest_Example__Annotations$5, (void *)&RetrofitRestAdapterTest_Example__Annotations$6, "observable", "LNSString;", "(Ljava/lang/String;)Lrx/Observable<Ljava/lang/String;>;", (void *)&RetrofitRestAdapterTest_Example__Annotations$7, (void *)&RetrofitRestAdapterTest_Example__Annotations$8, "LNSString;LNSString;", "(Ljava/lang/String;Ljava/lang/String;)Lrx/Observable<Lretrofit/client/Response;>;", (void *)&RetrofitRestAdapterTest_Example__Annotations$9, (void *)&RetrofitRestAdapterTest_Example__Annotations$10, "LRetrofitRestAdapterTest;" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_Example = { "Example", "retrofit", ptrTable, methods, NULL, 7, 0x60a, 8, 0, 22, -1, -1, -1, -1 };
  return &_RetrofitRestAdapterTest_Example;
}

@end

IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_RetrofitHttpHeaders([IOSObjectArray arrayWithObjects:(id[]){ @"Foo: Bar" } count:1 type:NSString_class_()]), create_RetrofitHttpGET(@"/") } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_RetrofitHttpHeaders([IOSObjectArray arrayWithObjects:(id[]){ @"Foo: Bar" } count:1 type:NSString_class_()]), create_RetrofitHttpPOST(@"/") } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_RetrofitHttpBody() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_RetrofitHttpGET(@"/") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_RetrofitHttpGET(@"/") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_RetrofitHttpGET(@"/") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_RetrofitHttpGET(@"/"), create_RetrofitHttpStreaming() } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_RetrofitHttpPOST(@"/") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_RetrofitHttpBody() } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:1 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_RetrofitHttpPOST(@"/{x}/{y}") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *RetrofitRestAdapterTest_Example__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ create_RetrofitHttpPath(true, @"x") } count:1 type:JavaLangAnnotationAnnotation_class_()], [IOSObjectArray arrayWithObjects:(id[]){ create_RetrofitHttpPath(true, @"y") } count:1 type:JavaLangAnnotationAnnotation_class_()] } count:2 type:IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RetrofitRestAdapterTest_Example)

@implementation RetrofitRestAdapterTest_InvalidExample

+ (const J2ObjcClassInfo *)__metadata {
  static const void *ptrTable[] = { "LRetrofitRestAdapterTest;" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_InvalidExample = { "InvalidExample", "retrofit", ptrTable, NULL, NULL, 7, 0x60a, 0, 0, 0, -1, -1, -1, -1 };
  return &_RetrofitRestAdapterTest_InvalidExample;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RetrofitRestAdapterTest_InvalidExample)

@implementation RetrofitRestAdapterTest_2

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RetrofitRestAdapterTest_2_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)logWithNSString:(NSString *)message {
  [((id<JavaUtilList>) nil_chk(val$logMessages_)) addWithId:message];
}

- (void)dealloc {
  RELEASE_(val$logMessages_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$logMessages_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "log", "LNSString;", "Ljava/util/List<Ljava/lang/String;>;", "LRetrofitRestAdapterTest;", "logRequestResponseBasic" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_2 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, -1, -1 };
  return &_RetrofitRestAdapterTest_2;
}

@end

void RetrofitRestAdapterTest_2_initWithJavaUtilList_(RetrofitRestAdapterTest_2 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$logMessages_, capture$0);
  NSObject_init(self);
}

RetrofitRestAdapterTest_2 *new_RetrofitRestAdapterTest_2_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapterTest_2, initWithJavaUtilList_, capture$0)
}

RetrofitRestAdapterTest_2 *create_RetrofitRestAdapterTest_2_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapterTest_2, initWithJavaUtilList_, capture$0)
}

@implementation RetrofitRestAdapterTest_3

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RetrofitRestAdapterTest_3_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)logWithNSString:(NSString *)message {
  [((id<JavaUtilList>) nil_chk(val$logMessages_)) addWithId:message];
}

- (void)dealloc {
  RELEASE_(val$logMessages_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$logMessages_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "log", "LNSString;", "Ljava/util/List<Ljava/lang/String;>;", "LRetrofitRestAdapterTest;", "logRequestResponseHeaders" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_3 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, -1, -1 };
  return &_RetrofitRestAdapterTest_3;
}

@end

void RetrofitRestAdapterTest_3_initWithJavaUtilList_(RetrofitRestAdapterTest_3 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$logMessages_, capture$0);
  NSObject_init(self);
}

RetrofitRestAdapterTest_3 *new_RetrofitRestAdapterTest_3_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapterTest_3, initWithJavaUtilList_, capture$0)
}

RetrofitRestAdapterTest_3 *create_RetrofitRestAdapterTest_3_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapterTest_3, initWithJavaUtilList_, capture$0)
}

@implementation RetrofitRestAdapterTest_4

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RetrofitRestAdapterTest_4_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)logWithNSString:(NSString *)message {
  [((id<JavaUtilList>) nil_chk(val$logMessages_)) addWithId:message];
}

- (void)dealloc {
  RELEASE_(val$logMessages_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$logMessages_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "log", "LNSString;", "Ljava/util/List<Ljava/lang/String;>;", "LRetrofitRestAdapterTest;", "logRequestResponseHeadersAndArgs" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_4 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, -1, -1 };
  return &_RetrofitRestAdapterTest_4;
}

@end

void RetrofitRestAdapterTest_4_initWithJavaUtilList_(RetrofitRestAdapterTest_4 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$logMessages_, capture$0);
  NSObject_init(self);
}

RetrofitRestAdapterTest_4 *new_RetrofitRestAdapterTest_4_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapterTest_4, initWithJavaUtilList_, capture$0)
}

RetrofitRestAdapterTest_4 *create_RetrofitRestAdapterTest_4_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapterTest_4, initWithJavaUtilList_, capture$0)
}

@implementation RetrofitRestAdapterTest_5

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RetrofitRestAdapterTest_5_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)logWithNSString:(NSString *)message {
  [((id<JavaUtilList>) nil_chk(val$logMessages_)) addWithId:message];
}

- (void)dealloc {
  RELEASE_(val$logMessages_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$logMessages_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "log", "LNSString;", "Ljava/util/List<Ljava/lang/String;>;", "LRetrofitRestAdapterTest;", "logSuccessfulRequestResponseFullWhenResponseBodyPresent" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_5 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, -1, -1 };
  return &_RetrofitRestAdapterTest_5;
}

@end

void RetrofitRestAdapterTest_5_initWithJavaUtilList_(RetrofitRestAdapterTest_5 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$logMessages_, capture$0);
  NSObject_init(self);
}

RetrofitRestAdapterTest_5 *new_RetrofitRestAdapterTest_5_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapterTest_5, initWithJavaUtilList_, capture$0)
}

RetrofitRestAdapterTest_5 *create_RetrofitRestAdapterTest_5_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapterTest_5, initWithJavaUtilList_, capture$0)
}

@implementation RetrofitRestAdapterTest_6

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RetrofitRestAdapterTest_6_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)logWithNSString:(NSString *)message {
  [((id<JavaUtilList>) nil_chk(val$logMessages_)) addWithId:message];
}

- (void)dealloc {
  RELEASE_(val$logMessages_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$logMessages_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "log", "LNSString;", "Ljava/util/List<Ljava/lang/String;>;", "LRetrofitRestAdapterTest;", "logSuccessfulRequestResponseHeadersAndArgsWhenResponseBodyPresent" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_6 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, -1, -1 };
  return &_RetrofitRestAdapterTest_6;
}

@end

void RetrofitRestAdapterTest_6_initWithJavaUtilList_(RetrofitRestAdapterTest_6 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$logMessages_, capture$0);
  NSObject_init(self);
}

RetrofitRestAdapterTest_6 *new_RetrofitRestAdapterTest_6_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapterTest_6, initWithJavaUtilList_, capture$0)
}

RetrofitRestAdapterTest_6 *create_RetrofitRestAdapterTest_6_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapterTest_6, initWithJavaUtilList_, capture$0)
}

@implementation RetrofitRestAdapterTest_7

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RetrofitRestAdapterTest_7_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)logWithNSString:(NSString *)message {
  [((id<JavaUtilList>) nil_chk(val$logMessages_)) addWithId:message];
}

- (void)dealloc {
  RELEASE_(val$logMessages_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$logMessages_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "log", "LNSString;", "Ljava/util/List<Ljava/lang/String;>;", "LRetrofitRestAdapterTest;", "logSuccessfulRequestResponseFullWhenResponseBodyAbsent" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_7 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, -1, -1 };
  return &_RetrofitRestAdapterTest_7;
}

@end

void RetrofitRestAdapterTest_7_initWithJavaUtilList_(RetrofitRestAdapterTest_7 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$logMessages_, capture$0);
  NSObject_init(self);
}

RetrofitRestAdapterTest_7 *new_RetrofitRestAdapterTest_7_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapterTest_7, initWithJavaUtilList_, capture$0)
}

RetrofitRestAdapterTest_7 *create_RetrofitRestAdapterTest_7_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapterTest_7, initWithJavaUtilList_, capture$0)
}

@implementation RetrofitRestAdapterTest_8

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RetrofitRestAdapterTest_8_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)logWithNSString:(NSString *)message {
  [((id<JavaUtilList>) nil_chk(val$logMessages_)) addWithId:message];
}

- (void)dealloc {
  RELEASE_(val$logMessages_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$logMessages_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "log", "LNSString;", "Ljava/util/List<Ljava/lang/String;>;", "LRetrofitRestAdapterTest;", "logSuccessfulRequestResponseHeadersAndArgsWhenResponseBodyAbsent" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_8 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, -1, -1 };
  return &_RetrofitRestAdapterTest_8;
}

@end

void RetrofitRestAdapterTest_8_initWithJavaUtilList_(RetrofitRestAdapterTest_8 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$logMessages_, capture$0);
  NSObject_init(self);
}

RetrofitRestAdapterTest_8 *new_RetrofitRestAdapterTest_8_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapterTest_8, initWithJavaUtilList_, capture$0)
}

RetrofitRestAdapterTest_8 *create_RetrofitRestAdapterTest_8_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapterTest_8, initWithJavaUtilList_, capture$0)
}

@implementation RetrofitRestAdapterTest_9

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RetrofitRestAdapterTest_9_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)logWithNSString:(NSString *)message {
  [((id<JavaUtilList>) nil_chk(val$logMessages_)) addWithId:message];
}

- (void)dealloc {
  RELEASE_(val$logMessages_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$logMessages_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "log", "LNSString;", "Ljava/util/List<Ljava/lang/String;>;", "LRetrofitRestAdapterTest;", "logSuccessfulRequestResponseFullWhenMimeTypeMissing" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_9 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, -1, -1 };
  return &_RetrofitRestAdapterTest_9;
}

@end

void RetrofitRestAdapterTest_9_initWithJavaUtilList_(RetrofitRestAdapterTest_9 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$logMessages_, capture$0);
  NSObject_init(self);
}

RetrofitRestAdapterTest_9 *new_RetrofitRestAdapterTest_9_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapterTest_9, initWithJavaUtilList_, capture$0)
}

RetrofitRestAdapterTest_9 *create_RetrofitRestAdapterTest_9_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapterTest_9, initWithJavaUtilList_, capture$0)
}

@implementation RetrofitRestAdapterTest_10

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RetrofitRestAdapterTest_10_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)logWithNSString:(NSString *)message {
  [((id<JavaUtilList>) nil_chk(val$logMessages_)) addWithId:message];
}

- (void)dealloc {
  RELEASE_(val$logMessages_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$logMessages_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "log", "LNSString;", "Ljava/util/List<Ljava/lang/String;>;", "LRetrofitRestAdapterTest;", "logErrorRequestResponseFullWhenMimeTypeMissing" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_10 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, -1, -1 };
  return &_RetrofitRestAdapterTest_10;
}

@end

void RetrofitRestAdapterTest_10_initWithJavaUtilList_(RetrofitRestAdapterTest_10 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$logMessages_, capture$0);
  NSObject_init(self);
}

RetrofitRestAdapterTest_10 *new_RetrofitRestAdapterTest_10_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapterTest_10, initWithJavaUtilList_, capture$0)
}

RetrofitRestAdapterTest_10 *create_RetrofitRestAdapterTest_10_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapterTest_10, initWithJavaUtilList_, capture$0)
}

@implementation RetrofitRestAdapterTest_11

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  RetrofitRestAdapterTest_11_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (void)logWithNSString:(NSString *)message {
  [((id<JavaUtilList>) nil_chk(val$logMessages_)) addWithId:message];
}

- (void)dealloc {
  RELEASE_(val$logMessages_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(logWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$logMessages_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "log", "LNSString;", "Ljava/util/List<Ljava/lang/String;>;", "LRetrofitRestAdapterTest;", "logErrorRequestResponseFullWhenResponseBodyAbsent" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_11 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, -1, -1 };
  return &_RetrofitRestAdapterTest_11;
}

@end

void RetrofitRestAdapterTest_11_initWithJavaUtilList_(RetrofitRestAdapterTest_11 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$logMessages_, capture$0);
  NSObject_init(self);
}

RetrofitRestAdapterTest_11 *new_RetrofitRestAdapterTest_11_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapterTest_11, initWithJavaUtilList_, capture$0)
}

RetrofitRestAdapterTest_11 *create_RetrofitRestAdapterTest_11_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapterTest_11, initWithJavaUtilList_, capture$0)
}

@implementation RetrofitRestAdapterTest_12

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitRestAdapterTest_12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)answerWithOrgMockitoInvocationInvocationOnMock:(id<OrgMockitoInvocationInvocationOnMock>)invocation {
  @throw create_JavaIoIOException_initWithNSString_(@"I'm broken!");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(answerWithOrgMockitoInvocationInvocationOnMock:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "answer", "LOrgMockitoInvocationInvocationOnMock;", "LNSException;", "LRetrofitRestAdapterTest;", "bodyTypedInputExceptionThrowsNetworkError" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_12 = { "", "retrofit", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, -1, -1 };
  return &_RetrofitRestAdapterTest_12;
}

@end

void RetrofitRestAdapterTest_12_init(RetrofitRestAdapterTest_12 *self) {
  NSObject_init(self);
}

RetrofitRestAdapterTest_12 *new_RetrofitRestAdapterTest_12_init() {
  J2OBJC_NEW_IMPL(RetrofitRestAdapterTest_12, init)
}

RetrofitRestAdapterTest_12 *create_RetrofitRestAdapterTest_12_init() {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapterTest_12, init)
}

@implementation RetrofitRestAdapterTest_13

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)capture$0 {
  RetrofitRestAdapterTest_13_initWithJavaIoInputStream_(self, capture$0);
  return self;
}

- (NSString *)mimeType {
  return @"text/string";
}

- (jlong)length {
  return 3;
}

- (JavaIoInputStream *)in {
  return val$is_;
}

- (void)dealloc {
  RELEASE_(val$is_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaIoInputStream:);
  methods[1].selector = @selector(mimeType);
  methods[2].selector = @selector(length);
  methods[3].selector = @selector(in);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$is_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;", "LRetrofitRestAdapterTest;", "streamingResponse" };
  static const J2ObjcClassInfo _RetrofitRestAdapterTest_13 = { "", "retrofit", ptrTable, methods, fields, 7, 0x8018, 4, 1, 1, -1, 2, -1, -1 };
  return &_RetrofitRestAdapterTest_13;
}

@end

void RetrofitRestAdapterTest_13_initWithJavaIoInputStream_(RetrofitRestAdapterTest_13 *self, JavaIoInputStream *capture$0) {
  JreStrongAssign(&self->val$is_, capture$0);
  NSObject_init(self);
}

RetrofitRestAdapterTest_13 *new_RetrofitRestAdapterTest_13_initWithJavaIoInputStream_(JavaIoInputStream *capture$0) {
  J2OBJC_NEW_IMPL(RetrofitRestAdapterTest_13, initWithJavaIoInputStream_, capture$0)
}

RetrofitRestAdapterTest_13 *create_RetrofitRestAdapterTest_13_initWithJavaIoInputStream_(JavaIoInputStream *capture$0) {
  J2OBJC_CREATE_IMPL(RetrofitRestAdapterTest_13, initWithJavaIoInputStream_, capture$0)
}
