//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/error/ShouldBeEqual.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreDescriptionDescription.h"
#include "OrgAssertjCoreErrorAssertionErrorFactory.h"
#include "OrgAssertjCoreErrorConstructorInvoker.h"
#include "OrgAssertjCoreErrorDescriptionFormatter.h"
#include "OrgAssertjCoreErrorMessageFormatter.h"
#include "OrgAssertjCoreErrorShouldBeEqual.h"
#include "OrgAssertjCoreInternalComparatorBasedComparisonStrategy.h"
#include "OrgAssertjCoreInternalComparisonStrategy.h"
#include "OrgAssertjCoreInternalFailures.h"
#include "OrgAssertjCoreInternalStandardComparisonStrategy.h"
#include "OrgAssertjCorePresentationRepresentation.h"
#include "OrgAssertjCoreUtilArrays.h"
#include "OrgAssertjCoreUtilObjects.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Integer.h"

@interface OrgAssertjCoreErrorShouldBeEqual () {
 @public
  id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy_;
  id<OrgAssertjCorePresentationRepresentation> representation_;
}

- (jboolean)actualAndExpectedHaveSameStringRepresentation;

- (NSString *)defaultErrorMessageWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)description_
                             withOrgAssertjCorePresentationRepresentation:(id<OrgAssertjCorePresentationRepresentation>)representation;

- (NSString *)defaultDetailedErrorMessageWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)description_
                                     withOrgAssertjCorePresentationRepresentation:(id<OrgAssertjCorePresentationRepresentation>)representation;

- (JavaLangAssertionError *)comparisonFailureWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)description_;

- (JavaLangAssertionError *)newComparisonFailureWithNSString:(NSString *)description_ OBJC_METHOD_FAMILY_NONE;

- (IOSObjectArray *)msgArgsWithNSString:(NSString *)description_;

- (NSString *)detailedToStringOfWithId:(id)obj;

- (NSString *)detailedActual;

- (NSString *)detailedExpected;

@end

J2OBJC_FIELD_SETTER(OrgAssertjCoreErrorShouldBeEqual, comparisonStrategy_, id<OrgAssertjCoreInternalComparisonStrategy>)
J2OBJC_FIELD_SETTER(OrgAssertjCoreErrorShouldBeEqual, representation_, id<OrgAssertjCorePresentationRepresentation>)

inline NSString *OrgAssertjCoreErrorShouldBeEqual_get_EXPECTED_BUT_WAS_MESSAGE();
static NSString *OrgAssertjCoreErrorShouldBeEqual_EXPECTED_BUT_WAS_MESSAGE = @"\nExpecting:\n <%s>\nto be equal to:\n <%s>\nbut was not.";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgAssertjCoreErrorShouldBeEqual, EXPECTED_BUT_WAS_MESSAGE, NSString *)

inline NSString *OrgAssertjCoreErrorShouldBeEqual_get_EXPECTED_BUT_WAS_MESSAGE_USING_COMPARATOR();
static NSString *OrgAssertjCoreErrorShouldBeEqual_EXPECTED_BUT_WAS_MESSAGE_USING_COMPARATOR = @"\nExpecting:\n <%s>\nto be equal to:\n <%s>\n%s but was not.";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgAssertjCoreErrorShouldBeEqual, EXPECTED_BUT_WAS_MESSAGE_USING_COMPARATOR, NSString *)

inline IOSObjectArray *OrgAssertjCoreErrorShouldBeEqual_get_MSG_ARG_TYPES();
static IOSObjectArray *OrgAssertjCoreErrorShouldBeEqual_MSG_ARG_TYPES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgAssertjCoreErrorShouldBeEqual, MSG_ARG_TYPES, IOSObjectArray *)

__attribute__((unused)) static jboolean OrgAssertjCoreErrorShouldBeEqual_actualAndExpectedHaveSameStringRepresentation(OrgAssertjCoreErrorShouldBeEqual *self);

__attribute__((unused)) static NSString *OrgAssertjCoreErrorShouldBeEqual_defaultErrorMessageWithOrgAssertjCoreDescriptionDescription_withOrgAssertjCorePresentationRepresentation_(OrgAssertjCoreErrorShouldBeEqual *self, OrgAssertjCoreDescriptionDescription *description_, id<OrgAssertjCorePresentationRepresentation> representation);

__attribute__((unused)) static NSString *OrgAssertjCoreErrorShouldBeEqual_defaultDetailedErrorMessageWithOrgAssertjCoreDescriptionDescription_withOrgAssertjCorePresentationRepresentation_(OrgAssertjCoreErrorShouldBeEqual *self, OrgAssertjCoreDescriptionDescription *description_, id<OrgAssertjCorePresentationRepresentation> representation);

__attribute__((unused)) static JavaLangAssertionError *OrgAssertjCoreErrorShouldBeEqual_comparisonFailureWithOrgAssertjCoreDescriptionDescription_(OrgAssertjCoreErrorShouldBeEqual *self, OrgAssertjCoreDescriptionDescription *description_);

__attribute__((unused)) static JavaLangAssertionError *OrgAssertjCoreErrorShouldBeEqual_newComparisonFailureWithNSString_(OrgAssertjCoreErrorShouldBeEqual *self, NSString *description_);

__attribute__((unused)) static IOSObjectArray *OrgAssertjCoreErrorShouldBeEqual_msgArgsWithNSString_(OrgAssertjCoreErrorShouldBeEqual *self, NSString *description_);

__attribute__((unused)) static NSString *OrgAssertjCoreErrorShouldBeEqual_detailedToStringOfWithId_(OrgAssertjCoreErrorShouldBeEqual *self, id obj);

__attribute__((unused)) static NSString *OrgAssertjCoreErrorShouldBeEqual_detailedActual(OrgAssertjCoreErrorShouldBeEqual *self);

__attribute__((unused)) static NSString *OrgAssertjCoreErrorShouldBeEqual_detailedExpected(OrgAssertjCoreErrorShouldBeEqual *self);

J2OBJC_INITIALIZED_DEFN(OrgAssertjCoreErrorShouldBeEqual)

@implementation OrgAssertjCoreErrorShouldBeEqual

+ (id<OrgAssertjCoreErrorAssertionErrorFactory>)shouldBeEqualWithId:(id)actual
                                                             withId:(id)expected
                       withOrgAssertjCorePresentationRepresentation:(id<OrgAssertjCorePresentationRepresentation>)representation {
  return OrgAssertjCoreErrorShouldBeEqual_shouldBeEqualWithId_withId_withOrgAssertjCorePresentationRepresentation_(actual, expected, representation);
}

+ (id<OrgAssertjCoreErrorAssertionErrorFactory>)shouldBeEqualWithId:(id)actual
                                                             withId:(id)expected
                       withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy
                       withOrgAssertjCorePresentationRepresentation:(id<OrgAssertjCorePresentationRepresentation>)representation {
  return OrgAssertjCoreErrorShouldBeEqual_shouldBeEqualWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_withOrgAssertjCorePresentationRepresentation_(actual, expected, comparisonStrategy, representation);
}

- (instancetype)initWithId:(id)actual
                    withId:(id)expected
withOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy
withOrgAssertjCorePresentationRepresentation:(id<OrgAssertjCorePresentationRepresentation>)representation {
  OrgAssertjCoreErrorShouldBeEqual_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_withOrgAssertjCorePresentationRepresentation_(self, actual, expected, comparisonStrategy, representation);
  return self;
}

- (JavaLangAssertionError *)newAssertionErrorWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)description_
                                         withOrgAssertjCorePresentationRepresentation:(id<OrgAssertjCorePresentationRepresentation>)representation {
  if (OrgAssertjCoreErrorShouldBeEqual_actualAndExpectedHaveSameStringRepresentation(self)) {
    return [((OrgAssertjCoreInternalFailures *) nil_chk(OrgAssertjCoreInternalFailures_instance())) failureWithNSString:OrgAssertjCoreErrorShouldBeEqual_defaultDetailedErrorMessageWithOrgAssertjCoreDescriptionDescription_withOrgAssertjCorePresentationRepresentation_(self, description_, representation)];
  }
  if ([((id<OrgAssertjCoreInternalComparisonStrategy>) nil_chk(comparisonStrategy_)) isStandard]) {
    JavaLangAssertionError *error = OrgAssertjCoreErrorShouldBeEqual_comparisonFailureWithOrgAssertjCoreDescriptionDescription_(self, description_);
    if (error != nil) return error;
  }
  return [((OrgAssertjCoreInternalFailures *) nil_chk(OrgAssertjCoreInternalFailures_instance())) failureWithNSString:OrgAssertjCoreErrorShouldBeEqual_defaultErrorMessageWithOrgAssertjCoreDescriptionDescription_withOrgAssertjCorePresentationRepresentation_(self, description_, representation)];
}

- (jboolean)actualAndExpectedHaveSameStringRepresentation {
  return OrgAssertjCoreErrorShouldBeEqual_actualAndExpectedHaveSameStringRepresentation(self);
}

- (NSString *)defaultErrorMessageWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)description_
                             withOrgAssertjCorePresentationRepresentation:(id<OrgAssertjCorePresentationRepresentation>)representation {
  return OrgAssertjCoreErrorShouldBeEqual_defaultErrorMessageWithOrgAssertjCoreDescriptionDescription_withOrgAssertjCorePresentationRepresentation_(self, description_, representation);
}

- (NSString *)defaultDetailedErrorMessageWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)description_
                                     withOrgAssertjCorePresentationRepresentation:(id<OrgAssertjCorePresentationRepresentation>)representation {
  return OrgAssertjCoreErrorShouldBeEqual_defaultDetailedErrorMessageWithOrgAssertjCoreDescriptionDescription_withOrgAssertjCorePresentationRepresentation_(self, description_, representation);
}

- (JavaLangAssertionError *)comparisonFailureWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)description_ {
  return OrgAssertjCoreErrorShouldBeEqual_comparisonFailureWithOrgAssertjCoreDescriptionDescription_(self, description_);
}

- (JavaLangAssertionError *)newComparisonFailureWithNSString:(NSString *)description_ {
  return OrgAssertjCoreErrorShouldBeEqual_newComparisonFailureWithNSString_(self, description_);
}

- (IOSObjectArray *)msgArgsWithNSString:(NSString *)description_ {
  return OrgAssertjCoreErrorShouldBeEqual_msgArgsWithNSString_(self, description_);
}

- (NSString *)detailedToStringOfWithId:(id)obj {
  return OrgAssertjCoreErrorShouldBeEqual_detailedToStringOfWithId_(self, obj);
}

- (NSString *)detailedActual {
  return OrgAssertjCoreErrorShouldBeEqual_detailedActual(self);
}

- (NSString *)detailedExpected {
  return OrgAssertjCoreErrorShouldBeEqual_detailedExpected(self);
}

- (jboolean)isEqual:(id)o {
  if (self == o) return true;
  if (o == nil) return false;
  if ([self java_getClass] != [o java_getClass]) return false;
  OrgAssertjCoreErrorShouldBeEqual *other = (OrgAssertjCoreErrorShouldBeEqual *) cast_chk(o, [OrgAssertjCoreErrorShouldBeEqual class]);
  if (!OrgAssertjCoreUtilObjects_areEqualWithId_withId_(actual_, other->actual_)) return false;
  return OrgAssertjCoreUtilObjects_areEqualWithId_withId_(expected_, other->expected_);
}

- (NSUInteger)hash {
  jint result = 1;
  result = OrgAssertjCoreUtilObjects_HASH_CODE_PRIME * result + OrgAssertjCoreUtilObjects_hashCodeForWithId_(actual_);
  result = OrgAssertjCoreUtilObjects_HASH_CODE_PRIME * result + OrgAssertjCoreUtilObjects_hashCodeForWithId_(expected_);
  return result;
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(expected_);
  RELEASE_(messageFormatter_);
  RELEASE_(comparisonStrategy_);
  RELEASE_(representation_);
  RELEASE_(constructorInvoker_);
  RELEASE_(descriptionFormatter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorAssertionErrorFactory;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgAssertjCoreErrorAssertionErrorFactory;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaLangAssertionError;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 5, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 6, 4, -1, -1, -1, -1 },
    { NULL, "LJavaLangAssertionError;", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "LJavaLangAssertionError;", 0x2, 9, 10, 11, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x2, 12, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 13, 14, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 15, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 16, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldBeEqualWithId:withId:withOrgAssertjCorePresentationRepresentation:);
  methods[1].selector = @selector(shouldBeEqualWithId:withId:withOrgAssertjCoreInternalComparisonStrategy:withOrgAssertjCorePresentationRepresentation:);
  methods[2].selector = @selector(initWithId:withId:withOrgAssertjCoreInternalComparisonStrategy:withOrgAssertjCorePresentationRepresentation:);
  methods[3].selector = @selector(newAssertionErrorWithOrgAssertjCoreDescriptionDescription:withOrgAssertjCorePresentationRepresentation:);
  methods[4].selector = @selector(actualAndExpectedHaveSameStringRepresentation);
  methods[5].selector = @selector(defaultErrorMessageWithOrgAssertjCoreDescriptionDescription:withOrgAssertjCorePresentationRepresentation:);
  methods[6].selector = @selector(defaultDetailedErrorMessageWithOrgAssertjCoreDescriptionDescription:withOrgAssertjCorePresentationRepresentation:);
  methods[7].selector = @selector(comparisonFailureWithOrgAssertjCoreDescriptionDescription:);
  methods[8].selector = @selector(newComparisonFailureWithNSString:);
  methods[9].selector = @selector(msgArgsWithNSString:);
  methods[10].selector = @selector(detailedToStringOfWithId:);
  methods[11].selector = @selector(detailedActual);
  methods[12].selector = @selector(detailedExpected);
  methods[13].selector = @selector(isEqual:);
  methods[14].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EXPECTED_BUT_WAS_MESSAGE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 17, -1, -1 },
    { "EXPECTED_BUT_WAS_MESSAGE_USING_COMPARATOR", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "MSG_ARG_TYPES", "[LIOSClass;", .constantValue.asLong = 0, 0x1a, -1, 19, 20, -1 },
    { "actual_", "LNSObject;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "expected_", "LNSObject;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "messageFormatter_", "LOrgAssertjCoreErrorMessageFormatter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "comparisonStrategy_", "LOrgAssertjCoreInternalComparisonStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "representation_", "LOrgAssertjCorePresentationRepresentation;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "constructorInvoker_", "LOrgAssertjCoreErrorConstructorInvoker;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "descriptionFormatter_", "LOrgAssertjCoreErrorDescriptionFormatter;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "shouldBeEqual", "LNSObject;LNSObject;LOrgAssertjCorePresentationRepresentation;", "LNSObject;LNSObject;LOrgAssertjCoreInternalComparisonStrategy;LOrgAssertjCorePresentationRepresentation;", "newAssertionError", "LOrgAssertjCoreDescriptionDescription;LOrgAssertjCorePresentationRepresentation;", "defaultErrorMessage", "defaultDetailedErrorMessage", "comparisonFailure", "LOrgAssertjCoreDescriptionDescription;", "newComparisonFailure", "LNSString;", "LJavaLangException;", "msgArgs", "detailedToStringOf", "LNSObject;", "equals", "hashCode", &OrgAssertjCoreErrorShouldBeEqual_EXPECTED_BUT_WAS_MESSAGE, &OrgAssertjCoreErrorShouldBeEqual_EXPECTED_BUT_WAS_MESSAGE_USING_COMPARATOR, &OrgAssertjCoreErrorShouldBeEqual_MSG_ARG_TYPES, "[Ljava/lang/Class<*>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldBeEqual = { "ShouldBeEqual", "org.assertj.core.error", ptrTable, methods, fields, 7, 0x1, 15, 10, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldBeEqual;
}

+ (void)initialize {
  if (self == [OrgAssertjCoreErrorShouldBeEqual class]) {
    JreStrongAssignAndConsume(&OrgAssertjCoreErrorShouldBeEqual_MSG_ARG_TYPES, [IOSObjectArray newArrayWithObjects:(id[]){ NSString_class_(), NSString_class_(), NSString_class_() } count:3 type:IOSClass_class_()]);
    J2OBJC_SET_INITIALIZED(OrgAssertjCoreErrorShouldBeEqual)
  }
}

@end

id<OrgAssertjCoreErrorAssertionErrorFactory> OrgAssertjCoreErrorShouldBeEqual_shouldBeEqualWithId_withId_withOrgAssertjCorePresentationRepresentation_(id actual, id expected, id<OrgAssertjCorePresentationRepresentation> representation) {
  OrgAssertjCoreErrorShouldBeEqual_initialize();
  return create_OrgAssertjCoreErrorShouldBeEqual_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_withOrgAssertjCorePresentationRepresentation_(actual, expected, OrgAssertjCoreInternalStandardComparisonStrategy_instance(), representation);
}

id<OrgAssertjCoreErrorAssertionErrorFactory> OrgAssertjCoreErrorShouldBeEqual_shouldBeEqualWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_withOrgAssertjCorePresentationRepresentation_(id actual, id expected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy, id<OrgAssertjCorePresentationRepresentation> representation) {
  OrgAssertjCoreErrorShouldBeEqual_initialize();
  return create_OrgAssertjCoreErrorShouldBeEqual_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_withOrgAssertjCorePresentationRepresentation_(actual, expected, comparisonStrategy, representation);
}

void OrgAssertjCoreErrorShouldBeEqual_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_withOrgAssertjCorePresentationRepresentation_(OrgAssertjCoreErrorShouldBeEqual *self, id actual, id expected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy, id<OrgAssertjCorePresentationRepresentation> representation) {
  NSObject_init(self);
  JreStrongAssign(&self->messageFormatter_, OrgAssertjCoreErrorMessageFormatter_instance());
  JreStrongAssignAndConsume(&self->constructorInvoker_, new_OrgAssertjCoreErrorConstructorInvoker_init());
  JreStrongAssign(&self->descriptionFormatter_, OrgAssertjCoreErrorDescriptionFormatter_instance());
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->expected_, expected);
  JreStrongAssign(&self->comparisonStrategy_, comparisonStrategy);
  JreStrongAssign(&self->representation_, representation);
}

OrgAssertjCoreErrorShouldBeEqual *new_OrgAssertjCoreErrorShouldBeEqual_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_withOrgAssertjCorePresentationRepresentation_(id actual, id expected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy, id<OrgAssertjCorePresentationRepresentation> representation) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldBeEqual, initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_withOrgAssertjCorePresentationRepresentation_, actual, expected, comparisonStrategy, representation)
}

OrgAssertjCoreErrorShouldBeEqual *create_OrgAssertjCoreErrorShouldBeEqual_initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_withOrgAssertjCorePresentationRepresentation_(id actual, id expected, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy, id<OrgAssertjCorePresentationRepresentation> representation) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldBeEqual, initWithId_withId_withOrgAssertjCoreInternalComparisonStrategy_withOrgAssertjCorePresentationRepresentation_, actual, expected, comparisonStrategy, representation)
}

jboolean OrgAssertjCoreErrorShouldBeEqual_actualAndExpectedHaveSameStringRepresentation(OrgAssertjCoreErrorShouldBeEqual *self) {
  return OrgAssertjCoreUtilObjects_areEqualWithId_withId_([((id<OrgAssertjCorePresentationRepresentation>) nil_chk(self->representation_)) toStringOfWithId:self->actual_], [((id<OrgAssertjCorePresentationRepresentation>) nil_chk(self->representation_)) toStringOfWithId:self->expected_]);
}

NSString *OrgAssertjCoreErrorShouldBeEqual_defaultErrorMessageWithOrgAssertjCoreDescriptionDescription_withOrgAssertjCorePresentationRepresentation_(OrgAssertjCoreErrorShouldBeEqual *self, OrgAssertjCoreDescriptionDescription *description_, id<OrgAssertjCorePresentationRepresentation> representation) {
  return [((id<OrgAssertjCoreInternalComparisonStrategy>) nil_chk(self->comparisonStrategy_)) isStandard] ? [((OrgAssertjCoreErrorMessageFormatter *) nil_chk(self->messageFormatter_)) formatWithOrgAssertjCoreDescriptionDescription:description_ withOrgAssertjCorePresentationRepresentation:representation withNSString:OrgAssertjCoreErrorShouldBeEqual_EXPECTED_BUT_WAS_MESSAGE withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ self->actual_, self->expected_ } count:2 type:NSObject_class_()]] : [((OrgAssertjCoreErrorMessageFormatter *) nil_chk(self->messageFormatter_)) formatWithOrgAssertjCoreDescriptionDescription:description_ withOrgAssertjCorePresentationRepresentation:representation withNSString:OrgAssertjCoreErrorShouldBeEqual_EXPECTED_BUT_WAS_MESSAGE_USING_COMPARATOR withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ self->actual_, self->expected_, self->comparisonStrategy_ } count:3 type:NSObject_class_()]];
}

NSString *OrgAssertjCoreErrorShouldBeEqual_defaultDetailedErrorMessageWithOrgAssertjCoreDescriptionDescription_withOrgAssertjCorePresentationRepresentation_(OrgAssertjCoreErrorShouldBeEqual *self, OrgAssertjCoreDescriptionDescription *description_, id<OrgAssertjCorePresentationRepresentation> representation) {
  if ([self->comparisonStrategy_ isKindOfClass:[OrgAssertjCoreInternalComparatorBasedComparisonStrategy class]]) return [((OrgAssertjCoreErrorMessageFormatter *) nil_chk(self->messageFormatter_)) formatWithOrgAssertjCoreDescriptionDescription:description_ withOrgAssertjCorePresentationRepresentation:representation withNSString:OrgAssertjCoreErrorShouldBeEqual_EXPECTED_BUT_WAS_MESSAGE_USING_COMPARATOR withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ OrgAssertjCoreErrorShouldBeEqual_detailedActual(self), OrgAssertjCoreErrorShouldBeEqual_detailedExpected(self), self->comparisonStrategy_ } count:3 type:NSObject_class_()]];
  return [((OrgAssertjCoreErrorMessageFormatter *) nil_chk(self->messageFormatter_)) formatWithOrgAssertjCoreDescriptionDescription:description_ withOrgAssertjCorePresentationRepresentation:representation withNSString:OrgAssertjCoreErrorShouldBeEqual_EXPECTED_BUT_WAS_MESSAGE withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ OrgAssertjCoreErrorShouldBeEqual_detailedActual(self), OrgAssertjCoreErrorShouldBeEqual_detailedExpected(self) } count:2 type:NSObject_class_()]];
}

JavaLangAssertionError *OrgAssertjCoreErrorShouldBeEqual_comparisonFailureWithOrgAssertjCoreDescriptionDescription_(OrgAssertjCoreErrorShouldBeEqual *self, OrgAssertjCoreDescriptionDescription *description_) {
  @try {
    JavaLangAssertionError *comparisonFailure = OrgAssertjCoreErrorShouldBeEqual_newComparisonFailureWithNSString_(self, [((NSString *) nil_chk([((OrgAssertjCoreErrorDescriptionFormatter *) nil_chk(self->descriptionFormatter_)) formatWithOrgAssertjCoreDescriptionDescription:description_])) java_trim]);
    [((OrgAssertjCoreInternalFailures *) nil_chk(OrgAssertjCoreInternalFailures_instance())) removeAssertJRelatedElementsFromStackTraceIfNeededWithJavaLangAssertionError:comparisonFailure];
    return comparisonFailure;
  }
  @catch (NSException *e) {
    return nil;
  }
}

JavaLangAssertionError *OrgAssertjCoreErrorShouldBeEqual_newComparisonFailureWithNSString_(OrgAssertjCoreErrorShouldBeEqual *self, NSString *description_) {
  id o = [((OrgAssertjCoreErrorConstructorInvoker *) nil_chk(self->constructorInvoker_)) newInstanceWithNSString:@"org.junit.ComparisonFailure" withIOSClassArray:OrgAssertjCoreErrorShouldBeEqual_MSG_ARG_TYPES withNSObjectArray:OrgAssertjCoreErrorShouldBeEqual_msgArgsWithNSString_(self, description_)];
  if ([o isKindOfClass:[JavaLangAssertionError class]]) return (JavaLangAssertionError *) cast_chk(o, [JavaLangAssertionError class]);
  return nil;
}

IOSObjectArray *OrgAssertjCoreErrorShouldBeEqual_msgArgsWithNSString_(OrgAssertjCoreErrorShouldBeEqual *self, NSString *description_) {
  return OrgAssertjCoreUtilArrays_arrayWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ description_, [((id<OrgAssertjCorePresentationRepresentation>) nil_chk(self->representation_)) toStringOfWithId:self->expected_], [((id<OrgAssertjCorePresentationRepresentation>) nil_chk(self->representation_)) toStringOfWithId:self->actual_] } count:3 type:NSString_class_()]);
}

NSString *OrgAssertjCoreErrorShouldBeEqual_detailedToStringOfWithId_(OrgAssertjCoreErrorShouldBeEqual *self, id obj) {
  return JreStrcat("$$$C$C", [((id<OrgAssertjCorePresentationRepresentation>) nil_chk(self->representation_)) toStringOfWithId:obj], @" (", [[nil_chk(obj) java_getClass] getSimpleName], '@', JavaLangInteger_toHexStringWithInt_(((jint) [obj hash])), ')');
}

NSString *OrgAssertjCoreErrorShouldBeEqual_detailedActual(OrgAssertjCoreErrorShouldBeEqual *self) {
  return OrgAssertjCoreErrorShouldBeEqual_detailedToStringOfWithId_(self, self->actual_);
}

NSString *OrgAssertjCoreErrorShouldBeEqual_detailedExpected(OrgAssertjCoreErrorShouldBeEqual *self) {
  return OrgAssertjCoreErrorShouldBeEqual_detailedToStringOfWithId_(self, self->expected_);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldBeEqual)
