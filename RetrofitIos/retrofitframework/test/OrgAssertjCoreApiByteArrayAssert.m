//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/ByteArrayAssert.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiAbstractByteArrayAssert.h"
#include "OrgAssertjCoreApiByteArrayAssert.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation OrgAssertjCoreApiByteArrayAssert

- (instancetype)initWithByteArray:(IOSByteArray *)actual {
  OrgAssertjCoreApiByteArrayAssert_initWithByteArray_(self, actual);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "[B", "Lorg/assertj/core/api/AbstractByteArrayAssert<Lorg/assertj/core/api/ByteArrayAssert;>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreApiByteArrayAssert = { "ByteArrayAssert", "org.assertj.core.api", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, 1, -1 };
  return &_OrgAssertjCoreApiByteArrayAssert;
}

@end

void OrgAssertjCoreApiByteArrayAssert_initWithByteArray_(OrgAssertjCoreApiByteArrayAssert *self, IOSByteArray *actual) {
  OrgAssertjCoreApiAbstractByteArrayAssert_initWithByteArray_withIOSClass_(self, actual, OrgAssertjCoreApiByteArrayAssert_class_());
}

OrgAssertjCoreApiByteArrayAssert *new_OrgAssertjCoreApiByteArrayAssert_initWithByteArray_(IOSByteArray *actual) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreApiByteArrayAssert, initWithByteArray_, actual)
}

OrgAssertjCoreApiByteArrayAssert *create_OrgAssertjCoreApiByteArrayAssert_initWithByteArray_(IOSByteArray *actual) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreApiByteArrayAssert, initWithByteArray_, actual)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreApiByteArrayAssert)
