//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/internal/Floats.java
//

#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiAssertionInfo.h"
#include "OrgAssertjCoreDataOffset.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldBeEqualWithinOffset.h"
#include "OrgAssertjCoreInternalCommonValidations.h"
#include "OrgAssertjCoreInternalComparables.h"
#include "OrgAssertjCoreInternalComparisonStrategy.h"
#include "OrgAssertjCoreInternalFailures.h"
#include "OrgAssertjCoreInternalFloats.h"
#include "OrgAssertjCoreInternalRealNumbers.h"
#include "OrgAssertjCoreUtilObjects.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Float.h"
#include "java/lang/Math.h"

inline OrgAssertjCoreInternalFloats *OrgAssertjCoreInternalFloats_get_INSTANCE();
static OrgAssertjCoreInternalFloats *OrgAssertjCoreInternalFloats_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgAssertjCoreInternalFloats, INSTANCE, OrgAssertjCoreInternalFloats *)

J2OBJC_INITIALIZED_DEFN(OrgAssertjCoreInternalFloats)

@implementation OrgAssertjCoreInternalFloats

+ (OrgAssertjCoreInternalFloats *)instance {
  return OrgAssertjCoreInternalFloats_instance();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreInternalFloats_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy {
  OrgAssertjCoreInternalFloats_initWithOrgAssertjCoreInternalComparisonStrategy_(self, comparisonStrategy);
  return self;
}

- (JavaLangFloat *)zero {
  return JavaLangFloat_valueOfWithFloat_(0.0f);
}

- (JavaLangFloat *)NaN {
  return JavaLangFloat_valueOfWithFloat_(JavaLangFloat_NaN);
}

- (jboolean)isEqualToWithJavaLangComparable:(JavaLangFloat *)actual
                     withJavaLangComparable:(JavaLangFloat *)expected
               withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)offset {
  return JavaLangMath_absWithFloat_([((JavaLangFloat *) nil_chk(expected)) floatValue] - [((JavaLangFloat *) nil_chk(actual)) floatValue]) <= [((NSNumber *) nil_chk(((OrgAssertjCoreDataOffset *) nil_chk(offset))->value_)) floatValue];
}

- (void)assertIsCloseToWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                        withJavaLangFloat:(JavaLangFloat *)actual
                                        withJavaLangFloat:(JavaLangFloat *)expected
                             withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)offset {
  [self assertEqualWithOrgAssertjCoreApiAssertionInfo:info withJavaLangFloat:actual withJavaLangFloat:expected withOrgAssertjCoreDataOffset:offset];
}

- (void)assertEqualWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                    withJavaLangFloat:(JavaLangFloat *)actual
                                    withJavaLangFloat:(JavaLangFloat *)expected
                         withOrgAssertjCoreDataOffset:(OrgAssertjCoreDataOffset *)offset {
  OrgAssertjCoreInternalComparables_assertNotNullWithOrgAssertjCoreApiAssertionInfo_withId_(info, actual);
  OrgAssertjCoreInternalCommonValidations_checkOffsetIsNotNullWithOrgAssertjCoreDataOffset_(offset);
  OrgAssertjCoreInternalCommonValidations_checkNumberIsNotNullWithNSNumber_(expected);
  if (OrgAssertjCoreUtilObjects_areEqualWithId_withId_(actual, expected)) return;
  if ([self isEqualToWithJavaLangComparable:actual withJavaLangComparable:expected withOrgAssertjCoreDataOffset:offset]) return;
  @throw [((OrgAssertjCoreInternalFailures *) nil_chk(failures_)) failureWithOrgAssertjCoreApiAssertionInfo:info withOrgAssertjCoreErrorErrorMessageFactory:OrgAssertjCoreErrorShouldBeEqualWithinOffset_shouldBeEqualWithNSNumber_withNSNumber_withOrgAssertjCoreDataOffset_withNSNumber_(actual, expected, offset, JavaLangFloat_valueOfWithFloat_(JavaLangMath_absWithFloat_([((JavaLangFloat *) nil_chk(expected)) floatValue] - [((JavaLangFloat *) nil_chk(actual)) floatValue])))];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreInternalFloats;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangFloat;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangFloat;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(instance);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(initWithOrgAssertjCoreInternalComparisonStrategy:);
  methods[3].selector = @selector(zero);
  methods[4].selector = @selector(NaN);
  methods[5].selector = @selector(isEqualToWithJavaLangComparable:withJavaLangComparable:withOrgAssertjCoreDataOffset:);
  methods[6].selector = @selector(assertIsCloseToWithOrgAssertjCoreApiAssertionInfo:withJavaLangFloat:withJavaLangFloat:withOrgAssertjCoreDataOffset:);
  methods[7].selector = @selector(assertEqualWithOrgAssertjCoreApiAssertionInfo:withJavaLangFloat:withJavaLangFloat:withOrgAssertjCoreDataOffset:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgAssertjCoreInternalFloats;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgAssertjCoreInternalComparisonStrategy;", "isEqualTo", "LJavaLangFloat;LJavaLangFloat;LOrgAssertjCoreDataOffset;", "(Ljava/lang/Float;Ljava/lang/Float;Lorg/assertj/core/data/Offset<*>;)Z", "assertIsCloseTo", "LOrgAssertjCoreApiAssertionInfo;LJavaLangFloat;LJavaLangFloat;LOrgAssertjCoreDataOffset;", "(Lorg/assertj/core/api/AssertionInfo;Ljava/lang/Float;Ljava/lang/Float;Lorg/assertj/core/data/Offset<Ljava/lang/Float;>;)V", "assertEqual", &OrgAssertjCoreInternalFloats_INSTANCE, "Lorg/assertj/core/internal/RealNumbers<Ljava/lang/Float;>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreInternalFloats = { "Floats", "org.assertj.core.internal", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, -1, -1, 9, -1 };
  return &_OrgAssertjCoreInternalFloats;
}

+ (void)initialize {
  if (self == [OrgAssertjCoreInternalFloats class]) {
    JreStrongAssignAndConsume(&OrgAssertjCoreInternalFloats_INSTANCE, new_OrgAssertjCoreInternalFloats_init());
    J2OBJC_SET_INITIALIZED(OrgAssertjCoreInternalFloats)
  }
}

@end

OrgAssertjCoreInternalFloats *OrgAssertjCoreInternalFloats_instance() {
  OrgAssertjCoreInternalFloats_initialize();
  return OrgAssertjCoreInternalFloats_INSTANCE;
}

void OrgAssertjCoreInternalFloats_init(OrgAssertjCoreInternalFloats *self) {
  OrgAssertjCoreInternalRealNumbers_init(self);
}

OrgAssertjCoreInternalFloats *new_OrgAssertjCoreInternalFloats_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreInternalFloats, init)
}

OrgAssertjCoreInternalFloats *create_OrgAssertjCoreInternalFloats_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreInternalFloats, init)
}

void OrgAssertjCoreInternalFloats_initWithOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreInternalFloats *self, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  OrgAssertjCoreInternalRealNumbers_initWithOrgAssertjCoreInternalComparisonStrategy_(self, comparisonStrategy);
}

OrgAssertjCoreInternalFloats *new_OrgAssertjCoreInternalFloats_initWithOrgAssertjCoreInternalComparisonStrategy_(id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreInternalFloats, initWithOrgAssertjCoreInternalComparisonStrategy_, comparisonStrategy)
}

OrgAssertjCoreInternalFloats *create_OrgAssertjCoreInternalFloats_initWithOrgAssertjCoreInternalComparisonStrategy_(id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreInternalFloats, initWithOrgAssertjCoreInternalComparisonStrategy_, comparisonStrategy)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreInternalFloats)
