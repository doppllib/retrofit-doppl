//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/AbstractDoubleArrayAssert.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractDoubleArrayAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractDoubleArrayAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractDoubleArrayAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractDoubleArrayAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractDoubleArrayAssert

#if !defined (OrgAssertjCoreApiAbstractDoubleArrayAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractDoubleArrayAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractDoubleArrayAssert))
#define OrgAssertjCoreApiAbstractDoubleArrayAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractArrayAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractArrayAssert 1
#include "OrgAssertjCoreApiAbstractArrayAssert.h"

@class IOSClass;
@class IOSDoubleArray;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDataIndex;
@class OrgAssertjCoreDescriptionDescription;
@class OrgAssertjCoreInternalDoubleArrays;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractDoubleArrayAssert : OrgAssertjCoreApiAbstractArrayAssert {
 @public
  OrgAssertjCoreInternalDoubleArrays *arrays_;
}

#pragma mark Public

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)actual
                       withIOSClass:(IOSClass *)selfType;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)asWithNSString:(NSString *)arg0
                                             withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)containsWithDoubleArray:(IOSDoubleArray *)values;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)containsWithDouble:(jdouble)value
                                       withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)containsExactlyWithDoubleArray:(IOSDoubleArray *)values;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)containsOnlyWithDoubleArray:(IOSDoubleArray *)values;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)containsOnlyOnceWithDoubleArray:(IOSDoubleArray *)values;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)containsSequenceWithDoubleArray:(IOSDoubleArray *)sequence;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)containsSubsequenceWithDoubleArray:(IOSDoubleArray *)subsequence;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)describedAsWithNSString:(NSString *)arg0
                                                      withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)doesNotContainWithDoubleArray:(IOSDoubleArray *)values;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)doesNotContainWithDouble:(jdouble)value
                                             withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)doesNotHaveDuplicates;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)endsWithWithDoubleArray:(IOSDoubleArray *)sequence;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)hasSameSizeAsWithJavaLangIterable:(id<JavaLangIterable>)other;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)hasSameSizeAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)hasSizeWithInt:(jint)expected;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)inBinary;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)inHexadecimal;

- (void)isEmpty;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isNotEmpty;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (void)isNullOrEmpty;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isSorted;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isSortedAccordingToWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                                 withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)startsWithWithDoubleArray:(IOSDoubleArray *)sequence;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)usingDefaultComparator;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)usingDefaultElementComparator;

- (OrgAssertjCoreApiAbstractDoubleArrayAssert *)usingElementComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)customComparator;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractDoubleArrayAssert)

J2OBJC_FIELD_SETTER(OrgAssertjCoreApiAbstractDoubleArrayAssert, arrays_, OrgAssertjCoreInternalDoubleArrays *)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractDoubleArrayAssert_initWithDoubleArray_withIOSClass_(OrgAssertjCoreApiAbstractDoubleArrayAssert *self, IOSDoubleArray *actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractDoubleArrayAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractDoubleArrayAssert")
