//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/Assert.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreApiAssert.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"

@interface OrgAssertjCoreApiAssert : NSObject

@end

__attribute__((unused)) static IOSObjectArray *OrgAssertjCoreApiAssert__Annotations$0();

@implementation OrgAssertjCoreApiAssert

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, 3, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, -1, -1, -1, 4, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, 5, 1, -1, 2, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, 6, 1, -1, 2, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x481, 7, 8, -1, 9, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x481, 10, 8, -1, 9, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, 7, 11, -1, 12, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, 10, 11, -1, 12, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, 13, 14, -1, 15, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, -1, -1, -1, 4, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, 16, 17, -1, 18, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x481, 19, 20, -1, 21, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, 22, 17, -1, 18, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x481, 23, 20, -1, 21, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, 24, 1, -1, 2, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, 25, 1, -1, 2, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, 26, 17, -1, 18, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x401, 27, 17, -1, 18, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x481, 28, 20, -1, 21, -1, -1 },
    { NULL, "LOrgAssertjCoreApiAssert;", 0x481, 29, 20, -1, 21, -1, -1 },
    { NULL, "Z", 0x401, 30, 1, -1, -1, 31, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isEqualToWithId:);
  methods[1].selector = @selector(isNotEqualToWithId:);
  methods[2].selector = @selector(isNull);
  methods[3].selector = @selector(isNotNull);
  methods[4].selector = @selector(isSameAsWithId:);
  methods[5].selector = @selector(isNotSameAsWithId:);
  methods[6].selector = @selector(isInWithNSObjectArray:);
  methods[7].selector = @selector(isNotInWithNSObjectArray:);
  methods[8].selector = @selector(isInWithJavaLangIterable:);
  methods[9].selector = @selector(isNotInWithJavaLangIterable:);
  methods[10].selector = @selector(usingComparatorWithJavaUtilComparator:);
  methods[11].selector = @selector(usingDefaultComparator);
  methods[12].selector = @selector(isInstanceOfWithIOSClass:);
  methods[13].selector = @selector(isInstanceOfAnyWithIOSClassArray:);
  methods[14].selector = @selector(isNotInstanceOfWithIOSClass:);
  methods[15].selector = @selector(isNotInstanceOfAnyWithIOSClassArray:);
  methods[16].selector = @selector(hasSameClassAsWithId:);
  methods[17].selector = @selector(doesNotHaveSameClassAsWithId:);
  methods[18].selector = @selector(isExactlyInstanceOfWithIOSClass:);
  methods[19].selector = @selector(isNotExactlyInstanceOfWithIOSClass:);
  methods[20].selector = @selector(isOfAnyClassInWithIOSClassArray:);
  methods[21].selector = @selector(isNotOfAnyClassInWithIOSClassArray:);
  methods[22].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "isEqualTo", "LNSObject;", "(Ljava/lang/Object;)TS;", "isNotEqualTo", "()TS;", "isSameAs", "isNotSameAs", "isIn", "[LNSObject;", "([Ljava/lang/Object;)TS;", "isNotIn", "LJavaLangIterable;", "(Ljava/lang/Iterable<*>;)TS;", "usingComparator", "LJavaUtilComparator;", "(Ljava/util/Comparator<-TA;>;)TS;", "isInstanceOf", "LIOSClass;", "(Ljava/lang/Class<*>;)TS;", "isInstanceOfAny", "[LIOSClass;", "([Ljava/lang/Class<*>;)TS;", "isNotInstanceOf", "isNotInstanceOfAny", "hasSameClassAs", "doesNotHaveSameClassAs", "isExactlyInstanceOf", "isNotExactlyInstanceOf", "isOfAnyClassIn", "isNotOfAnyClassIn", "equals", (void *)&OrgAssertjCoreApiAssert__Annotations$0, "<S::Lorg/assertj/core/api/Assert<TS;TA;>;A:Ljava/lang/Object;>Ljava/lang/Object;Lorg/assertj/core/api/Descriptable<TS;>;Lorg/assertj/core/api/ExtensionPoints<TS;TA;>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreApiAssert = { "Assert", "org.assertj.core.api", ptrTable, methods, NULL, 7, 0x609, 23, 0, -1, -1, -1, 32, -1 };
  return &_OrgAssertjCoreApiAssert;
}

@end

IOSObjectArray *OrgAssertjCoreApiAssert__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgAssertjCoreApiAssert)
