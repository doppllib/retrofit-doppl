//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/AbstractFloatArrayAssert.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractFloatArrayAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractFloatArrayAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractFloatArrayAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractFloatArrayAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractFloatArrayAssert

#if !defined (OrgAssertjCoreApiAbstractFloatArrayAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractFloatArrayAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractFloatArrayAssert))
#define OrgAssertjCoreApiAbstractFloatArrayAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractArrayAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractArrayAssert 1
#include "OrgAssertjCoreApiAbstractArrayAssert.h"

@class IOSClass;
@class IOSFloatArray;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDataIndex;
@class OrgAssertjCoreDescriptionDescription;
@class OrgAssertjCoreInternalFloatArrays;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractFloatArrayAssert : OrgAssertjCoreApiAbstractArrayAssert {
 @public
  OrgAssertjCoreInternalFloatArrays *arrays_;
}

#pragma mark Public

- (instancetype)initWithFloatArray:(IOSFloatArray *)actual
                      withIOSClass:(IOSClass *)selfType;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)asWithNSString:(NSString *)arg0
                                            withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)containsWithFloatArray:(IOSFloatArray *)values;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)containsWithFloat:(jfloat)value
                                     withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)containsExactlyWithFloatArray:(IOSFloatArray *)values;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)containsOnlyWithFloatArray:(IOSFloatArray *)values;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)containsOnlyOnceWithFloatArray:(IOSFloatArray *)values;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)containsSequenceWithFloatArray:(IOSFloatArray *)sequence;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)containsSubsequenceWithFloatArray:(IOSFloatArray *)subsequence;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)describedAsWithNSString:(NSString *)arg0
                                                     withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)doesNotContainWithFloatArray:(IOSFloatArray *)values;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)doesNotContainWithFloat:(jfloat)value
                                           withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)index;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)doesNotHaveDuplicates;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)endsWithWithFloatArray:(IOSFloatArray *)sequence;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)hasSameSizeAsWithJavaLangIterable:(id<JavaLangIterable>)other;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)hasSameSizeAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)hasSizeWithInt:(jint)expected;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)inBinary;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)inHexadecimal;

- (void)isEmpty;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isNotEmpty;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (void)isNullOrEmpty;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isSorted;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isSortedAccordingToWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                                withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)startsWithWithFloatArray:(IOSFloatArray *)sequence;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)usingDefaultComparator;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)usingDefaultElementComparator;

- (OrgAssertjCoreApiAbstractFloatArrayAssert *)usingElementComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)customComparator;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractFloatArrayAssert)

J2OBJC_FIELD_SETTER(OrgAssertjCoreApiAbstractFloatArrayAssert, arrays_, OrgAssertjCoreInternalFloatArrays *)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractFloatArrayAssert_initWithFloatArray_withIOSClass_(OrgAssertjCoreApiAbstractFloatArrayAssert *self, IOSFloatArray *actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractFloatArrayAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractFloatArrayAssert")
