//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/AbstractSoftAssertions.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractSoftAssertions")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractSoftAssertions
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractSoftAssertions 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractSoftAssertions 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractSoftAssertions

#if !defined (OrgAssertjCoreApiAbstractSoftAssertions_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractSoftAssertions || defined(INCLUDE_OrgAssertjCoreApiAbstractSoftAssertions))
#define OrgAssertjCoreApiAbstractSoftAssertions_

@class IOSBooleanArray;
@class IOSByteArray;
@class IOSCharArray;
@class IOSClass;
@class IOSDoubleArray;
@class IOSFloatArray;
@class IOSIntArray;
@class IOSLongArray;
@class IOSObjectArray;
@class IOSShortArray;
@class JavaIoFile;
@class JavaIoInputStream;
@class JavaLangBoolean;
@class JavaLangByte;
@class JavaLangCharacter;
@class JavaLangDouble;
@class JavaLangFloat;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaLangShort;
@class JavaMathBigDecimal;
@class JavaUtilDate;
@class OrgAssertjCoreApiBigDecimalAssert;
@class OrgAssertjCoreApiBooleanArrayAssert;
@class OrgAssertjCoreApiBooleanAssert;
@class OrgAssertjCoreApiByteArrayAssert;
@class OrgAssertjCoreApiByteAssert;
@class OrgAssertjCoreApiCharArrayAssert;
@class OrgAssertjCoreApiCharSequenceAssert;
@class OrgAssertjCoreApiCharacterAssert;
@class OrgAssertjCoreApiClassAssert;
@class OrgAssertjCoreApiDateAssert;
@class OrgAssertjCoreApiDoubleArrayAssert;
@class OrgAssertjCoreApiDoubleAssert;
@class OrgAssertjCoreApiFileAssert;
@class OrgAssertjCoreApiFloatArrayAssert;
@class OrgAssertjCoreApiFloatAssert;
@class OrgAssertjCoreApiInputStreamAssert;
@class OrgAssertjCoreApiIntArrayAssert;
@class OrgAssertjCoreApiIntegerAssert;
@class OrgAssertjCoreApiIterableAssert;
@class OrgAssertjCoreApiListAssert;
@class OrgAssertjCoreApiLongArrayAssert;
@class OrgAssertjCoreApiLongAssert;
@class OrgAssertjCoreApiMapAssert;
@class OrgAssertjCoreApiObjectArrayAssert;
@class OrgAssertjCoreApiObjectAssert;
@class OrgAssertjCoreApiShortArrayAssert;
@class OrgAssertjCoreApiShortAssert;
@class OrgAssertjCoreApiStringAssert;
@class OrgAssertjCoreApiThrowableAssert;
@protocol JavaLangCharSequence;
@protocol JavaLangIterable;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface OrgAssertjCoreApiAbstractSoftAssertions : NSObject

#pragma mark Public

- (OrgAssertjCoreApiBigDecimalAssert *)assertThatWithJavaMathBigDecimal:(JavaMathBigDecimal *)actual;

- (OrgAssertjCoreApiBooleanAssert *)assertThatWithBoolean:(jboolean)actual;

- (OrgAssertjCoreApiBooleanAssert *)assertThatWithJavaLangBoolean:(JavaLangBoolean *)actual;

- (OrgAssertjCoreApiBooleanArrayAssert *)assertThatWithBooleanArray:(IOSBooleanArray *)actual;

- (OrgAssertjCoreApiByteAssert *)assertThatWithByte:(jbyte)actual;

- (OrgAssertjCoreApiByteAssert *)assertThatWithJavaLangByte:(JavaLangByte *)actual;

- (OrgAssertjCoreApiByteArrayAssert *)assertThatWithByteArray:(IOSByteArray *)actual;

- (OrgAssertjCoreApiCharacterAssert *)assertThatWithChar:(jchar)actual;

- (OrgAssertjCoreApiCharArrayAssert *)assertThatWithCharArray:(IOSCharArray *)actual;

- (OrgAssertjCoreApiCharacterAssert *)assertThatWithJavaLangCharacter:(JavaLangCharacter *)actual;

- (OrgAssertjCoreApiCharSequenceAssert *)assertThatWithJavaLangCharSequence:(id<JavaLangCharSequence>)actual;

- (OrgAssertjCoreApiClassAssert *)assertThatWithIOSClass:(IOSClass *)actual;

- (OrgAssertjCoreApiDateAssert *)assertThatWithJavaUtilDate:(JavaUtilDate *)actual;

- (OrgAssertjCoreApiDoubleAssert *)assertThatWithDouble:(jdouble)actual;

- (OrgAssertjCoreApiDoubleAssert *)assertThatWithJavaLangDouble:(JavaLangDouble *)actual;

- (OrgAssertjCoreApiDoubleArrayAssert *)assertThatWithDoubleArray:(IOSDoubleArray *)actual;

- (OrgAssertjCoreApiFileAssert *)assertThatWithJavaIoFile:(JavaIoFile *)actual;

- (OrgAssertjCoreApiFloatAssert *)assertThatWithFloat:(jfloat)actual;

- (OrgAssertjCoreApiFloatAssert *)assertThatWithJavaLangFloat:(JavaLangFloat *)actual;

- (OrgAssertjCoreApiFloatArrayAssert *)assertThatWithFloatArray:(IOSFloatArray *)actual;

- (OrgAssertjCoreApiInputStreamAssert *)assertThatWithJavaIoInputStream:(JavaIoInputStream *)actual;

- (OrgAssertjCoreApiIntegerAssert *)assertThatWithInt:(jint)actual;

- (OrgAssertjCoreApiIntArrayAssert *)assertThatWithIntArray:(IOSIntArray *)actual;

- (OrgAssertjCoreApiIntegerAssert *)assertThatWithJavaLangInteger:(JavaLangInteger *)actual;

- (OrgAssertjCoreApiIterableAssert *)assertThatWithJavaLangIterable:(id<JavaLangIterable>)actual;

- (OrgAssertjCoreApiIterableAssert *)assertThatWithJavaUtilIterator:(id<JavaUtilIterator>)actual;

- (OrgAssertjCoreApiListAssert *)assertThatWithJavaUtilList:(id<JavaUtilList>)actual;

- (OrgAssertjCoreApiLongAssert *)assertThatWithLong:(jlong)actual;

- (OrgAssertjCoreApiLongAssert *)assertThatWithJavaLangLong:(JavaLangLong *)actual;

- (OrgAssertjCoreApiLongArrayAssert *)assertThatWithLongArray:(IOSLongArray *)actual;

- (OrgAssertjCoreApiMapAssert *)assertThatWithJavaUtilMap:(id<JavaUtilMap>)actual;

- (OrgAssertjCoreApiShortAssert *)assertThatWithShort:(jshort)actual;

- (OrgAssertjCoreApiShortAssert *)assertThatWithJavaLangShort:(JavaLangShort *)actual;

- (OrgAssertjCoreApiShortArrayAssert *)assertThatWithShortArray:(IOSShortArray *)actual;

- (OrgAssertjCoreApiStringAssert *)assertThatWithNSString:(NSString *)actual;

- (OrgAssertjCoreApiObjectAssert *)assertThatWithId:(id)actual;

- (OrgAssertjCoreApiObjectArrayAssert *)assertThatWithNSObjectArray:(IOSObjectArray *)actual;

- (OrgAssertjCoreApiThrowableAssert *)assertThatWithNSException:(NSException *)actual;

#pragma mark Protected

- (instancetype)init;

- (id)proxyWithIOSClass:(IOSClass *)assertClass
           withIOSClass:(IOSClass *)actualClass
                 withId:(id)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractSoftAssertions)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractSoftAssertions_init(OrgAssertjCoreApiAbstractSoftAssertions *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractSoftAssertions)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractSoftAssertions")
