//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/condition/Not.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreConditionNot")
#ifdef RESTRICT_OrgAssertjCoreConditionNot
#define INCLUDE_ALL_OrgAssertjCoreConditionNot 0
#else
#define INCLUDE_ALL_OrgAssertjCoreConditionNot 1
#endif
#undef RESTRICT_OrgAssertjCoreConditionNot

#if !defined (OrgAssertjCoreConditionNot_) && (INCLUDE_ALL_OrgAssertjCoreConditionNot || defined(INCLUDE_OrgAssertjCoreConditionNot))
#define OrgAssertjCoreConditionNot_

#define RESTRICT_OrgAssertjCoreConditionNegative 1
#define INCLUDE_OrgAssertjCoreConditionNegative 1
#include "OrgAssertjCoreConditionNegative.h"

@class OrgAssertjCoreApiCondition;

@interface OrgAssertjCoreConditionNot : OrgAssertjCoreConditionNegative

#pragma mark Public

+ (OrgAssertjCoreConditionNot *)not__WithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreConditionNot)

FOUNDATION_EXPORT OrgAssertjCoreConditionNot *OrgAssertjCoreConditionNot_not__WithOrgAssertjCoreApiCondition_(OrgAssertjCoreApiCondition *condition);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreConditionNot)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreConditionNot")
