//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/GenericComparableAssert.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiGenericComparableAssert")
#ifdef RESTRICT_OrgAssertjCoreApiGenericComparableAssert
#define INCLUDE_ALL_OrgAssertjCoreApiGenericComparableAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiGenericComparableAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiGenericComparableAssert

#if !defined (OrgAssertjCoreApiGenericComparableAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiGenericComparableAssert || defined(INCLUDE_OrgAssertjCoreApiGenericComparableAssert))
#define OrgAssertjCoreApiGenericComparableAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractComparableAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractComparableAssert 1
#include "OrgAssertjCoreApiAbstractComparableAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangComparable;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiGenericComparableAssert : OrgAssertjCoreApiAbstractComparableAssert

#pragma mark Public

- (OrgAssertjCoreApiGenericComparableAssert *)asWithNSString:(NSString *)arg0
                                           withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiGenericComparableAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)describedAsWithNSString:(NSString *)arg0
                                                    withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiGenericComparableAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)inBinary;

- (OrgAssertjCoreApiGenericComparableAssert *)inHexadecimal;

- (OrgAssertjCoreApiGenericComparableAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(id<JavaLangComparable>)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isGreaterThanWithJavaLangComparable:(id<JavaLangComparable>)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isLessThanOrEqualToWithJavaLangComparable:(id<JavaLangComparable>)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isLessThanWithJavaLangComparable:(id<JavaLangComparable>)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isNotNull;

- (OrgAssertjCoreApiGenericComparableAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                               withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiGenericComparableAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiGenericComparableAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaLangComparable:(id<JavaLangComparable>)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiGenericComparableAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiGenericComparableAssert_initWithJavaLangComparable_(OrgAssertjCoreApiGenericComparableAssert *self, id<JavaLangComparable> actual);

FOUNDATION_EXPORT OrgAssertjCoreApiGenericComparableAssert *new_OrgAssertjCoreApiGenericComparableAssert_initWithJavaLangComparable_(id<JavaLangComparable> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiGenericComparableAssert *create_OrgAssertjCoreApiGenericComparableAssert_initWithJavaLangComparable_(id<JavaLangComparable> actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiGenericComparableAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiGenericComparableAssert")
