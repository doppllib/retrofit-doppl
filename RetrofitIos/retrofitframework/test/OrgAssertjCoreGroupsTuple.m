//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/groups/Tuple.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreGroupsTuple.h"
#include "OrgAssertjCoreUtilCollections.h"
#include "OrgAssertjCoreUtilLists.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"

@interface OrgAssertjCoreGroupsTuple () {
 @public
  id<JavaUtilList> datas_;
}

@end

J2OBJC_FIELD_SETTER(OrgAssertjCoreGroupsTuple, datas_, id<JavaUtilList>)

@implementation OrgAssertjCoreGroupsTuple

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)values {
  OrgAssertjCoreGroupsTuple_initWithNSObjectArray_(self, values);
  return self;
}

- (void)addDataWithId:(id)data {
  [((id<JavaUtilList>) nil_chk(datas_)) addWithId:data];
}

- (IOSObjectArray *)toArray {
  return [((id<JavaUtilList>) nil_chk(datas_)) toArray];
}

- (NSUInteger)hash {
  jint prime = 31;
  jint result = 1;
  result = prime * result + ((jint) [((id<JavaUtilList>) nil_chk(datas_)) hash]);
  return result;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) return true;
  if (obj == nil) return false;
  if ([self java_getClass] != [obj java_getClass]) return false;
  OrgAssertjCoreGroupsTuple *other = (OrgAssertjCoreGroupsTuple *) cast_chk(obj, [OrgAssertjCoreGroupsTuple class]);
  return [((id<JavaUtilList>) nil_chk(datas_)) isEqual:other->datas_];
}

- (NSString *)description {
  return OrgAssertjCoreUtilCollections_formatWithJavaUtilCollection_withNSString_withNSString_(datas_, @"(", @")");
}

+ (OrgAssertjCoreGroupsTuple *)tupleWithNSObjectArray:(IOSObjectArray *)values {
  return OrgAssertjCoreGroupsTuple_tupleWithNSObjectArray_(values);
}

- (void)dealloc {
  RELEASE_(datas_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x81, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "LOrgAssertjCoreGroupsTuple;", 0x89, 6, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSObjectArray:);
  methods[1].selector = @selector(addDataWithId:);
  methods[2].selector = @selector(toArray);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(isEqual:);
  methods[5].selector = @selector(description);
  methods[6].selector = @selector(tupleWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "datas_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "[LNSObject;", "addData", "LNSObject;", "hashCode", "equals", "toString", "tuple", "Ljava/util/List<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _OrgAssertjCoreGroupsTuple = { "Tuple", "org.assertj.core.groups", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreGroupsTuple;
}

@end

void OrgAssertjCoreGroupsTuple_initWithNSObjectArray_(OrgAssertjCoreGroupsTuple *self, IOSObjectArray *values) {
  NSObject_init(self);
  JreStrongAssign(&self->datas_, OrgAssertjCoreUtilLists_newArrayList());
  JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(self->datas_, values);
}

OrgAssertjCoreGroupsTuple *new_OrgAssertjCoreGroupsTuple_initWithNSObjectArray_(IOSObjectArray *values) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreGroupsTuple, initWithNSObjectArray_, values)
}

OrgAssertjCoreGroupsTuple *create_OrgAssertjCoreGroupsTuple_initWithNSObjectArray_(IOSObjectArray *values) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreGroupsTuple, initWithNSObjectArray_, values)
}

OrgAssertjCoreGroupsTuple *OrgAssertjCoreGroupsTuple_tupleWithNSObjectArray_(IOSObjectArray *values) {
  OrgAssertjCoreGroupsTuple_initialize();
  return create_OrgAssertjCoreGroupsTuple_initWithNSObjectArray_(values);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreGroupsTuple)
