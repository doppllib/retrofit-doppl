//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/ObjectAssert.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiObjectAssert")
#ifdef RESTRICT_OrgAssertjCoreApiObjectAssert
#define INCLUDE_ALL_OrgAssertjCoreApiObjectAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiObjectAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiObjectAssert

#if !defined (OrgAssertjCoreApiObjectAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiObjectAssert || defined(INCLUDE_OrgAssertjCoreApiObjectAssert))
#define OrgAssertjCoreApiObjectAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractObjectAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractObjectAssert 1
#include "OrgAssertjCoreApiAbstractObjectAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiObjectAssert : OrgAssertjCoreApiAbstractObjectAssert

#pragma mark Public

- (OrgAssertjCoreApiObjectAssert *)asWithNSString:(NSString *)arg0
                                withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiObjectAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiObjectAssert *)describedAsWithNSString:(NSString *)arg0
                                         withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiObjectAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiObjectAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiObjectAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiObjectAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiObjectAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiObjectAssert *)isEqualsToByComparingFieldsWithId:(id)arg0;

- (OrgAssertjCoreApiObjectAssert *)isEqualToComparingFieldByFieldWithId:(id)arg0;

- (OrgAssertjCoreApiObjectAssert *)isEqualToComparingOnlyGivenFieldsWithId:(id)arg0
                                                         withNSStringArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiObjectAssert *)isEqualToIgnoringGivenFieldsWithId:(id)arg0
                                                    withNSStringArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiObjectAssert *)isEqualToIgnoringNullFieldsWithId:(id)arg0;

- (OrgAssertjCoreApiObjectAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiObjectAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiObjectAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiObjectAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiObjectAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiObjectAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiObjectAssert *)isLenientEqualsToByAcceptingFieldsWithId:(id)arg0
                                                          withNSStringArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiObjectAssert *)isLenientEqualsToByIgnoringFieldsWithId:(id)arg0
                                                         withNSStringArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiObjectAssert *)isLenientEqualsToByIgnoringNullFieldsWithId:(id)arg0;

- (OrgAssertjCoreApiObjectAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiObjectAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiObjectAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiObjectAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiObjectAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiObjectAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiObjectAssert *)isNotNull;

- (OrgAssertjCoreApiObjectAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiObjectAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiObjectAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiObjectAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiObjectAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiObjectAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiObjectAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                    withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiObjectAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiObjectAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithId:(id)actual;

- (OrgAssertjCoreApiObjectAssert *)inBinary;

- (OrgAssertjCoreApiObjectAssert *)inHexadecimal;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiObjectAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiObjectAssert_initWithId_(OrgAssertjCoreApiObjectAssert *self, id actual);

FOUNDATION_EXPORT OrgAssertjCoreApiObjectAssert *new_OrgAssertjCoreApiObjectAssert_initWithId_(id actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiObjectAssert *create_OrgAssertjCoreApiObjectAssert_initWithId_(id actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiObjectAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiObjectAssert")
