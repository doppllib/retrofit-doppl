//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/condition/Join.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreConditionJoin")
#ifdef RESTRICT_OrgAssertjCoreConditionJoin
#define INCLUDE_ALL_OrgAssertjCoreConditionJoin 0
#else
#define INCLUDE_ALL_OrgAssertjCoreConditionJoin 1
#endif
#undef RESTRICT_OrgAssertjCoreConditionJoin

#if !defined (OrgAssertjCoreConditionJoin_) && (INCLUDE_ALL_OrgAssertjCoreConditionJoin || defined(INCLUDE_OrgAssertjCoreConditionJoin))
#define OrgAssertjCoreConditionJoin_

#define RESTRICT_OrgAssertjCoreApiCondition 1
#define INCLUDE_OrgAssertjCoreApiCondition 1
#include "OrgAssertjCoreApiCondition.h"

@class IOSObjectArray;
@protocol JavaLangIterable;
@protocol JavaUtilCollection;

@interface OrgAssertjCoreConditionJoin : OrgAssertjCoreApiCondition {
 @public
  id<JavaUtilCollection> conditions_;
}

#pragma mark Protected

- (instancetype)initWithOrgAssertjCoreApiConditionArray:(IOSObjectArray *)conditions;

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)conditions;

- (id<JavaUtilCollection>)conditions;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreConditionJoin)

J2OBJC_FIELD_SETTER(OrgAssertjCoreConditionJoin, conditions_, id<JavaUtilCollection>)

FOUNDATION_EXPORT void OrgAssertjCoreConditionJoin_initWithOrgAssertjCoreApiConditionArray_(OrgAssertjCoreConditionJoin *self, IOSObjectArray *conditions);

FOUNDATION_EXPORT void OrgAssertjCoreConditionJoin_initWithJavaLangIterable_(OrgAssertjCoreConditionJoin *self, id<JavaLangIterable> conditions);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreConditionJoin)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreConditionJoin")
