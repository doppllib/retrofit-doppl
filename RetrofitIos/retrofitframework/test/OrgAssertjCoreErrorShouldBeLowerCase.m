//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/error/ShouldBeLowerCase.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldBeLowerCase.h"
#include "java/lang/Character.h"

@interface OrgAssertjCoreErrorShouldBeLowerCase ()

- (instancetype)initWithJavaLangCharacter:(JavaLangCharacter *)actual;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldBeLowerCase_initWithJavaLangCharacter_(OrgAssertjCoreErrorShouldBeLowerCase *self, JavaLangCharacter *actual);

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeLowerCase *new_OrgAssertjCoreErrorShouldBeLowerCase_initWithJavaLangCharacter_(JavaLangCharacter *actual) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeLowerCase *create_OrgAssertjCoreErrorShouldBeLowerCase_initWithJavaLangCharacter_(JavaLangCharacter *actual);

@implementation OrgAssertjCoreErrorShouldBeLowerCase

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeLowerCaseWithJavaLangCharacter:(JavaLangCharacter *)actual {
  return OrgAssertjCoreErrorShouldBeLowerCase_shouldBeLowerCaseWithJavaLangCharacter_(actual);
}

- (instancetype)initWithJavaLangCharacter:(JavaLangCharacter *)actual {
  OrgAssertjCoreErrorShouldBeLowerCase_initWithJavaLangCharacter_(self, actual);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldBeLowerCaseWithJavaLangCharacter:);
  methods[1].selector = @selector(initWithJavaLangCharacter:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldBeLowerCase", "LJavaLangCharacter;" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldBeLowerCase = { "ShouldBeLowerCase", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldBeLowerCase;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeLowerCase_shouldBeLowerCaseWithJavaLangCharacter_(JavaLangCharacter *actual) {
  OrgAssertjCoreErrorShouldBeLowerCase_initialize();
  return create_OrgAssertjCoreErrorShouldBeLowerCase_initWithJavaLangCharacter_(actual);
}

void OrgAssertjCoreErrorShouldBeLowerCase_initWithJavaLangCharacter_(OrgAssertjCoreErrorShouldBeLowerCase *self, JavaLangCharacter *actual) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting <%s> to be a lowercase character", [IOSObjectArray arrayWithObjects:(id[]){ actual } count:1 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldBeLowerCase *new_OrgAssertjCoreErrorShouldBeLowerCase_initWithJavaLangCharacter_(JavaLangCharacter *actual) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldBeLowerCase, initWithJavaLangCharacter_, actual)
}

OrgAssertjCoreErrorShouldBeLowerCase *create_OrgAssertjCoreErrorShouldBeLowerCase_initWithJavaLangCharacter_(JavaLangCharacter *actual) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldBeLowerCase, initWithJavaLangCharacter_, actual)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldBeLowerCase)
