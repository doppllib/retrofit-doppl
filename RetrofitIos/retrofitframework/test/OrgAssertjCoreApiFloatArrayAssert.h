//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/FloatArrayAssert.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiFloatArrayAssert")
#ifdef RESTRICT_OrgAssertjCoreApiFloatArrayAssert
#define INCLUDE_ALL_OrgAssertjCoreApiFloatArrayAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiFloatArrayAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiFloatArrayAssert

#if !defined (OrgAssertjCoreApiFloatArrayAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiFloatArrayAssert || defined(INCLUDE_OrgAssertjCoreApiFloatArrayAssert))
#define OrgAssertjCoreApiFloatArrayAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractFloatArrayAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractFloatArrayAssert 1
#include "OrgAssertjCoreApiAbstractFloatArrayAssert.h"

@class IOSClass;
@class IOSFloatArray;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDataIndex;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiFloatArrayAssert : OrgAssertjCoreApiAbstractFloatArrayAssert

#pragma mark Public

- (OrgAssertjCoreApiFloatArrayAssert *)asWithNSString:(NSString *)arg0
                                    withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiFloatArrayAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)containsExactlyWithFloatArray:(IOSFloatArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)containsOnlyOnceWithFloatArray:(IOSFloatArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)containsOnlyWithFloatArray:(IOSFloatArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)containsSequenceWithFloatArray:(IOSFloatArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)containsSubsequenceWithFloatArray:(IOSFloatArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)containsWithFloat:(jfloat)arg0
                             withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)arg1;

- (OrgAssertjCoreApiFloatArrayAssert *)containsWithFloatArray:(IOSFloatArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)describedAsWithNSString:(NSString *)arg0
                                             withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiFloatArrayAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)doesNotContainWithFloat:(jfloat)arg0
                                   withOrgAssertjCoreDataIndex:(OrgAssertjCoreDataIndex *)arg1;

- (OrgAssertjCoreApiFloatArrayAssert *)doesNotContainWithFloatArray:(IOSFloatArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)doesNotHaveDuplicates;

- (OrgAssertjCoreApiFloatArrayAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)endsWithWithFloatArray:(IOSFloatArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)hasSameSizeAsWithId:(id)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)hasSameSizeAsWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)hasSizeWithInt:(jint)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)inBinary;

- (OrgAssertjCoreApiFloatArrayAssert *)inHexadecimal;

- (OrgAssertjCoreApiFloatArrayAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isNotEmpty;

- (OrgAssertjCoreApiFloatArrayAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isNotNull;

- (OrgAssertjCoreApiFloatArrayAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isSorted;

- (OrgAssertjCoreApiFloatArrayAssert *)isSortedAccordingToWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                        withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiFloatArrayAssert *)startsWithWithFloatArray:(IOSFloatArray *)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiFloatArrayAssert *)usingDefaultComparator;

- (OrgAssertjCoreApiFloatArrayAssert *)usingDefaultElementComparator;

- (OrgAssertjCoreApiFloatArrayAssert *)usingElementComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

#pragma mark Protected

- (instancetype)initWithFloatArray:(IOSFloatArray *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiFloatArrayAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiFloatArrayAssert_initWithFloatArray_(OrgAssertjCoreApiFloatArrayAssert *self, IOSFloatArray *actual);

FOUNDATION_EXPORT OrgAssertjCoreApiFloatArrayAssert *new_OrgAssertjCoreApiFloatArrayAssert_initWithFloatArray_(IOSFloatArray *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiFloatArrayAssert *create_OrgAssertjCoreApiFloatArrayAssert_initWithFloatArray_(IOSFloatArray *actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiFloatArrayAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiFloatArrayAssert")
