//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/error/ElementsShouldHaveExactly.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldHaveExactly")
#ifdef RESTRICT_OrgAssertjCoreErrorElementsShouldHaveExactly
#define INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldHaveExactly 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldHaveExactly 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorElementsShouldHaveExactly

#if !defined (OrgAssertjCoreErrorElementsShouldHaveExactly_) && (INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldHaveExactly || defined(INCLUDE_OrgAssertjCoreErrorElementsShouldHaveExactly))
#define OrgAssertjCoreErrorElementsShouldHaveExactly_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@class OrgAssertjCoreApiCondition;
@protocol OrgAssertjCoreErrorErrorMessageFactory;

@interface OrgAssertjCoreErrorElementsShouldHaveExactly : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)elementsShouldHaveExactlyWithId:(id)actual
                                                                      withInt:(jint)times
                                               withOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorElementsShouldHaveExactly)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorElementsShouldHaveExactly_elementsShouldHaveExactlyWithId_withInt_withOrgAssertjCoreApiCondition_(id actual, jint times, OrgAssertjCoreApiCondition *condition);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorElementsShouldHaveExactly)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldHaveExactly")
