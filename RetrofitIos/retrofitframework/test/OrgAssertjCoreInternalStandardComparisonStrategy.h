//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/internal/StandardComparisonStrategy.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreInternalStandardComparisonStrategy")
#ifdef RESTRICT_OrgAssertjCoreInternalStandardComparisonStrategy
#define INCLUDE_ALL_OrgAssertjCoreInternalStandardComparisonStrategy 0
#else
#define INCLUDE_ALL_OrgAssertjCoreInternalStandardComparisonStrategy 1
#endif
#undef RESTRICT_OrgAssertjCoreInternalStandardComparisonStrategy

#if !defined (OrgAssertjCoreInternalStandardComparisonStrategy_) && (INCLUDE_ALL_OrgAssertjCoreInternalStandardComparisonStrategy || defined(INCLUDE_OrgAssertjCoreInternalStandardComparisonStrategy))
#define OrgAssertjCoreInternalStandardComparisonStrategy_

#define RESTRICT_OrgAssertjCoreInternalAbstractComparisonStrategy 1
#define INCLUDE_OrgAssertjCoreInternalAbstractComparisonStrategy 1
#include "OrgAssertjCoreInternalAbstractComparisonStrategy.h"

@protocol JavaLangIterable;
@protocol JavaUtilSet;

@interface OrgAssertjCoreInternalStandardComparisonStrategy : OrgAssertjCoreInternalAbstractComparisonStrategy

#pragma mark Public

- (jboolean)areEqualWithId:(id)actual
                    withId:(id)other;

- (NSString *)asText;

- (id<JavaLangIterable>)duplicatesFromWithJavaLangIterable:(id<JavaLangIterable>)iterable;

+ (OrgAssertjCoreInternalStandardComparisonStrategy *)instance;

- (jboolean)isGreaterThanWithId:(id)actual
                         withId:(id)other;

- (jboolean)isLessThanWithId:(id)actual
                      withId:(id)other;

- (jboolean)isStandard;

- (jboolean)iterableContainsWithJavaLangIterable:(id<JavaLangIterable>)iterable
                                          withId:(id)value;

- (void)iterableRemovesWithJavaLangIterable:(id<JavaLangIterable>)iterable
                                     withId:(id)value;

- (jboolean)stringContainsWithNSString:(NSString *)string
                          withNSString:(NSString *)sequence;

- (jboolean)stringEndsWithWithNSString:(NSString *)string
                          withNSString:(NSString *)suffix;

- (jboolean)stringStartsWithWithNSString:(NSString *)string
                            withNSString:(NSString *)prefix;

#pragma mark Protected

- (instancetype)init;

- (id<JavaUtilSet>)newSetUsingComparisonStrategy OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_INIT(OrgAssertjCoreInternalStandardComparisonStrategy)

FOUNDATION_EXPORT OrgAssertjCoreInternalStandardComparisonStrategy *OrgAssertjCoreInternalStandardComparisonStrategy_instance();

FOUNDATION_EXPORT void OrgAssertjCoreInternalStandardComparisonStrategy_init(OrgAssertjCoreInternalStandardComparisonStrategy *self);

FOUNDATION_EXPORT OrgAssertjCoreInternalStandardComparisonStrategy *new_OrgAssertjCoreInternalStandardComparisonStrategy_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreInternalStandardComparisonStrategy *create_OrgAssertjCoreInternalStandardComparisonStrategy_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreInternalStandardComparisonStrategy)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreInternalStandardComparisonStrategy")
