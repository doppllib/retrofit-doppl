//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/error/ShouldBeInSameSecond.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldBeInSameSecond.h"
#include "java/util/Date.h"

@interface OrgAssertjCoreErrorShouldBeInSameSecond ()

- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)actual
                    withJavaUtilDate:(JavaUtilDate *)other;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldBeInSameSecond_initWithJavaUtilDate_withJavaUtilDate_(OrgAssertjCoreErrorShouldBeInSameSecond *self, JavaUtilDate *actual, JavaUtilDate *other);

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeInSameSecond *new_OrgAssertjCoreErrorShouldBeInSameSecond_initWithJavaUtilDate_withJavaUtilDate_(JavaUtilDate *actual, JavaUtilDate *other) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeInSameSecond *create_OrgAssertjCoreErrorShouldBeInSameSecond_initWithJavaUtilDate_withJavaUtilDate_(JavaUtilDate *actual, JavaUtilDate *other);

@implementation OrgAssertjCoreErrorShouldBeInSameSecond

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeInSameSecondWithJavaUtilDate:(JavaUtilDate *)actual
                                                                  withJavaUtilDate:(JavaUtilDate *)other {
  return OrgAssertjCoreErrorShouldBeInSameSecond_shouldBeInSameSecondWithJavaUtilDate_withJavaUtilDate_(actual, other);
}

- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)actual
                    withJavaUtilDate:(JavaUtilDate *)other {
  OrgAssertjCoreErrorShouldBeInSameSecond_initWithJavaUtilDate_withJavaUtilDate_(self, actual, other);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldBeInSameSecondWithJavaUtilDate:withJavaUtilDate:);
  methods[1].selector = @selector(initWithJavaUtilDate:withJavaUtilDate:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldBeInSameSecond", "LJavaUtilDate;LJavaUtilDate;" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldBeInSameSecond = { "ShouldBeInSameSecond", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldBeInSameSecond;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeInSameSecond_shouldBeInSameSecondWithJavaUtilDate_withJavaUtilDate_(JavaUtilDate *actual, JavaUtilDate *other) {
  OrgAssertjCoreErrorShouldBeInSameSecond_initialize();
  return create_OrgAssertjCoreErrorShouldBeInSameSecond_initWithJavaUtilDate_withJavaUtilDate_(actual, other);
}

void OrgAssertjCoreErrorShouldBeInSameSecond_initWithJavaUtilDate_withJavaUtilDate_(OrgAssertjCoreErrorShouldBeInSameSecond *self, JavaUtilDate *actual, JavaUtilDate *other) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting:\n <%s>\nto have same year, month, day, hour, minute and second fields values as:\n <%s>", [IOSObjectArray arrayWithObjects:(id[]){ actual, other } count:2 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldBeInSameSecond *new_OrgAssertjCoreErrorShouldBeInSameSecond_initWithJavaUtilDate_withJavaUtilDate_(JavaUtilDate *actual, JavaUtilDate *other) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldBeInSameSecond, initWithJavaUtilDate_withJavaUtilDate_, actual, other)
}

OrgAssertjCoreErrorShouldBeInSameSecond *create_OrgAssertjCoreErrorShouldBeInSameSecond_initWithJavaUtilDate_withJavaUtilDate_(JavaUtilDate *actual, JavaUtilDate *other) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldBeInSameSecond, initWithJavaUtilDate_withJavaUtilDate_, actual, other)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldBeInSameSecond)
