//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/error/ShouldBeExactlyInstanceOf.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldBeExactlyInstanceOf.h"

@interface OrgAssertjCoreErrorShouldBeExactlyInstanceOf ()

- (instancetype)initWithId:(id)actual
              withIOSClass:(IOSClass *)type;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldBeExactlyInstanceOf_initWithId_withIOSClass_(OrgAssertjCoreErrorShouldBeExactlyInstanceOf *self, id actual, IOSClass *type);

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeExactlyInstanceOf *new_OrgAssertjCoreErrorShouldBeExactlyInstanceOf_initWithId_withIOSClass_(id actual, IOSClass *type) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldBeExactlyInstanceOf *create_OrgAssertjCoreErrorShouldBeExactlyInstanceOf_initWithId_withIOSClass_(id actual, IOSClass *type);

@implementation OrgAssertjCoreErrorShouldBeExactlyInstanceOf

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldBeExactlyInstanceWithId:(id)actual
                                                               withIOSClass:(IOSClass *)type {
  return OrgAssertjCoreErrorShouldBeExactlyInstanceOf_shouldBeExactlyInstanceWithId_withIOSClass_(actual, type);
}

- (instancetype)initWithId:(id)actual
              withIOSClass:(IOSClass *)type {
  OrgAssertjCoreErrorShouldBeExactlyInstanceOf_initWithId_withIOSClass_(self, actual, type);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldBeExactlyInstanceWithId:withIOSClass:);
  methods[1].selector = @selector(initWithId:withIOSClass:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldBeExactlyInstance", "LNSObject;LIOSClass;", "(Ljava/lang/Object;Ljava/lang/Class<*>;)Lorg/assertj/core/error/ErrorMessageFactory;", "(Ljava/lang/Object;Ljava/lang/Class<*>;)V" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldBeExactlyInstanceOf = { "ShouldBeExactlyInstanceOf", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldBeExactlyInstanceOf;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldBeExactlyInstanceOf_shouldBeExactlyInstanceWithId_withIOSClass_(id actual, IOSClass *type) {
  OrgAssertjCoreErrorShouldBeExactlyInstanceOf_initialize();
  return create_OrgAssertjCoreErrorShouldBeExactlyInstanceOf_initWithId_withIOSClass_(actual, type);
}

void OrgAssertjCoreErrorShouldBeExactlyInstanceOf_initWithId_withIOSClass_(OrgAssertjCoreErrorShouldBeExactlyInstanceOf *self, id actual, IOSClass *type) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nExpecting:\n <%s>\nto be exactly an instance of:\n <%s>\nbut was an instance of:\n <%s>", [IOSObjectArray arrayWithObjects:(id[]){ actual, type, [nil_chk(actual) java_getClass] } count:3 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldBeExactlyInstanceOf *new_OrgAssertjCoreErrorShouldBeExactlyInstanceOf_initWithId_withIOSClass_(id actual, IOSClass *type) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldBeExactlyInstanceOf, initWithId_withIOSClass_, actual, type)
}

OrgAssertjCoreErrorShouldBeExactlyInstanceOf *create_OrgAssertjCoreErrorShouldBeExactlyInstanceOf_initWithId_withIOSClass_(id actual, IOSClass *type) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldBeExactlyInstanceOf, initWithId_withIOSClass_, actual, type)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldBeExactlyInstanceOf)
