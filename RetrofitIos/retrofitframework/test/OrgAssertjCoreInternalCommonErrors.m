//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/internal/CommonErrors.java
//

#include "J2ObjC_source.h"
#include "OrgAssertjCoreInternalCommonErrors.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NullPointerException.h"

@interface OrgAssertjCoreInternalCommonErrors ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgAssertjCoreInternalCommonErrors_init(OrgAssertjCoreInternalCommonErrors *self);

__attribute__((unused)) static OrgAssertjCoreInternalCommonErrors *new_OrgAssertjCoreInternalCommonErrors_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreInternalCommonErrors *create_OrgAssertjCoreInternalCommonErrors_init();

@implementation OrgAssertjCoreInternalCommonErrors

+ (JavaLangNullPointerException *)arrayOfValuesToLookForIsNull {
  return OrgAssertjCoreInternalCommonErrors_arrayOfValuesToLookForIsNull();
}

+ (JavaLangNullPointerException *)iterableToLookForIsNull {
  return OrgAssertjCoreInternalCommonErrors_iterableToLookForIsNull();
}

+ (JavaLangNullPointerException *)iterableOfValuesForIsNull {
  return OrgAssertjCoreInternalCommonErrors_iterableOfValuesForIsNull();
}

+ (JavaLangIllegalArgumentException *)arrayOfValuesToLookForIsEmpty {
  return OrgAssertjCoreInternalCommonErrors_arrayOfValuesToLookForIsEmpty();
}

+ (JavaLangIllegalArgumentException *)iterableOfValuesToLookForIsEmpty {
  return OrgAssertjCoreInternalCommonErrors_iterableOfValuesToLookForIsEmpty();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreInternalCommonErrors_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangNullPointerException;", 0x8, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangNullPointerException;", 0x8, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangNullPointerException;", 0x8, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangIllegalArgumentException;", 0x8, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangIllegalArgumentException;", 0x8, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(arrayOfValuesToLookForIsNull);
  methods[1].selector = @selector(iterableToLookForIsNull);
  methods[2].selector = @selector(iterableOfValuesForIsNull);
  methods[3].selector = @selector(arrayOfValuesToLookForIsEmpty);
  methods[4].selector = @selector(iterableOfValuesToLookForIsEmpty);
  methods[5].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcClassInfo _OrgAssertjCoreInternalCommonErrors = { "CommonErrors", "org.assertj.core.internal", NULL, methods, NULL, 7, 0x11, 6, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreInternalCommonErrors;
}

@end

JavaLangNullPointerException *OrgAssertjCoreInternalCommonErrors_arrayOfValuesToLookForIsNull() {
  OrgAssertjCoreInternalCommonErrors_initialize();
  return create_JavaLangNullPointerException_initWithNSString_(@"The array of values to look for should not be null");
}

JavaLangNullPointerException *OrgAssertjCoreInternalCommonErrors_iterableToLookForIsNull() {
  OrgAssertjCoreInternalCommonErrors_initialize();
  return create_JavaLangNullPointerException_initWithNSString_(@"The iterable to look for should not be null");
}

JavaLangNullPointerException *OrgAssertjCoreInternalCommonErrors_iterableOfValuesForIsNull() {
  OrgAssertjCoreInternalCommonErrors_initialize();
  return create_JavaLangNullPointerException_initWithNSString_(@"The iterable of values to look for should not be null");
}

JavaLangIllegalArgumentException *OrgAssertjCoreInternalCommonErrors_arrayOfValuesToLookForIsEmpty() {
  OrgAssertjCoreInternalCommonErrors_initialize();
  return create_JavaLangIllegalArgumentException_initWithNSString_(@"The array of values to look for should not be empty");
}

JavaLangIllegalArgumentException *OrgAssertjCoreInternalCommonErrors_iterableOfValuesToLookForIsEmpty() {
  OrgAssertjCoreInternalCommonErrors_initialize();
  return create_JavaLangIllegalArgumentException_initWithNSString_(@"The iterable of values to look for should not be empty");
}

void OrgAssertjCoreInternalCommonErrors_init(OrgAssertjCoreInternalCommonErrors *self) {
  NSObject_init(self);
}

OrgAssertjCoreInternalCommonErrors *new_OrgAssertjCoreInternalCommonErrors_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreInternalCommonErrors, init)
}

OrgAssertjCoreInternalCommonErrors *create_OrgAssertjCoreInternalCommonErrors_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreInternalCommonErrors, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreInternalCommonErrors)
