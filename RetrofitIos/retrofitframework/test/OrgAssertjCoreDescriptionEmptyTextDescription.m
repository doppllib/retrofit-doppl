//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/description/EmptyTextDescription.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreDescriptionDescription.h"
#include "OrgAssertjCoreDescriptionEmptyTextDescription.h"
#include "OrgAssertjCoreDescriptionTextDescription.h"

@interface OrgAssertjCoreDescriptionEmptyTextDescription ()

- (instancetype)init;

@end

inline OrgAssertjCoreDescriptionDescription *OrgAssertjCoreDescriptionEmptyTextDescription_get_INSTANCE();
static OrgAssertjCoreDescriptionDescription *OrgAssertjCoreDescriptionEmptyTextDescription_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgAssertjCoreDescriptionEmptyTextDescription, INSTANCE, OrgAssertjCoreDescriptionDescription *)

__attribute__((unused)) static void OrgAssertjCoreDescriptionEmptyTextDescription_init(OrgAssertjCoreDescriptionEmptyTextDescription *self);

__attribute__((unused)) static OrgAssertjCoreDescriptionEmptyTextDescription *new_OrgAssertjCoreDescriptionEmptyTextDescription_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreDescriptionEmptyTextDescription *create_OrgAssertjCoreDescriptionEmptyTextDescription_init();

J2OBJC_INITIALIZED_DEFN(OrgAssertjCoreDescriptionEmptyTextDescription)

@implementation OrgAssertjCoreDescriptionEmptyTextDescription

+ (OrgAssertjCoreDescriptionDescription *)emptyText {
  return OrgAssertjCoreDescriptionEmptyTextDescription_emptyText();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreDescriptionEmptyTextDescription_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreDescriptionDescription;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(emptyText);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgAssertjCoreDescriptionDescription;", .constantValue.asLong = 0, 0x1a, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &OrgAssertjCoreDescriptionEmptyTextDescription_INSTANCE };
  static const J2ObjcClassInfo _OrgAssertjCoreDescriptionEmptyTextDescription = { "EmptyTextDescription", "org.assertj.core.description", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreDescriptionEmptyTextDescription;
}

+ (void)initialize {
  if (self == [OrgAssertjCoreDescriptionEmptyTextDescription class]) {
    JreStrongAssignAndConsume(&OrgAssertjCoreDescriptionEmptyTextDescription_INSTANCE, new_OrgAssertjCoreDescriptionEmptyTextDescription_init());
    J2OBJC_SET_INITIALIZED(OrgAssertjCoreDescriptionEmptyTextDescription)
  }
}

@end

OrgAssertjCoreDescriptionDescription *OrgAssertjCoreDescriptionEmptyTextDescription_emptyText() {
  OrgAssertjCoreDescriptionEmptyTextDescription_initialize();
  return OrgAssertjCoreDescriptionEmptyTextDescription_INSTANCE;
}

void OrgAssertjCoreDescriptionEmptyTextDescription_init(OrgAssertjCoreDescriptionEmptyTextDescription *self) {
  OrgAssertjCoreDescriptionTextDescription_initWithNSString_withNSObjectArray_(self, @"", [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
}

OrgAssertjCoreDescriptionEmptyTextDescription *new_OrgAssertjCoreDescriptionEmptyTextDescription_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreDescriptionEmptyTextDescription, init)
}

OrgAssertjCoreDescriptionEmptyTextDescription *create_OrgAssertjCoreDescriptionEmptyTextDescription_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreDescriptionEmptyTextDescription, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreDescriptionEmptyTextDescription)
