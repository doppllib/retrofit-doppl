//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/AbstractArrayAssert.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractArrayAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractArrayAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractArrayAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractArrayAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractArrayAssert

#if !defined (OrgAssertjCoreApiAbstractArrayAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractArrayAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractArrayAssert))
#define OrgAssertjCoreApiAbstractArrayAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractEnumerableAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractEnumerableAssert 1
#include "OrgAssertjCoreApiAbstractEnumerableAssert.h"

#define RESTRICT_OrgAssertjCoreApiArraySortedAssert 1
#define INCLUDE_OrgAssertjCoreApiArraySortedAssert 1
#include "OrgAssertjCoreApiArraySortedAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractArrayAssert : OrgAssertjCoreApiAbstractEnumerableAssert < OrgAssertjCoreApiArraySortedAssert >

#pragma mark Public

- (OrgAssertjCoreApiAbstractArrayAssert *)asWithNSString:(NSString *)arg0
                                       withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractArrayAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)describedAsWithNSString:(NSString *)arg0
                                                withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractArrayAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)hasSameSizeAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)hasSameSizeAsWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)hasSizeWithInt:(jint)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)inBinary;

- (OrgAssertjCoreApiAbstractArrayAssert *)inHexadecimal;

- (OrgAssertjCoreApiAbstractArrayAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)isNotEmpty;

- (OrgAssertjCoreApiAbstractArrayAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractArrayAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isSorted;

- (OrgAssertjCoreApiAbstractArrayAssert *)isSortedAccordingToWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                           withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractArrayAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiAbstractArrayAssert *)usingDefaultComparator;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)usingDefaultElementComparator;

- (OrgAssertjCoreApiAbstractEnumerableAssert *)usingElementComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

#pragma mark Protected

- (instancetype)initWithId:(id)actual
              withIOSClass:(IOSClass *)selfType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractArrayAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractArrayAssert_initWithId_withIOSClass_(OrgAssertjCoreApiAbstractArrayAssert *self, id actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractArrayAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractArrayAssert")
