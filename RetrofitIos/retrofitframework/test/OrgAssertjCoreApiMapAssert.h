//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/MapAssert.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiMapAssert")
#ifdef RESTRICT_OrgAssertjCoreApiMapAssert
#define INCLUDE_ALL_OrgAssertjCoreApiMapAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiMapAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiMapAssert

#if !defined (OrgAssertjCoreApiMapAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiMapAssert || defined(INCLUDE_OrgAssertjCoreApiMapAssert))
#define OrgAssertjCoreApiMapAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractMapAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractMapAssert 1
#include "OrgAssertjCoreApiAbstractMapAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;
@protocol JavaUtilMap;

@interface OrgAssertjCoreApiMapAssert : OrgAssertjCoreApiAbstractMapAssert

#pragma mark Public

- (OrgAssertjCoreApiMapAssert *)asWithNSString:(NSString *)arg0
                             withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiMapAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiMapAssert *)containsEntryWithId:(id)arg0
                                             withId:(id)arg1;

- (OrgAssertjCoreApiMapAssert *)containsExactlyWithOrgAssertjCoreDataMapEntryArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiMapAssert *)containsKeysWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiMapAssert *)containsKeyWithId:(id)arg0;

- (OrgAssertjCoreApiMapAssert *)containsOnlyKeysWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiMapAssert *)containsOnlyWithOrgAssertjCoreDataMapEntryArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiMapAssert *)containsValueWithId:(id)arg0;

- (OrgAssertjCoreApiMapAssert *)containsWithOrgAssertjCoreDataMapEntryArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiMapAssert *)describedAsWithNSString:(NSString *)arg0
                                      withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiMapAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiMapAssert *)doesNotContainEntryWithId:(id)arg0
                                                   withId:(id)arg1;

- (OrgAssertjCoreApiMapAssert *)doesNotContainKeyWithId:(id)arg0;

- (OrgAssertjCoreApiMapAssert *)doesNotContainValueWithId:(id)arg0;

- (OrgAssertjCoreApiMapAssert *)doesNotContainWithOrgAssertjCoreDataMapEntryArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiMapAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiMapAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiMapAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiMapAssert *)hasSameSizeAsWithId:(id)arg0;

- (OrgAssertjCoreApiMapAssert *)hasSameSizeAsWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiMapAssert *)hasSameSizeAsWithJavaUtilMap:(id<JavaUtilMap>)arg0;

- (OrgAssertjCoreApiMapAssert *)hasSizeWithInt:(jint)arg0;

- (OrgAssertjCoreApiMapAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiMapAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiMapAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiMapAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiMapAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiMapAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiMapAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiMapAssert *)isNotEmpty;

- (OrgAssertjCoreApiMapAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiMapAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiMapAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiMapAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiMapAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiMapAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiMapAssert *)isNotNull;

- (OrgAssertjCoreApiMapAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiMapAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiMapAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiMapAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiMapAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiMapAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiMapAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                 withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiMapAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiMapAssert *)usingDefaultComparator;

- (OrgAssertjCoreApiMapAssert *)usingDefaultElementComparator;

- (OrgAssertjCoreApiMapAssert *)usingElementComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

#pragma mark Protected

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)actual;

- (OrgAssertjCoreApiMapAssert *)inBinary;

- (OrgAssertjCoreApiMapAssert *)inHexadecimal;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiMapAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiMapAssert_initWithJavaUtilMap_(OrgAssertjCoreApiMapAssert *self, id<JavaUtilMap> actual);

FOUNDATION_EXPORT OrgAssertjCoreApiMapAssert *new_OrgAssertjCoreApiMapAssert_initWithJavaUtilMap_(id<JavaUtilMap> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiMapAssert *create_OrgAssertjCoreApiMapAssert_initWithJavaUtilMap_(id<JavaUtilMap> actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiMapAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiMapAssert")
