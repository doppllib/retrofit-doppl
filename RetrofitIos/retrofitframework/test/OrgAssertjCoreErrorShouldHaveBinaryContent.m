//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/error/ShouldHaveBinaryContent.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"
#include "OrgAssertjCoreErrorErrorMessageFactory.h"
#include "OrgAssertjCoreErrorShouldHaveBinaryContent.h"
#include "OrgAssertjCoreInternalBinaryDiffResult.h"
#include "java/io/File.h"
#include "java/lang/Integer.h"

@interface OrgAssertjCoreErrorShouldHaveBinaryContent ()

- (instancetype)initWithJavaIoFile:(JavaIoFile *)actual
withOrgAssertjCoreInternalBinaryDiffResult:(OrgAssertjCoreInternalBinaryDiffResult *)diff;

@end

__attribute__((unused)) static void OrgAssertjCoreErrorShouldHaveBinaryContent_initWithJavaIoFile_withOrgAssertjCoreInternalBinaryDiffResult_(OrgAssertjCoreErrorShouldHaveBinaryContent *self, JavaIoFile *actual, OrgAssertjCoreInternalBinaryDiffResult *diff);

__attribute__((unused)) static OrgAssertjCoreErrorShouldHaveBinaryContent *new_OrgAssertjCoreErrorShouldHaveBinaryContent_initWithJavaIoFile_withOrgAssertjCoreInternalBinaryDiffResult_(JavaIoFile *actual, OrgAssertjCoreInternalBinaryDiffResult *diff) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreErrorShouldHaveBinaryContent *create_OrgAssertjCoreErrorShouldHaveBinaryContent_initWithJavaIoFile_withOrgAssertjCoreInternalBinaryDiffResult_(JavaIoFile *actual, OrgAssertjCoreInternalBinaryDiffResult *diff);

@implementation OrgAssertjCoreErrorShouldHaveBinaryContent

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)shouldHaveBinaryContentWithJavaIoFile:(JavaIoFile *)actual
                                         withOrgAssertjCoreInternalBinaryDiffResult:(OrgAssertjCoreInternalBinaryDiffResult *)diff {
  return OrgAssertjCoreErrorShouldHaveBinaryContent_shouldHaveBinaryContentWithJavaIoFile_withOrgAssertjCoreInternalBinaryDiffResult_(actual, diff);
}

- (instancetype)initWithJavaIoFile:(JavaIoFile *)actual
withOrgAssertjCoreInternalBinaryDiffResult:(OrgAssertjCoreInternalBinaryDiffResult *)diff {
  OrgAssertjCoreErrorShouldHaveBinaryContent_initWithJavaIoFile_withOrgAssertjCoreInternalBinaryDiffResult_(self, actual, diff);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgAssertjCoreErrorErrorMessageFactory;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(shouldHaveBinaryContentWithJavaIoFile:withOrgAssertjCoreInternalBinaryDiffResult:);
  methods[1].selector = @selector(initWithJavaIoFile:withOrgAssertjCoreInternalBinaryDiffResult:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldHaveBinaryContent", "LJavaIoFile;LOrgAssertjCoreInternalBinaryDiffResult;" };
  static const J2ObjcClassInfo _OrgAssertjCoreErrorShouldHaveBinaryContent = { "ShouldHaveBinaryContent", "org.assertj.core.error", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreErrorShouldHaveBinaryContent;
}

@end

id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorShouldHaveBinaryContent_shouldHaveBinaryContentWithJavaIoFile_withOrgAssertjCoreInternalBinaryDiffResult_(JavaIoFile *actual, OrgAssertjCoreInternalBinaryDiffResult *diff) {
  OrgAssertjCoreErrorShouldHaveBinaryContent_initialize();
  return create_OrgAssertjCoreErrorShouldHaveBinaryContent_initWithJavaIoFile_withOrgAssertjCoreInternalBinaryDiffResult_(actual, diff);
}

void OrgAssertjCoreErrorShouldHaveBinaryContent_initWithJavaIoFile_withOrgAssertjCoreInternalBinaryDiffResult_(OrgAssertjCoreErrorShouldHaveBinaryContent *self, JavaIoFile *actual, OrgAssertjCoreInternalBinaryDiffResult *diff) {
  OrgAssertjCoreErrorBasicErrorMessageFactory_initWithNSString_withNSObjectArray_(self, @"\nFile:\n <%s>\ndoes not have expected binary content at offset <%s>, expecting:\n <%s>\nbut was:\n <%s>", [IOSObjectArray arrayWithObjects:(id[]){ actual, JavaLangInteger_valueOfWithInt_(((OrgAssertjCoreInternalBinaryDiffResult *) nil_chk(diff))->offset_), diff->expected_, diff->actual_ } count:4 type:NSObject_class_()]);
}

OrgAssertjCoreErrorShouldHaveBinaryContent *new_OrgAssertjCoreErrorShouldHaveBinaryContent_initWithJavaIoFile_withOrgAssertjCoreInternalBinaryDiffResult_(JavaIoFile *actual, OrgAssertjCoreInternalBinaryDiffResult *diff) {
  J2OBJC_NEW_IMPL(OrgAssertjCoreErrorShouldHaveBinaryContent, initWithJavaIoFile_withOrgAssertjCoreInternalBinaryDiffResult_, actual, diff)
}

OrgAssertjCoreErrorShouldHaveBinaryContent *create_OrgAssertjCoreErrorShouldHaveBinaryContent_initWithJavaIoFile_withOrgAssertjCoreInternalBinaryDiffResult_(JavaIoFile *actual, OrgAssertjCoreInternalBinaryDiffResult *diff) {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreErrorShouldHaveBinaryContent, initWithJavaIoFile_withOrgAssertjCoreInternalBinaryDiffResult_, actual, diff)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreErrorShouldHaveBinaryContent)
