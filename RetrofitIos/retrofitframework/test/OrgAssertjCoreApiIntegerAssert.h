//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/IntegerAssert.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiIntegerAssert")
#ifdef RESTRICT_OrgAssertjCoreApiIntegerAssert
#define INCLUDE_ALL_OrgAssertjCoreApiIntegerAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiIntegerAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiIntegerAssert

#if !defined (OrgAssertjCoreApiIntegerAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiIntegerAssert || defined(INCLUDE_OrgAssertjCoreApiIntegerAssert))
#define OrgAssertjCoreApiIntegerAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractIntegerAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractIntegerAssert 1
#include "OrgAssertjCoreApiAbstractIntegerAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangInteger;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiIntegerAssert : OrgAssertjCoreApiAbstractIntegerAssert

#pragma mark Public

- (OrgAssertjCoreApiIntegerAssert *)asWithNSString:(NSString *)arg0
                                 withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiIntegerAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)describedAsWithNSString:(NSString *)arg0
                                          withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiIntegerAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiIntegerAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiIntegerAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)inBinary;

- (OrgAssertjCoreApiIntegerAssert *)inHexadecimal;

- (OrgAssertjCoreApiIntegerAssert *)isBetweenWithNSNumber:(JavaLangInteger *)arg0
                                             withNSNumber:(JavaLangInteger *)arg1;

- (OrgAssertjCoreApiIntegerAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isEqualToWithInt:(jint)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isGreaterThanOrEqualToWithInt:(jint)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(JavaLangInteger *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isGreaterThanWithInt:(jint)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isGreaterThanWithJavaLangComparable:(JavaLangInteger *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isLessThanOrEqualToWithInt:(jint)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isLessThanOrEqualToWithJavaLangComparable:(JavaLangInteger *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isLessThanWithInt:(jint)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isLessThanWithJavaLangComparable:(JavaLangInteger *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isNegative;

- (OrgAssertjCoreApiIntegerAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isNotEqualToWithInt:(jint)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isNotNegative;

- (OrgAssertjCoreApiIntegerAssert *)isNotNull;

- (OrgAssertjCoreApiIntegerAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isNotPositive;

- (OrgAssertjCoreApiIntegerAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isNotZero;

- (OrgAssertjCoreApiIntegerAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isPositive;

- (OrgAssertjCoreApiIntegerAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isStrictlyBetweenWithNSNumber:(JavaLangInteger *)arg0
                                                     withNSNumber:(JavaLangInteger *)arg1;

- (OrgAssertjCoreApiIntegerAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiIntegerAssert *)isZero;

- (OrgAssertjCoreApiIntegerAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                     withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiIntegerAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiIntegerAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaLangInteger:(JavaLangInteger *)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiIntegerAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiIntegerAssert_initWithJavaLangInteger_(OrgAssertjCoreApiIntegerAssert *self, JavaLangInteger *actual);

FOUNDATION_EXPORT OrgAssertjCoreApiIntegerAssert *new_OrgAssertjCoreApiIntegerAssert_initWithJavaLangInteger_(JavaLangInteger *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiIntegerAssert *create_OrgAssertjCoreApiIntegerAssert_initWithJavaLangInteger_(JavaLangInteger *actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiIntegerAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiIntegerAssert")
