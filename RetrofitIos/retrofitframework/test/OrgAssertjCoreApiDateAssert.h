//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/DateAssert.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiDateAssert")
#ifdef RESTRICT_OrgAssertjCoreApiDateAssert
#define INCLUDE_ALL_OrgAssertjCoreApiDateAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiDateAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiDateAssert

#if !defined (OrgAssertjCoreApiDateAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiDateAssert || defined(INCLUDE_OrgAssertjCoreApiDateAssert))
#define OrgAssertjCoreApiDateAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractDateAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractDateAssert 1
#include "OrgAssertjCoreApiAbstractDateAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaTextDateFormat;
@class JavaUtilDate;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@protocol JavaLangIterable;
@protocol JavaUtilCollection;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiDateAssert : OrgAssertjCoreApiAbstractDateAssert

#pragma mark Public

- (OrgAssertjCoreApiDateAssert *)asWithNSString:(NSString *)arg0
                              withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiDateAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiDateAssert *)describedAsWithNSString:(NSString *)arg0
                                       withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiDateAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiDateAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiDateAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiDateAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiDateAssert *)hasTimeWithLong:(jlong)arg0;

- (OrgAssertjCoreApiDateAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiDateAssert *)isAfterOrEqualsToWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isAfterOrEqualsToWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isAfterWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isAfterWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isAfterYearWithInt:(jint)arg0;

- (OrgAssertjCoreApiDateAssert *)isBeforeOrEqualsToWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isBeforeOrEqualsToWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isBeforeWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isBeforeWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isBeforeYearWithInt:(jint)arg0;

- (OrgAssertjCoreApiDateAssert *)isBetweenWithJavaUtilDate:(JavaUtilDate *)arg0
                                          withJavaUtilDate:(JavaUtilDate *)arg1;

- (OrgAssertjCoreApiDateAssert *)isBetweenWithJavaUtilDate:(JavaUtilDate *)arg0
                                          withJavaUtilDate:(JavaUtilDate *)arg1
                                               withBoolean:(jboolean)arg2
                                               withBoolean:(jboolean)arg3;

- (OrgAssertjCoreApiDateAssert *)isBetweenWithNSString:(NSString *)arg0
                                          withNSString:(NSString *)arg1;

- (OrgAssertjCoreApiDateAssert *)isBetweenWithNSString:(NSString *)arg0
                                          withNSString:(NSString *)arg1
                                           withBoolean:(jboolean)arg2
                                           withBoolean:(jboolean)arg3;

- (OrgAssertjCoreApiDateAssert *)isCloseToWithJavaUtilDate:(JavaUtilDate *)arg0
                                                  withLong:(jlong)arg1;

- (OrgAssertjCoreApiDateAssert *)isCloseToWithNSString:(NSString *)arg0
                                              withLong:(jlong)arg1;

- (OrgAssertjCoreApiDateAssert *)isEqualToIgnoringHoursWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isEqualToIgnoringHoursWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isEqualToIgnoringMillisWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isEqualToIgnoringMillisWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isEqualToIgnoringMinutesWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isEqualToIgnoringMinutesWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isEqualToIgnoringSecondsWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isEqualToIgnoringSecondsWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiDateAssert *)isEqualToWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameDayAsWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameDayAsWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameHourAsWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameHourAsWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameHourWindowAsWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameHourWindowAsWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameMinuteAsWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameMinuteAsWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameMinuteWindowAsWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameMinuteWindowAsWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameMonthAsWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameMonthAsWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameSecondAsWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameSecondAsWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameSecondWindowAsWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameSecondWindowAsWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameYearAsWithJavaUtilDate:(JavaUtilDate *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInSameYearAsWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInTheFuture;

- (OrgAssertjCoreApiDateAssert *)isInThePast;

- (OrgAssertjCoreApiDateAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiDateAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInWithNSStringArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDateAssert *)isInWithStringDateCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)arg0;

- (OrgAssertjCoreApiDateAssert *)isNotBetweenWithJavaUtilDate:(JavaUtilDate *)arg0
                                             withJavaUtilDate:(JavaUtilDate *)arg1;

- (OrgAssertjCoreApiDateAssert *)isNotBetweenWithJavaUtilDate:(JavaUtilDate *)arg0
                                             withJavaUtilDate:(JavaUtilDate *)arg1
                                                  withBoolean:(jboolean)arg2
                                                  withBoolean:(jboolean)arg3;

- (OrgAssertjCoreApiDateAssert *)isNotBetweenWithNSString:(NSString *)arg0
                                             withNSString:(NSString *)arg1;

- (OrgAssertjCoreApiDateAssert *)isNotBetweenWithNSString:(NSString *)arg0
                                             withNSString:(NSString *)arg1
                                              withBoolean:(jboolean)arg2
                                              withBoolean:(jboolean)arg3;

- (OrgAssertjCoreApiDateAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiDateAssert *)isNotEqualToWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiDateAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDateAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiDateAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiDateAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDateAssert *)isNotInWithNSStringArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDateAssert *)isNotInWithStringDateCollectionWithJavaUtilCollection:(id<JavaUtilCollection>)arg0;

- (OrgAssertjCoreApiDateAssert *)isNotNull;

- (OrgAssertjCoreApiDateAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDateAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiDateAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiDateAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiDateAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiDateAssert *)isToday;

- (OrgAssertjCoreApiDateAssert *)isWithinDayOfMonthWithInt:(jint)arg0;

- (OrgAssertjCoreApiDateAssert *)isWithinDayOfWeekWithInt:(jint)arg0;

- (OrgAssertjCoreApiDateAssert *)isWithinHourOfDayWithInt:(jint)arg0;

- (OrgAssertjCoreApiDateAssert *)isWithinMillisecondWithInt:(jint)arg0;

- (OrgAssertjCoreApiDateAssert *)isWithinMinuteWithInt:(jint)arg0;

- (OrgAssertjCoreApiDateAssert *)isWithinMonthWithInt:(jint)arg0;

- (OrgAssertjCoreApiDateAssert *)isWithinSecondWithInt:(jint)arg0;

- (OrgAssertjCoreApiDateAssert *)isWithinYearWithInt:(jint)arg0;

- (OrgAssertjCoreApiDateAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiDateAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                  withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiDateAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)arg0;

- (OrgAssertjCoreApiDateAssert *)usingDefaultComparator;

- (OrgAssertjCoreApiDateAssert *)withDateFormatWithJavaTextDateFormat:(JavaTextDateFormat *)arg0;

- (OrgAssertjCoreApiDateAssert *)withDateFormatWithNSString:(NSString *)arg0;

- (OrgAssertjCoreApiDateAssert *)withDefaultDateFormats;

- (OrgAssertjCoreApiDateAssert *)withDefaultDateFormatsOnly;

- (OrgAssertjCoreApiDateAssert *)withIsoDateFormat;

#pragma mark Protected

- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)actual;

- (OrgAssertjCoreApiDateAssert *)inBinary;

- (OrgAssertjCoreApiDateAssert *)inHexadecimal;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiDateAssert)

FOUNDATION_EXPORT void OrgAssertjCoreApiDateAssert_initWithJavaUtilDate_(OrgAssertjCoreApiDateAssert *self, JavaUtilDate *actual);

FOUNDATION_EXPORT OrgAssertjCoreApiDateAssert *new_OrgAssertjCoreApiDateAssert_initWithJavaUtilDate_(JavaUtilDate *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreApiDateAssert *create_OrgAssertjCoreApiDateAssert_initWithJavaUtilDate_(JavaUtilDate *actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiDateAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiDateAssert")
