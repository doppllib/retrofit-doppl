//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/error/ElementsShouldBe.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldBe")
#ifdef RESTRICT_OrgAssertjCoreErrorElementsShouldBe
#define INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldBe 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldBe 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorElementsShouldBe

#if !defined (OrgAssertjCoreErrorElementsShouldBe_) && (INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldBe || defined(INCLUDE_OrgAssertjCoreErrorElementsShouldBe))
#define OrgAssertjCoreErrorElementsShouldBe_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@class OrgAssertjCoreApiCondition;
@protocol OrgAssertjCoreErrorErrorMessageFactory;

@interface OrgAssertjCoreErrorElementsShouldBe : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)elementsShouldBeWithId:(id)actual
                                                              withId:(id)notSatisfies
                                      withOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorElementsShouldBe)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorElementsShouldBe_elementsShouldBeWithId_withId_withOrgAssertjCoreApiCondition_(id actual, id notSatisfies, OrgAssertjCoreApiCondition *condition);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorElementsShouldBe)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldBe")
