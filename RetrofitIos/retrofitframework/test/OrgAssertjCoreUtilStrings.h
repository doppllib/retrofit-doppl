//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/util/Strings.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreUtilStrings")
#ifdef RESTRICT_OrgAssertjCoreUtilStrings
#define INCLUDE_ALL_OrgAssertjCoreUtilStrings 0
#else
#define INCLUDE_ALL_OrgAssertjCoreUtilStrings 1
#endif
#undef RESTRICT_OrgAssertjCoreUtilStrings

#if !defined (OrgAssertjCoreUtilStrings_) && (INCLUDE_ALL_OrgAssertjCoreUtilStrings || defined(INCLUDE_OrgAssertjCoreUtilStrings))
#define OrgAssertjCoreUtilStrings_

@class IOSObjectArray;
@class OrgAssertjCoreUtilStrings_StringToAppend;
@class OrgAssertjCoreUtilStrings_StringsToJoin;
@protocol JavaLangIterable;

@interface OrgAssertjCoreUtilStrings : NSObject

#pragma mark Public

+ (OrgAssertjCoreUtilStrings_StringToAppend *)appendWithNSString:(NSString *)toAppend;

+ (NSString *)concatWithNSObjectArray:(IOSObjectArray *)objects;

+ (NSString *)formatIfArgsWithNSString:(NSString *)message
                     withNSObjectArray:(IOSObjectArray *)args;

+ (jboolean)isEmptyWithNSString:(NSString *)s;

+ (jboolean)isNullOrEmptyWithNSString:(NSString *)s;

+ (OrgAssertjCoreUtilStrings_StringsToJoin *)joinWithJavaLangIterable:(id<JavaLangIterable>)toStringable;

+ (OrgAssertjCoreUtilStrings_StringsToJoin *)joinWithNSStringArray:(IOSObjectArray *)strings;

+ (id)quoteWithId:(id)o;

+ (NSString *)quoteWithNSString:(NSString *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreUtilStrings)

FOUNDATION_EXPORT jboolean OrgAssertjCoreUtilStrings_isNullOrEmptyWithNSString_(NSString *s);

FOUNDATION_EXPORT jboolean OrgAssertjCoreUtilStrings_isEmptyWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *OrgAssertjCoreUtilStrings_quoteWithNSString_(NSString *s);

FOUNDATION_EXPORT id OrgAssertjCoreUtilStrings_quoteWithId_(id o);

FOUNDATION_EXPORT NSString *OrgAssertjCoreUtilStrings_concatWithNSObjectArray_(IOSObjectArray *objects);

FOUNDATION_EXPORT NSString *OrgAssertjCoreUtilStrings_formatIfArgsWithNSString_withNSObjectArray_(NSString *message, IOSObjectArray *args);

FOUNDATION_EXPORT OrgAssertjCoreUtilStrings_StringsToJoin *OrgAssertjCoreUtilStrings_joinWithNSStringArray_(IOSObjectArray *strings);

FOUNDATION_EXPORT OrgAssertjCoreUtilStrings_StringsToJoin *OrgAssertjCoreUtilStrings_joinWithJavaLangIterable_(id<JavaLangIterable> toStringable);

FOUNDATION_EXPORT OrgAssertjCoreUtilStrings_StringToAppend *OrgAssertjCoreUtilStrings_appendWithNSString_(NSString *toAppend);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreUtilStrings)

#endif

#if !defined (OrgAssertjCoreUtilStrings_StringsToJoin_) && (INCLUDE_ALL_OrgAssertjCoreUtilStrings || defined(INCLUDE_OrgAssertjCoreUtilStrings_StringsToJoin))
#define OrgAssertjCoreUtilStrings_StringsToJoin_

@class IOSObjectArray;

@interface OrgAssertjCoreUtilStrings_StringsToJoin : NSObject

#pragma mark Public

- (NSString *)withWithNSString:(NSString *)delimiter;

- (NSString *)withWithNSString:(NSString *)delimiter
                  withNSString:(NSString *)escapeString;

#pragma mark Package-Private

- (instancetype)initWithNSStringArray:(IOSObjectArray *)strings;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreUtilStrings_StringsToJoin)

FOUNDATION_EXPORT void OrgAssertjCoreUtilStrings_StringsToJoin_initWithNSStringArray_(OrgAssertjCoreUtilStrings_StringsToJoin *self, IOSObjectArray *strings);

FOUNDATION_EXPORT OrgAssertjCoreUtilStrings_StringsToJoin *new_OrgAssertjCoreUtilStrings_StringsToJoin_initWithNSStringArray_(IOSObjectArray *strings) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreUtilStrings_StringsToJoin *create_OrgAssertjCoreUtilStrings_StringsToJoin_initWithNSStringArray_(IOSObjectArray *strings);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreUtilStrings_StringsToJoin)

#endif

#if !defined (OrgAssertjCoreUtilStrings_StringToAppend_) && (INCLUDE_ALL_OrgAssertjCoreUtilStrings || defined(INCLUDE_OrgAssertjCoreUtilStrings_StringToAppend))
#define OrgAssertjCoreUtilStrings_StringToAppend_

@interface OrgAssertjCoreUtilStrings_StringToAppend : NSObject

#pragma mark Public

- (NSString *)toWithNSString:(NSString *)s;

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)toAppend;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreUtilStrings_StringToAppend)

FOUNDATION_EXPORT void OrgAssertjCoreUtilStrings_StringToAppend_initWithNSString_(OrgAssertjCoreUtilStrings_StringToAppend *self, NSString *toAppend);

FOUNDATION_EXPORT OrgAssertjCoreUtilStrings_StringToAppend *new_OrgAssertjCoreUtilStrings_StringToAppend_initWithNSString_(NSString *toAppend) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreUtilStrings_StringToAppend *create_OrgAssertjCoreUtilStrings_StringToAppend_initWithNSString_(NSString *toAppend);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreUtilStrings_StringToAppend)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreUtilStrings")
