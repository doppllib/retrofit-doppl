//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/internal/Conditions.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreInternalConditions")
#ifdef RESTRICT_OrgAssertjCoreInternalConditions
#define INCLUDE_ALL_OrgAssertjCoreInternalConditions 0
#else
#define INCLUDE_ALL_OrgAssertjCoreInternalConditions 1
#endif
#undef RESTRICT_OrgAssertjCoreInternalConditions

#if !defined (OrgAssertjCoreInternalConditions_) && (INCLUDE_ALL_OrgAssertjCoreInternalConditions || defined(INCLUDE_OrgAssertjCoreInternalConditions))
#define OrgAssertjCoreInternalConditions_

@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreInternalFailures;
@protocol OrgAssertjCoreApiAssertionInfo;

@interface OrgAssertjCoreInternalConditions : NSObject {
 @public
  OrgAssertjCoreInternalFailures *failures_;
}

#pragma mark Public

- (void)assertDoesNotHaveWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                     withId:(id)actual
                             withOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition;

- (void)assertHasWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                             withId:(id)actual
                     withOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition;

- (void)assertIsWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                            withId:(id)actual
                    withOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition;

- (void)assertIsNotWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                               withId:(id)actual
                       withOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition;

- (void)assertIsNotNullWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition;

+ (OrgAssertjCoreInternalConditions *)instance;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgAssertjCoreInternalConditions)

J2OBJC_FIELD_SETTER(OrgAssertjCoreInternalConditions, failures_, OrgAssertjCoreInternalFailures *)

FOUNDATION_EXPORT OrgAssertjCoreInternalConditions *OrgAssertjCoreInternalConditions_instance();

FOUNDATION_EXPORT void OrgAssertjCoreInternalConditions_init(OrgAssertjCoreInternalConditions *self);

FOUNDATION_EXPORT OrgAssertjCoreInternalConditions *new_OrgAssertjCoreInternalConditions_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreInternalConditions *create_OrgAssertjCoreInternalConditions_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreInternalConditions)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreInternalConditions")
