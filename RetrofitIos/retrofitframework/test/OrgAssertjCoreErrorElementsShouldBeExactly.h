//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/error/ElementsShouldBeExactly.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldBeExactly")
#ifdef RESTRICT_OrgAssertjCoreErrorElementsShouldBeExactly
#define INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldBeExactly 0
#else
#define INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldBeExactly 1
#endif
#undef RESTRICT_OrgAssertjCoreErrorElementsShouldBeExactly

#if !defined (OrgAssertjCoreErrorElementsShouldBeExactly_) && (INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldBeExactly || defined(INCLUDE_OrgAssertjCoreErrorElementsShouldBeExactly))
#define OrgAssertjCoreErrorElementsShouldBeExactly_

#define RESTRICT_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#define INCLUDE_OrgAssertjCoreErrorBasicErrorMessageFactory 1
#include "OrgAssertjCoreErrorBasicErrorMessageFactory.h"

@class OrgAssertjCoreApiCondition;
@protocol OrgAssertjCoreErrorErrorMessageFactory;

@interface OrgAssertjCoreErrorElementsShouldBeExactly : OrgAssertjCoreErrorBasicErrorMessageFactory

#pragma mark Public

+ (id<OrgAssertjCoreErrorErrorMessageFactory>)elementsShouldBeExactlyWithId:(id)actual
                                                                    withInt:(jint)times
                                             withOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)condition;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreErrorElementsShouldBeExactly)

FOUNDATION_EXPORT id<OrgAssertjCoreErrorErrorMessageFactory> OrgAssertjCoreErrorElementsShouldBeExactly_elementsShouldBeExactlyWithId_withInt_withOrgAssertjCoreApiCondition_(id actual, jint times, OrgAssertjCoreApiCondition *condition);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreErrorElementsShouldBeExactly)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreErrorElementsShouldBeExactly")
