//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/internal/Comparables.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreInternalComparables")
#ifdef RESTRICT_OrgAssertjCoreInternalComparables
#define INCLUDE_ALL_OrgAssertjCoreInternalComparables 0
#else
#define INCLUDE_ALL_OrgAssertjCoreInternalComparables 1
#endif
#undef RESTRICT_OrgAssertjCoreInternalComparables

#if !defined (OrgAssertjCoreInternalComparables_) && (INCLUDE_ALL_OrgAssertjCoreInternalComparables || defined(INCLUDE_OrgAssertjCoreInternalComparables))
#define OrgAssertjCoreInternalComparables_

@class OrgAssertjCoreInternalFailures;
@protocol JavaLangComparable;
@protocol JavaUtilComparator;
@protocol OrgAssertjCoreApiAssertionInfo;
@protocol OrgAssertjCoreInternalComparisonStrategy;

@interface OrgAssertjCoreInternalComparables : NSObject {
 @public
  OrgAssertjCoreInternalFailures *failures_;
  id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy_;
}

#pragma mark Public

- (instancetype)initWithOrgAssertjCoreInternalComparisonStrategy:(id<OrgAssertjCoreInternalComparisonStrategy>)comparisonStrategy;

- (void)assertEqualWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                               withId:(id)actual
                                               withId:(id)expected;

- (void)assertEqualByComparisonWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                           withJavaLangComparable:(id<JavaLangComparable>)actual
                                           withJavaLangComparable:(id<JavaLangComparable>)expected;

- (void)assertGreaterThanWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                     withJavaLangComparable:(id<JavaLangComparable>)actual
                                     withJavaLangComparable:(id<JavaLangComparable>)other;

- (void)assertGreaterThanOrEqualToWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                              withJavaLangComparable:(id<JavaLangComparable>)actual
                                              withJavaLangComparable:(id<JavaLangComparable>)other;

- (void)assertIsBetweenWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                   withJavaLangComparable:(id<JavaLangComparable>)actual
                                   withJavaLangComparable:(id<JavaLangComparable>)start
                                   withJavaLangComparable:(id<JavaLangComparable>)end
                                              withBoolean:(jboolean)inclusiveStart
                                              withBoolean:(jboolean)inclusiveEnd;

- (void)assertLessThanWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                  withJavaLangComparable:(id<JavaLangComparable>)actual
                                  withJavaLangComparable:(id<JavaLangComparable>)other;

- (void)assertLessThanOrEqualToWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                           withJavaLangComparable:(id<JavaLangComparable>)actual
                                           withJavaLangComparable:(id<JavaLangComparable>)other;

- (void)assertNotEqualWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                  withId:(id)actual
                                                  withId:(id)other;

- (void)assertNotEqualByComparisonWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                              withJavaLangComparable:(id<JavaLangComparable>)actual
                                              withJavaLangComparable:(id<JavaLangComparable>)other;

- (id<JavaUtilComparator>)getComparator;

+ (OrgAssertjCoreInternalComparables *)instance;

#pragma mark Protected

- (jboolean)areEqualWithId:(id)actual
                    withId:(id)expected;

+ (void)assertNotNullWithOrgAssertjCoreApiAssertionInfo:(id<OrgAssertjCoreApiAssertionInfo>)info
                                                 withId:(id)actual;

#pragma mark Package-Private

- (instancetype)init;

- (void)resetFailures;

- (void)setFailuresWithOrgAssertjCoreInternalFailures:(OrgAssertjCoreInternalFailures *)failures;

@end

J2OBJC_STATIC_INIT(OrgAssertjCoreInternalComparables)

J2OBJC_FIELD_SETTER(OrgAssertjCoreInternalComparables, failures_, OrgAssertjCoreInternalFailures *)
J2OBJC_FIELD_SETTER(OrgAssertjCoreInternalComparables, comparisonStrategy_, id<OrgAssertjCoreInternalComparisonStrategy>)

FOUNDATION_EXPORT OrgAssertjCoreInternalComparables *OrgAssertjCoreInternalComparables_instance();

FOUNDATION_EXPORT void OrgAssertjCoreInternalComparables_init(OrgAssertjCoreInternalComparables *self);

FOUNDATION_EXPORT OrgAssertjCoreInternalComparables *new_OrgAssertjCoreInternalComparables_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreInternalComparables *create_OrgAssertjCoreInternalComparables_init();

FOUNDATION_EXPORT void OrgAssertjCoreInternalComparables_initWithOrgAssertjCoreInternalComparisonStrategy_(OrgAssertjCoreInternalComparables *self, id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

FOUNDATION_EXPORT OrgAssertjCoreInternalComparables *new_OrgAssertjCoreInternalComparables_initWithOrgAssertjCoreInternalComparisonStrategy_(id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgAssertjCoreInternalComparables *create_OrgAssertjCoreInternalComparables_initWithOrgAssertjCoreInternalComparisonStrategy_(id<OrgAssertjCoreInternalComparisonStrategy> comparisonStrategy);

FOUNDATION_EXPORT void OrgAssertjCoreInternalComparables_assertNotNullWithOrgAssertjCoreApiAssertionInfo_withId_(id<OrgAssertjCoreApiAssertionInfo> info, id actual);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreInternalComparables)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreInternalComparables")
