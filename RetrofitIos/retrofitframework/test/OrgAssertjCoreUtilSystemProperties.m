//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/util/SystemProperties.java
//

#include "J2ObjC_source.h"
#include "OrgAssertjCoreUtilSystemProperties.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"

@interface OrgAssertjCoreUtilSystemProperties ()

+ (NSString *)lineSeparator;

- (instancetype)init;

@end

__attribute__((unused)) static NSString *OrgAssertjCoreUtilSystemProperties_lineSeparator();

__attribute__((unused)) static void OrgAssertjCoreUtilSystemProperties_init(OrgAssertjCoreUtilSystemProperties *self);

__attribute__((unused)) static OrgAssertjCoreUtilSystemProperties *new_OrgAssertjCoreUtilSystemProperties_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgAssertjCoreUtilSystemProperties *create_OrgAssertjCoreUtilSystemProperties_init();

J2OBJC_INITIALIZED_DEFN(OrgAssertjCoreUtilSystemProperties)

NSString *OrgAssertjCoreUtilSystemProperties_LINE_SEPARATOR;

@implementation OrgAssertjCoreUtilSystemProperties

+ (NSString *)lineSeparator {
  return OrgAssertjCoreUtilSystemProperties_lineSeparator();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgAssertjCoreUtilSystemProperties_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(lineSeparator);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LINE_SEPARATOR", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &OrgAssertjCoreUtilSystemProperties_LINE_SEPARATOR };
  static const J2ObjcClassInfo _OrgAssertjCoreUtilSystemProperties = { "SystemProperties", "org.assertj.core.util", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgAssertjCoreUtilSystemProperties;
}

+ (void)initialize {
  if (self == [OrgAssertjCoreUtilSystemProperties class]) {
    JreStrongAssign(&OrgAssertjCoreUtilSystemProperties_LINE_SEPARATOR, OrgAssertjCoreUtilSystemProperties_lineSeparator());
    J2OBJC_SET_INITIALIZED(OrgAssertjCoreUtilSystemProperties)
  }
}

@end

NSString *OrgAssertjCoreUtilSystemProperties_lineSeparator() {
  OrgAssertjCoreUtilSystemProperties_initialize();
  @try {
    return JavaLangSystem_getPropertyWithNSString_(@"line.separator");
  }
  @catch (JavaLangException *e) {
    return @"\n";
  }
}

void OrgAssertjCoreUtilSystemProperties_init(OrgAssertjCoreUtilSystemProperties *self) {
  NSObject_init(self);
}

OrgAssertjCoreUtilSystemProperties *new_OrgAssertjCoreUtilSystemProperties_init() {
  J2OBJC_NEW_IMPL(OrgAssertjCoreUtilSystemProperties, init)
}

OrgAssertjCoreUtilSystemProperties *create_OrgAssertjCoreUtilSystemProperties_init() {
  J2OBJC_CREATE_IMPL(OrgAssertjCoreUtilSystemProperties, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgAssertjCoreUtilSystemProperties)
