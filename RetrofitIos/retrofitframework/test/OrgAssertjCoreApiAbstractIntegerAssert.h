//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/retrofit-doppl/retrofit/src/test/java/org/assertj/core/api/AbstractIntegerAssert.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractIntegerAssert")
#ifdef RESTRICT_OrgAssertjCoreApiAbstractIntegerAssert
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractIntegerAssert 0
#else
#define INCLUDE_ALL_OrgAssertjCoreApiAbstractIntegerAssert 1
#endif
#undef RESTRICT_OrgAssertjCoreApiAbstractIntegerAssert

#if !defined (OrgAssertjCoreApiAbstractIntegerAssert_) && (INCLUDE_ALL_OrgAssertjCoreApiAbstractIntegerAssert || defined(INCLUDE_OrgAssertjCoreApiAbstractIntegerAssert))
#define OrgAssertjCoreApiAbstractIntegerAssert_

#define RESTRICT_OrgAssertjCoreApiAbstractComparableAssert 1
#define INCLUDE_OrgAssertjCoreApiAbstractComparableAssert 1
#include "OrgAssertjCoreApiAbstractComparableAssert.h"

#define RESTRICT_OrgAssertjCoreApiNumberAssert 1
#define INCLUDE_OrgAssertjCoreApiNumberAssert 1
#include "OrgAssertjCoreApiNumberAssert.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangInteger;
@class OrgAssertjCoreApiCondition;
@class OrgAssertjCoreDescriptionDescription;
@class OrgAssertjCoreInternalIntegers;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface OrgAssertjCoreApiAbstractIntegerAssert : OrgAssertjCoreApiAbstractComparableAssert < OrgAssertjCoreApiNumberAssert > {
 @public
  OrgAssertjCoreInternalIntegers *integers_;
}

#pragma mark Public

- (OrgAssertjCoreApiAbstractIntegerAssert *)asWithNSString:(NSString *)arg0
                                         withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractIntegerAssert *)asWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)describedAsWithNSString:(NSString *)arg0
                                                  withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractIntegerAssert *)describedAsWithOrgAssertjCoreDescriptionDescription:(OrgAssertjCoreDescriptionDescription *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)doesNotHaveSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)doesNotHaveWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)hasSameClassAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)hasWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)inBinary;

- (OrgAssertjCoreApiAbstractIntegerAssert *)inHexadecimal;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isBetweenWithNSNumber:(JavaLangInteger *)start
                                                     withNSNumber:(JavaLangInteger *)end;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isEqualToWithInt:(jint)expected;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isGreaterThanWithInt:(jint)other;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isGreaterThanOrEqualToWithInt:(jint)other;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isGreaterThanOrEqualToWithJavaLangComparable:(JavaLangInteger *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isGreaterThanWithJavaLangComparable:(JavaLangInteger *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isLessThanWithInt:(jint)other;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isLessThanOrEqualToWithInt:(jint)other;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isLessThanOrEqualToWithJavaLangComparable:(JavaLangInteger *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isLessThanWithJavaLangComparable:(JavaLangInteger *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNegative;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNotEqualToWithInt:(jint)other;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNotEqualToWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNotExactlyInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNotInstanceOfAnyWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNotInstanceOfWithIOSClass:(IOSClass *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNotInWithJavaLangIterable:(id<JavaLangIterable>)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNotInWithNSObjectArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNotNegative;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNotNull;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNotOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNotPositive;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNotSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNotWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isNotZero;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isOfAnyClassInWithIOSClassArray:(IOSObjectArray *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isPositive;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isSameAsWithId:(id)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isStrictlyBetweenWithNSNumber:(JavaLangInteger *)start
                                                             withNSNumber:(JavaLangInteger *)end;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isWithOrgAssertjCoreApiCondition:(OrgAssertjCoreApiCondition *)arg0;

- (OrgAssertjCoreApiAbstractIntegerAssert *)isZero;

- (OrgAssertjCoreApiAbstractIntegerAssert *)overridingErrorMessageWithNSString:(NSString *)arg0
                                                             withNSObjectArray:(IOSObjectArray *)arg1;

- (OrgAssertjCoreApiAbstractIntegerAssert *)usingComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)customComparator;

- (OrgAssertjCoreApiAbstractIntegerAssert *)usingDefaultComparator;

#pragma mark Protected

- (instancetype)initWithJavaLangInteger:(JavaLangInteger *)actual
                           withIOSClass:(IOSClass *)selfType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgAssertjCoreApiAbstractIntegerAssert)

J2OBJC_FIELD_SETTER(OrgAssertjCoreApiAbstractIntegerAssert, integers_, OrgAssertjCoreInternalIntegers *)

FOUNDATION_EXPORT void OrgAssertjCoreApiAbstractIntegerAssert_initWithJavaLangInteger_withIOSClass_(OrgAssertjCoreApiAbstractIntegerAssert *self, JavaLangInteger *actual, IOSClass *selfType);

J2OBJC_TYPE_LITERAL_HEADER(OrgAssertjCoreApiAbstractIntegerAssert)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgAssertjCoreApiAbstractIntegerAssert")
